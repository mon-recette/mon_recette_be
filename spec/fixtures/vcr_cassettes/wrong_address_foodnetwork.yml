---
http_interactions:
- request:
    method: get
    uri: https://www.foodnetwork.com/recipes/food-network-kitchen/the-perfect-grilled-chees
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Accept-Ranges:
      - bytes
      Access-Control-Allow-Method:
      - GET
      Access-Control-Allow-Origin:
      - "*"
      Content-Security-Policy:
      - frame-ancestors 'self';
      Content-Type:
      - text/html; charset=UTF-8
      Last-Modified:
      - Thu, 08 Feb 2024 22:12:16 GMT
      Server:
      - Apache
      Strict-Transport-Security:
      - max-age=63072000; includeSubDomains
      Content-Length:
      - '300122'
      Cache-Control:
      - max-age=3045
      Expires:
      - Thu, 08 Feb 2024 23:12:46 GMT
      Date:
      - Thu, 08 Feb 2024 22:22:01 GMT
      Connection:
      - keep-alive
      Set-Cookie:
      - __ds_loc_country=US; path=/; domain=.foodnetwork.com
      - __ds_loc_state=CO; path=/; domain=.foodnetwork.com
      - layout=DESKTOP; path=/
      Server-Timing:
      - ak_p; desc="1707430921550_400543980_220349084_6612_5221_38_113_-";dur=1
      - cdn-cache; desc=MISS
      - edge; dur=22
      - origin; dur=44
      Vary:
      - User-Agent
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        <!DOCTYPE HTML>
<html  lang="en">





<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    



  







   



   
















<!-- /apps/sni-foundation/components/pages/basePage/pageCSSinclude.jsp -->





  
















<!-- perftest_asyncCSS: 0 -->






























  <link rel="preconnect" href="//food.fnr.sndimg.com"/>









  <link rel="preload" href="//food.fnr.sndimg.com/etc/clientlibs/assets/v3/css/food-desktop-include-fonts-rest.md5-4fb47ff79ac9de985990257c09fc4210.css" as="style">







  
















  <!-- critical styles -->

  <style type="text/css" data-sni-css-critical>
@charset "UTF-8";

.is-Hidden,[data-logged-in],[data-logged-out]{display:none!important}.u-LoadMoreSrc,html.js-support:not(.core-js) [data-truncate]{display:none}.has-LazyLoadedBackground{background-position:50%;background-size:cover;display:block;height:100%;width:100%}.has-LazyLoadedBackground img{opacity:0}.screenReaderOnly{clip:rect(1px,1px,1px,1px);clip-path:polygon(0 0,0 0,0 0);-webkit-clip-path:polygon(0 0,0 0,0 0);height:1px;overflow:hidden!important;position:absolute;width:1px}html{-moz-box-sizing:border-box;box-sizing:border-box}html *{-moz-box-sizing:inherit;box-sizing:inherit}body{margin-left:auto;margin-right:auto;max-width:960px}a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,button,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{border:0;font-size:100%;font:inherit;margin:0;padding:0;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}button{background:transparent;outline:none}html{-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;font-family:sans-serif}img{height:auto}*,:after,:before{box-sizing:border-box}#CQ *,#CQ :after,#CQ :before{box-sizing:content-box}html{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:subpixel-antialiased}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}input::-ms-clear{display:none}img{vertical-align:middle}.sr-only{clip:rect(1px,1px,1px,1px)!important;border:0!important;-webkit-clip-path:inset(50%)!important;clip-path:inset(50%)!important;height:1px!important;margin:-1px!important;overflow:hidden!important;padding:0!important;position:absolute!important;white-space:nowrap!important;width:1px!important}body{background:#f9f9f9;color:#1c1c1c;font-family:FranklinGothicURW-Boo,Helvetica,Arial,sans-serif;font-size:15px;line-height:1.35;max-width:none;min-width:1024px}@media print{body{font-family:Helvetica Neue,Helvetica,Arial,sans-serif;font-size:13pt}}.container-site{margin:0 auto;max-width:994px}.container-site:after,.container-site:before{clear:both;content:"";display:table}.container-site{background:#f9f9f9;box-shadow:none;position:relative}@media (min-width:1024px){.container-site{max-width:none;width:994px}.container-site.is-Fluid{background:transparent;box-shadow:none;max-width:1280px;min-width:994px;width:auto}.votePage .container-site.is-Fluid{background-color:#fff}.votePage .container-site.is-Fluid .col-md-18{width:70.5%}.votePage .container-site.is-Fluid .col-md-10{width:29.5%}}.container-site{padding:14px;width:994px}body{margin:0 auto;width:auto}.container{position:relative}.container:after,.container:before{clear:both;content:"";display:table}.container{width:994px}.container.is-Fluid{max-width:1280px;min-width:994px;width:auto}.container--wide{max-width:1280px;min-width:994px;width:100%}.container,.container-fluid{margin-left:auto;margin-right:auto}.rightRail{float:left;margin-left:14px;width:336px}a{background:transparent;color:#e6003d;text-decoration:none}a:hover{color:red;text-decoration:underline}a:active,a:focus,a:hover{outline:0}b,strong{font-family:FranklinGothicURW-Dem,Helvetica,Arial,sans-serif;font-weight:400}em,i{font-style:italic}p{margin-bottom:10.5px}#bigbox-rr-ad,.bigbox-height-enforced{box-sizing:content-box;min-height:250px}#dfp_leaderboard{min-height:90px}#bigbox-rr-ad.is-AdCollapsed,#dfp_leaderboard.is-AdCollapsed,.is-AdCollapsed,.o-Leaderboard.is-AdCollapsed{min-height:inherit}.bigbox-ad{margin:0 0 14px;padding:0;position:relative;text-align:center}.bigbox-ad .ad-text{color:#999;font-family:FranklinGothicURW-Boo,Helvetica,Arial,sans-serif;font-size:12px;margin-top:7px;text-transform:capitalize}.bigbox-ad{display:table-cell;vertical-align:middle}.bigbox-ad.rr-ad{clear:both;display:block}.o-ArticleStream div[data-has-ad=dfp_leaderboard_body]{margin-bottom:49px;margin-top:56px}#_fw_container_900x650slot{display:none}#photo-gallery.interstitial-show .rsArrow.force-show,.pv-content-wrapper.interstitial-show .rsArrow.force-show{display:block!important}.a-Icon{height:30px;width:30px}.a-LazyImage{display:none}.js-support .a-LazyImage{display:block}.a-Loader{bottom:0;height:10px;left:0;margin:auto;position:absolute;right:0;top:0;width:65px}.a-Loader div{animation-direction:linear;animation-duration:2s;animation-iteration-count:infinite;animation-name:bounce_loadingdot;border-radius:5px;float:left;height:10px;margin-left:3.5px;opacity:0;width:10px}.a-Loader div:nth-child(1n){background:#faa}.a-Loader div:nth-child(2n){animation-delay:.25s;background:#f55}.a-Loader div:nth-child(3n){animation-delay:.5s;background:red}.a-Loader div:nth-child(4n){animation-delay:.75s;background:#dd0101}@-moz-keyframes bounce_loadingdot{50%{opacity:1}}@-webkit-keyframes bounce_loadingdot{50%{opacity:1}}@-o-keyframes bounce_loadingdot{50%{opacity:1}}@keyframes bounce_loadingdot{50%{opacity:1}}.is-Subtle .a-Loader div:nth-child(1n),.is-Subtle .a-Loader div:nth-child(2n),.is-Subtle .a-Loader div:nth-child(3n),.is-Subtle .a-Loader div:nth-child(4n){background:#d2d1d1}.rsPreloader{height:100%;width:100%}.o-AssetTitle{clear:both}.o-AssetTitle__a-Headline{color:#1c1c1c;font-family:Franklin Gothic URW Cond Medium,Helvetica,Arial,sans-serif;font-size:48px;line-height:1;margin:7px 0}.videoPlaylistPage .o-AssetTitle__a-Headline{font-family:Franklin Gothic URW Cond Medium,Helvetica,Arial,sans-serif;font-size:28px;font-weight:400;line-height:1;margin-bottom:28px;margin-top:0}.videoPlaylistPage .o-AssetTitle__a-HeadlineText{position:relative;top:21px}.o-FooterFresh{background:#292929;margin:21px 0 0;position:relative;text-align:center}.o-FooterFresh li{display:inline-block;position:relative}.o-FooterFresh{padding:42px 14px}.o-FooterFresh__m-Body{margin:0 auto;max-width:1280px}.o-FooterFresh__m-Info a,.o-FooterFresh__m-Info a:visited{color:#ababaa;font-size:12px}.o-FooterFresh__m-Info .m-DropdownMenu{font-size:15px}.o-FooterFresh__m-Info .m-DropdownMenu a,.o-FooterFresh__m-Info .m-DropdownMenu a:visited{display:block;padding:3.5px 0}.o-FooterFresh__m-Info .m-DropdownMenu li{position:relative}.o-FooterFresh__m-Info .m-DropdownMenu{background:#fff;border-radius:3px;max-height:300px;min-width:180px;overflow-x:auto;padding:7px 14px}.o-FooterFresh__m-Info .m-DropdownMenu li{border-bottom:1px dotted #333;padding:7px 0 3.5px}.o-FooterFresh__m-Info .m-DropdownMenu li a,.o-FooterFresh__m-Info .m-DropdownMenu li a:active,.o-FooterFresh__m-Info .m-DropdownMenu li a:hover,.o-FooterFresh__m-Info .m-DropdownMenu li a:visited{color:#1c1c1c}.o-FooterFresh__m-Info .m-DropdownMenu li:last-child{border-bottom:none}.o-FooterFresh__m-Info .m-DropdownMenu{bottom:100%;box-shadow:0 -1px 6px rgba(0,0,0,.25);display:none;left:50%;margin-top:0;max-height:none;overflow-x:visible;position:absolute;text-align:left;z-index:10000}.o-FooterFresh__m-Info .m-DropdownMenu li,.o-FooterFresh__m-Info li.is-Expanded .m-DropdownMenu,.o-FooterFresh__m-Info.is-Open .m-DropdownMenu,html:not(.core-js) .o-FooterFresh__m-Info li:hover .m-DropdownMenu,html:not(.core-js) .o-FooterFresh__m-Info:hover .m-DropdownMenu{display:block}.o-FooterFresh__m-Info .has-DropdownMenu{border-right:1px solid #333;margin-right:14px;padding-right:14px}.o-FooterFresh__m-Info .has-DropdownMenu:after{-webkit-font-feature-settings:"liga";-moz-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";color:#999;content:"";display:inline-block;font-family:fn-icons;font-size:10px;font-style:normal;font-weight:400;line-height:1;text-transform:none}.o-FooterFresh__m-Info .has-DropdownMenu:after:hover{text-decoration:none}.o-FooterFresh__m-Info .has-DropdownMenu:hover{color:#fff}.o-FooterFresh .m-Body__m-PromoList{font-size:15px}.o-FooterFresh .m-Body__m-PromoList a,.o-FooterFresh .m-Body__m-PromoList a:visited{color:#fff;padding:4px}.o-FooterFresh .m-Body__m-PromoList a:hover,.o-FooterFresh .m-Body__m-PromoList a:visited:hover{color:#fff}.o-FooterFresh .m-Body__m-PromoList li{margin-bottom:7px;padding:0 7px}.o-FooterFresh .m-Body__m-PromoList button{color:#fff}.o-FooterFresh .m-Body__m-PromoList button:hover{cursor:pointer;text-decoration:underline}.o-FooterFresh .o-FooterFresh__m-Brands{position:relative}.o-FooterFresh .o-FooterFresh__m-Brands a:active,.o-FooterFresh .o-FooterFresh__m-Brands a:hover{cursor:pointer}.o-FooterFresh .o-FooterFresh__m-Brands>a{color:#999;cursor:default;font-size:12px}.o-FooterFresh .has-DropdownMenu{border-right:1px solid #333;margin-right:14px;padding-right:14px}.o-FooterFresh .has-DropdownMenu:after{-webkit-font-feature-settings:"liga";-moz-font-feature-settings:"liga";-ms-font-feature-settings:"liga" 1;-o-font-feature-settings:"liga";font-feature-settings:"liga";color:#999;content:"";display:inline-block;font-family:fn-icons;font-size:10px;font-style:normal;font-weight:400;line-height:1;text-transform:none}.o-FooterFresh .has-DropdownMenu:after:hover{text-decoration:none}.o-FooterFresh .has-DropdownMenu:hover{color:#fff}.o-FooterFresh .o-FooterFresh__a-Copyright{color:#999;font-size:12px}.o-FooterFresh .m-Body__m-PromoList{margin-bottom:14px}

</style>

  <!-- end critical styles -->















<link rel="stylesheet" type="text/css" href="//food.fnr.sndimg.com/etc/clientlibs/assets/v3/css/food-desktop-include-fonts-rest.md5-4fb47ff79ac9de985990257c09fc4210.css" data-sni-css-v2="food"/>










  























  

















  














  
  <link rel="stylesheet" type="text/css" href="//food.fnr.sndimg.com/etc/clientlibs/assets/v3/css/food/templates/universalLandingPage.desktop.md5-5b2e6656f911a1de940cfa219e598fe9.css"/>















<link rel="stylesheet" href="//food.fnr.sndimg.com/etc/clientlibs/ad-specific.min.md5-d41d8cd98f00b204e9800998ecf8427e.css" type="text/css">



  
  
  
  <!-- New Relic Browser snippet , should be before everything else -->

  <script type="text/javascript">
    (function (){
      var percentEnabled = parseInt("25") || 5;//Default value is set to 5% if the config value is not set
      var rand = 0;
      var enableForAutomation = false;
      var urlParams;
      var observer, entries, entry, metric, cls;
      if ("URLSearchParams" in window){//This may not be present in IE
        urlParams = new URLSearchParams(window.location.search);
        enableForAutomation = urlParams.get("enableForAutomation") || false;
      }

      if (percentEnabled < 100)
        rand = Math.floor(Math.random() * 100); // assign the user into a bucket between 0 and 99

      if (percentEnabled == 100 || rand < percentEnabled || enableForAutomation) {

        // ADD UPDATES FOR NEW RELIC: Copy and replace all new relic code
        ;window.NREUM||(NREUM={});NREUM.init={privacy:{cookies_enabled:true}};
        ;NREUM.loader_config={accountID:"605604",trustKey:"2006878",agentID:"18919466",licenseKey:"7ce026ff1f",applicationID:"18918664"};
        ;NREUM.info={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",licenseKey:"7ce026ff1f",applicationID:"18918664",sa:1};
        ;(()=>{"use strict";var e,t,r={9071:(e,t,r)=>{r.d(t,{I:()=>n});var n=0,i=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);i&&(n=+i[1])},8768:(e,t,r)=>{r.d(t,{T:()=>n,p:()=>i});const n=/(iPad|iPhone|iPod)/g.test(navigator.userAgent),i=n&&Boolean("undefined"==typeof SharedWorker)},880:(e,t,r)=>{r.d(t,{P_:()=>l,Mt:()=>g,C5:()=>s,DL:()=>v,OP:()=>T,lF:()=>D,Yu:()=>y,Dg:()=>h,CX:()=>c,GE:()=>b,sU:()=>_});var n=r(6797),i=r(4286);const o={beacon:n.ce.beacon,errorBeacon:n.ce.errorBeacon,licenseKey:void 0,applicationID:void 0,sa:void 0,queueTime:void 0,applicationTime:void 0,ttGuid:void 0,user:void 0,account:void 0,product:void 0,extra:void 0,jsAttributes:{},userAttributes:void 0,atts:void 0,transactionName:void 0,tNamePlain:void 0},a={};function s(e){if(!e)throw new Error("All info objects require an agent identifier!");if(!a[e])throw new Error("Info for ".concat(e," was never set"));return a[e]}function c(e,t){if(!e)throw new Error("All info objects require an agent identifier!");a[e]=(0,i.D)(t,o),(0,n.Qy)(e,a[e],"info")}var u=r(2797);const d=()=>{const e={blockSelector:"[data-nr-block]",maskInputOptions:{password:!0}};return{allow_bfcache:!0,privacy:{cookies_enabled:!0},ajax:{deny_list:void 0,enabled:!0,harvestTimeSeconds:10},distributed_tracing:{enabled:void 0,exclude_newrelic_header:void 0,cors_use_newrelic_header:void 0,cors_use_tracecontext_headers:void 0,allowed_origins:void 0},session:{domain:void 0,expiresMs:u.oD,inactiveMs:u.Hb},ssl:void 0,obfuscate:void 0,jserrors:{enabled:!0,harvestTimeSeconds:10},metrics:{enabled:!0},page_action:{enabled:!0,harvestTimeSeconds:30},page_view_event:{enabled:!0},page_view_timing:{enabled:!0,harvestTimeSeconds:30,long_task:!1},session_trace:{enabled:!0,harvestTimeSeconds:10},session_replay:{enabled:!1,harvestTimeSeconds:60,sampleRate:.1,errorSampleRate:.1,maskTextSelector:"*",maskAllInputs:!0,get blockClass(){return"nr-block"},get ignoreClass(){return"nr-ignore"},get maskTextClass(){return"nr-mask"},get blockSelector(){return e.blockSelector},set blockSelector(t){e.blockSelector+=",".concat(t)},get maskInputOptions(){return e.maskInputOptions},set maskInputOptions(t){e.maskInputOptions={...t,password:!0}}},spa:{enabled:!0,harvestTimeSeconds:10}}},f={};function l(e){if(!e)throw new Error("All configuration objects require an agent identifier!");if(!f[e])throw new Error("Configuration for ".concat(e," was never set"));return f[e]}function h(e,t){if(!e)throw new Error("All configuration objects require an agent identifier!");f[e]=(0,i.D)(t,d()),(0,n.Qy)(e,f[e],"config")}function g(e,t){if(!e)throw new Error("All configuration objects require an agent identifier!");var r=l(e);if(r){for(var n=t.split("."),i=0;i<n.length-1;i++)if("object"!=typeof(r=r[n[i]]))return;r=r[n[n.length-1]]}return r}const p={accountID:void 0,trustKey:void 0,agentID:void 0,licenseKey:void 0,applicationID:void 0,xpid:void 0},m={};function v(e){if(!e)throw new Error("All loader-config objects require an agent identifier!");if(!m[e])throw new Error("LoaderConfig for ".concat(e," was never set"));return m[e]}function b(e,t){if(!e)throw new Error("All loader-config objects require an agent identifier!");m[e]=(0,i.D)(t,p),(0,n.Qy)(e,m[e],"loader_config")}const y=(0,n.mF)().o;var w=r(2374),x=r(1651);const E={buildEnv:x.Re,bytesSent:{},queryBytesSent:{},customTransaction:void 0,disabled:!1,distMethod:x.gF,isolatedBacklog:!1,loaderType:void 0,maxBytes:3e4,offset:Math.floor(w._A?.performance?.timeOrigin||w._A?.performance?.timing?.navigationStart||Date.now()),onerror:void 0,origin:""+w._A.location,ptid:void 0,releaseIds:{},session:void 0,xhrWrappable:"function"==typeof w._A.XMLHttpRequest?.prototype?.addEventListener,version:x.q4},A={};function T(e){if(!e)throw new Error("All runtime objects require an agent identifier!");if(!A[e])throw new Error("Runtime for ".concat(e," was never set"));return A[e]}function _(e,t){if(!e)throw new Error("All runtime objects require an agent identifier!");A[e]=(0,i.D)(t,E),(0,n.Qy)(e,A[e],"runtime")}function D(e){return function(e){try{const t=s(e);return!!t.licenseKey&&!!t.errorBeacon&&!!t.applicationID}catch(e){return!1}}(e)}},4286:(e,t,r)=>{r.d(t,{D:()=>i});var n=r(8610);function i(e,t){try{if(!e||"object"!=typeof e)return(0,n.Z)("Setting a Configurable requires an object as input");if(!t||"object"!=typeof t)return(0,n.Z)("Setting a Configurable requires a model to set its initial properties");const r=Object.create(Object.getPrototypeOf(t),Object.getOwnPropertyDescriptors(t)),o=0===Object.keys(r).length?e:r;for(let a in o)if(void 0!==e[a])try{"object"==typeof e[a]&&"object"==typeof t[a]?r[a]=i(e[a],t[a]):r[a]=e[a]}catch(e){(0,n.Z)("An error occurred while setting a property of a Configurable",e)}return r}catch(e){(0,n.Z)("An error occured while setting a Configurable",e)}}},1651:(e,t,r)=>{r.d(t,{Re:()=>i,gF:()=>o,q4:()=>n});const n="1.234.0",i="PROD",o="CDN"},9557:(e,t,r)=>{r.d(t,{w:()=>o});var n=r(8610);const i={agentIdentifier:"",ee:void 0};class o{constructor(e){try{if("object"!=typeof e)return(0,n.Z)("shared context requires an object as input");this.sharedContext={},Object.assign(this.sharedContext,i),Object.entries(e).forEach((e=>{let[t,r]=e;Object.keys(i).includes(t)&&(this.sharedContext[t]=r)}))}catch(e){(0,n.Z)("An error occured while setting SharedContext",e)}}}},4329:(e,t,r)=>{r.d(t,{L:()=>d,R:()=>c});var n=r(3752),i=r(7022),o=r(4045),a=r(2325);const s={};function c(e,t){const r={staged:!1,priority:a.p[t]||0};u(e),s[e].get(t)||s[e].set(t,r)}function u(e){e&&(s[e]||(s[e]=new Map))}function d(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"feature";if(u(e),!e||!s[e].get(t))return a(t);s[e].get(t).staged=!0;const r=[...s[e]];function a(t){const r=e?n.ee.get(e):n.ee,a=o.X.handlers;if(r.backlog&&a){var s=r.backlog[t],c=a[t];if(c){for(var u=0;s&&u<s.length;++u)f(s[u],c);(0,i.D)(c,(function(e,t){(0,i.D)(t,(function(t,r){r[0].on(e,r[1])}))}))}delete a[t],r.backlog[t]=null,r.emit("drain-"+t,[])}}r.every((e=>{let[t,r]=e;return r.staged}))&&(r.sort(((e,t)=>e[1].priority-t[1].priority)),r.forEach((e=>{let[t]=e;a(t)})))}function f(e,t){var r=e[1];(0,i.D)(t[r],(function(t,r){var n=e[0];if(r[0]===n){var i=r[1],o=e[3],a=e[2];i.apply(o,a)}}))}},3752:(e,t,r)=>{r.d(t,{c:()=>f,ee:()=>u});var n=r(6797),i=r(3916),o=r(7022),a=r(880),s="nr@context";let c=(0,n.fP)();var u;function d(){}function f(e){return(0,i.X)(e,s,l)}function l(){return new d}function h(){u.aborted=!0,u.backlog={}}c.ee?u=c.ee:(u=function e(t,r){var n={},c={},f={},g=!1;try{g=16===r.length&&(0,a.OP)(r).isolatedBacklog}catch(e){}var p={on:b,addEventListener:b,removeEventListener:y,emit:v,get:x,listeners:w,context:m,buffer:E,abort:h,aborted:!1,isBuffering:A,debugId:r,backlog:g?{}:t&&"object"==typeof t.backlog?t.backlog:{}};return p;function m(e){return e&&e instanceof d?e:e?(0,i.X)(e,s,l):l()}function v(e,r,n,i,o){if(!1!==o&&(o=!0),!u.aborted||i){t&&o&&t.emit(e,r,n);for(var a=m(n),s=w(e),d=s.length,f=0;f<d;f++)s[f].apply(a,r);var l=T()[c[e]];return l&&l.push([p,e,r,a]),a}}function b(e,t){n[e]=w(e).concat(t)}function y(e,t){var r=n[e];if(r)for(var i=0;i<r.length;i++)r[i]===t&&r.splice(i,1)}function w(e){return n[e]||[]}function x(t){return f[t]=f[t]||e(p,t)}function E(e,t){var r=T();p.aborted||(0,o.D)(e,(function(e,n){t=t||"feature",c[n]=t,t in r||(r[t]=[])}))}function A(e){return!!T()[c[e]]}function T(){return p.backlog}}(void 0,"globalEE"),c.ee=u)},9252:(e,t,r)=>{r.d(t,{E:()=>n,p:()=>i});var n=r(3752).ee.get("handle");function i(e,t,r,i,o){o?(o.buffer([e],i),o.emit(e,t,r)):(n.buffer([e],i),n.emit(e,t,r))}},4045:(e,t,r)=>{r.d(t,{X:()=>o});var n=r(9252);o.on=a;var i=o.handlers={};function o(e,t,r,o){a(o||n.E,i,e,t,r)}function a(e,t,r,i,o){o||(o="feature"),e||(e=n.E);var a=t[o]=t[o]||{};(a[r]=a[r]||[]).push([e,i])}},8544:(e,t,r)=>{r.d(t,{bP:()=>s,iz:()=>c,m$:()=>a});var n=r(2374);let i=!1,o=!1;try{const e={get passive(){return i=!0,!1},get signal(){return o=!0,!1}};n._A.addEventListener("test",null,e),n._A.removeEventListener("test",null,e)}catch(e){}function a(e,t){return i||o?{capture:!!e,passive:i,signal:t}:!!e}function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0;window.addEventListener(e,t,a(r,n))}function c(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=arguments.length>3?arguments[3]:void 0;document.addEventListener(e,t,a(r,n))}},5526:(e,t,r)=>{r.d(t,{Ht:()=>u,M:()=>c,Rl:()=>a,ky:()=>s});var n=r(2374);const i="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";function o(e,t){return e?15&e[t]:16*Math.random()|0}function a(){const e=n._A?.crypto||n._A?.msCrypto;let t,r=0;return e&&e.getRandomValues&&(t=e.getRandomValues(new Uint8Array(31))),i.split("").map((e=>"x"===e?o(t,++r).toString(16):"y"===e?(3&o()|8).toString(16):e)).join("")}function s(e){const t=n._A?.crypto||n._A?.msCrypto;let r,i=0;t&&t.getRandomValues&&(r=t.getRandomValues(new Uint8Array(31)));const a=[];for(var s=0;s<e;s++)a.push(o(r,++i).toString(16));return a.join("")}function c(){return s(16)}function u(){return s(32)}},2797:(e,t,r)=>{r.d(t,{Bq:()=>n,Hb:()=>o,oD:()=>i});const n="NRBA",i=144e5,o=18e5},2053:(e,t,r)=>{function n(){return Math.round(performance.now())}r.d(t,{z:()=>n})},6368:(e,t,r)=>{r.d(t,{e:()=>o});var n=r(2374),i={};function o(e){if(e in i)return i[e];if(0===(e||"").indexOf("data:"))return{protocol:"data"};let t;var r=n._A?.location,o={};if(n.il)t=document.createElement("a"),t.href=e;else try{t=new URL(e,r.href)}catch(e){return o}o.port=t.port;var a=t.href.split("://");!o.port&&a[1]&&(o.port=a[1].split("/")[0].split("@").pop().split(":")[1]),o.port&&"0"!==o.port||(o.port="https"===a[0]?"443":"80"),o.hostname=t.hostname||r.hostname,o.pathname=t.pathname,o.protocol=a[0],"/"!==o.pathname.charAt(0)&&(o.pathname="/"+o.pathname);var s=!t.protocol||":"===t.protocol||t.protocol===r.protocol,c=t.hostname===r.hostname&&t.port===r.port;return o.sameOrigin=s&&(!t.hostname||c),"/"===o.pathname&&(i[e]=o),o}},8610:(e,t,r)=>{function n(e,t){"function"==typeof console.warn&&(console.warn("New Relic: ".concat(e)),t&&console.warn(t))}r.d(t,{Z:()=>n})},7269:(e,t,r)=>{r.d(t,{N:()=>u,T:()=>d});var n=r(7022),i=r(3752),o=r(9252),a=r(4329),s=r(2325);const c={stn:[s.D.sessionTrace],err:[s.D.jserrors,s.D.metrics],ins:[s.D.pageAction],spa:[s.D.spa],sr:[s.D.sessionReplay]};function u(e,t){var r=i.ee.get(t);e&&"object"==typeof e&&((0,n.D)(e,(function(e,t){if(!t)return(c[e]||[]).forEach((t=>{(0,o.p)("block-"+e,[],void 0,t,r)}));d[e]||((0,o.p)("feat-"+e,[],void 0,c[e],r),d[e]=!0)})),(0,a.L)(t,s.D.pageViewEvent))}const d={}},3916:(e,t,r)=>{r.d(t,{X:()=>i});var n=Object.prototype.hasOwnProperty;function i(e,t,r){if(n.call(e,t))return e[t];var i=r();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:i,writable:!0,enumerable:!1}),i}catch(e){}return e[t]=i,i}},2374:(e,t,r)=>{r.d(t,{FN:()=>a,_A:()=>o,il:()=>n,v6:()=>i});const n=Boolean("undefined"!=typeof window&&window.document),i=Boolean("undefined"!=typeof WorkerGlobalScope&&self.navigator instanceof WorkerNavigator);let o=(()=>{if(n)return window;if(i){if("undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope)return globalThis;if(self instanceof WorkerGlobalScope)return self}throw new Error('New Relic browser agent shutting down due to error: Unable to locate global scope. This is possibly due to code redefining browser global variables like "self" and "window".')})();const a=""+o.location},7022:(e,t,r)=>{r.d(t,{D:()=>n});const n=(e,t)=>Object.entries(e||{}).map((e=>{let[r,n]=e;return t(r,n)}))},2438:(e,t,r)=>{r.d(t,{P:()=>o});var n=r(3752);const i=()=>{const e=new WeakSet;return(t,r)=>{if("object"==typeof r&&null!==r){if(e.has(r))return;e.add(r)}return r}};function o(e){try{return JSON.stringify(e,i())}catch(e){try{n.ee.emit("internal-error",[e])}catch(e){}}}},2650:(e,t,r)=>{r.d(t,{K:()=>a,b:()=>o});var n=r(8544);function i(){return"undefined"==typeof document||"complete"===document.readyState}function o(e,t){if(i())return e();(0,n.bP)("load",e,t)}function a(e){if(i())return e();(0,n.iz)("DOMContentLoaded",e)}},6797:(e,t,r)=>{r.d(t,{EZ:()=>u,Qy:()=>c,ce:()=>o,fP:()=>a,gG:()=>d,mF:()=>s});var n=r(2053),i=r(2374);const o={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net"};function a(){return i._A.NREUM||(i._A.NREUM={}),void 0===i._A.newrelic&&(i._A.newrelic=i._A.NREUM),i._A.NREUM}function s(){let e=a();return e.o||(e.o={ST:i._A.setTimeout,SI:i._A.setImmediate,CT:i._A.clearTimeout,XHR:i._A.XMLHttpRequest,REQ:i._A.Request,EV:i._A.Event,PR:i._A.Promise,MO:i._A.MutationObserver,FETCH:i._A.fetch}),e}function c(e,t,r){let i=a();const o=i.initializedAgents||{},s=o[e]||{};return Object.keys(s).length||(s.initializedAt={ms:(0,n.z)(),date:new Date}),i.initializedAgents={...o,[e]:{...s,[r]:t}},i}function u(e,t){a()[e]=t}function d(){return function(){let e=a();const t=e.info||{};e.info={beacon:o.beacon,errorBeacon:o.errorBeacon,...t}}(),function(){let e=a();const t=e.init||{};e.init={...t}}(),s(),function(){let e=a();const t=e.loader_config||{};e.loader_config={...t}}(),a()}},6998:(e,t,r)=>{r.d(t,{N:()=>i});var n=r(8544);function i(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2?arguments[2]:void 0,i=arguments.length>3?arguments[3]:void 0;return void(0,n.iz)("visibilitychange",(function(){if(t)return void("hidden"==document.visibilityState&&e());e(document.visibilityState)}),r,i)}},7264:(e,t,r)=>{r.d(t,{em:()=>v,u5:()=>N,QU:()=>j,_L:()=>I,Gm:()=>z,Lg:()=>M,gy:()=>U,BV:()=>Q,Kf:()=>ee});var n=r(3752);const i="nr@original";var o=Object.prototype.hasOwnProperty,a=!1;function s(e,t){return e||(e=n.ee),r.inPlace=function(e,t,n,i,o){n||(n="");var a,s,c,u="-"===n.charAt(0);for(c=0;c<t.length;c++)d(a=e[s=t[c]])||(e[s]=r(a,u?s+n:n,i,s,o))},r.flag=i,r;function r(t,r,n,a,s){return d(t)?t:(r||(r=""),nrWrapper[i]=t,u(t,nrWrapper,e),nrWrapper);function nrWrapper(){var i,u,d,f;try{u=this,i=[...arguments],d="function"==typeof n?n(i,u):n||{}}catch(t){c([t,"",[i,u,a],d],e)}o(r+"start",[i,u,a],d,s);try{return f=t.apply(u,i)}catch(e){throw o(r+"err",[i,u,e],d,s),e}finally{o(r+"end",[i,u,f],d,s)}}}function o(r,n,i,o){if(!a||t){var s=a;a=!0;try{e.emit(r,n,i,t,o)}catch(t){c([t,r,n,i],e)}a=s}}}function c(e,t){t||(t=n.ee);try{t.emit("internal-error",e)}catch(e){}}function u(e,t,r){if(Object.defineProperty&&Object.keys)try{return Object.keys(e).forEach((function(r){Object.defineProperty(t,r,{get:function(){return e[r]},set:function(t){return e[r]=t,t}})})),t}catch(e){c([e],r)}for(var n in e)o.call(e,n)&&(t[n]=e[n]);return t}function d(e){return!(e&&e instanceof Function&&e.apply&&!e[i])}var f=r(3916),l=r(2374);const h={},g=XMLHttpRequest,p="addEventListener",m="removeEventListener";function v(e){var t=function(e){return(e||n.ee).get("events")}(e);if(h[t.debugId]++)return t;h[t.debugId]=1;var r=s(t,!0);function i(e){r.inPlace(e,[p,m],"-",o)}function o(e,t){return e[1]}return"getPrototypeOf"in Object&&(l.il&&b(document,i),b(l._A,i),b(g.prototype,i)),t.on(p+"-start",(function(e,t){var n=e[1];if(null!==n&&("function"==typeof n||"object"==typeof n)){var i=(0,f.X)(n,"nr@wrapped",(function(){var e={object:function(){if("function"!=typeof n.handleEvent)return;return n.handleEvent.apply(n,arguments)},function:n}[typeof n];return e?r(e,"fn-",null,e.name||"anonymous"):n}));this.wrapped=e[1]=i}})),t.on(m+"-start",(function(e){e[1]=this.wrapped||e[1]})),t}function b(e,t){let r=e;for(;"object"==typeof r&&!Object.prototype.hasOwnProperty.call(r,p);)r=Object.getPrototypeOf(r);for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];r&&t(r,...i)}var y="fetch-",w=y+"body-",x=["arrayBuffer","blob","json","text","formData"],E=l._A.Request,A=l._A.Response,T="prototype",_="nr@context";const D={};function N(e){const t=function(e){return(e||n.ee).get("fetch")}(e);if(!(E&&A&&l._A.fetch))return t;if(D[t.debugId]++)return t;function r(e,r,n){var i=e[r];"function"==typeof i&&(e[r]=function(){var e,r=[...arguments],o={};t.emit(n+"before-start",[r],o),o[_]&&o[_].dt&&(e=o[_].dt);var a=i.apply(this,r);return t.emit(n+"start",[r,e],a),a.then((function(e){return t.emit(n+"end",[null,e],a),e}),(function(e){throw t.emit(n+"end",[e],a),e}))})}return D[t.debugId]=1,x.forEach((e=>{r(E[T],e,w),r(A[T],e,w)})),r(l._A,"fetch",y),t.on(y+"end",(function(e,r){var n=this;if(r){var i=r.headers.get("content-length");null!==i&&(n.rxSize=i),t.emit(y+"done",[null,r],n)}else t.emit(y+"done",[e],n)})),t}const O={},S=["pushState","replaceState"];function j(e){const t=function(e){return(e||n.ee).get("history")}(e);return!l.il||O[t.debugId]++||(O[t.debugId]=1,s(t).inPlace(window.history,S,"-")),t}var P=r(8544);const C={},R=["appendChild","insertBefore","replaceChild"];function I(e){const t=function(e){return(e||n.ee).get("jsonp")}(e);if(!l.il||C[t.debugId])return t;C[t.debugId]=!0;var r=s(t),i=/[?&](?:callback|cb)=([^&#]+)/,o=/(.*)\.([^.]+)/,a=/^(\w+)(\.|$)(.*)$/;function c(e,t){var r=e.match(a),n=r[1],i=r[3];return i?c(i,t[n]):t[n]}return r.inPlace(Node.prototype,R,"dom-"),t.on("dom-start",(function(e){!function(e){if(!e||"string"!=typeof e.nodeName||"script"!==e.nodeName.toLowerCase())return;if("function"!=typeof e.addEventListener)return;var n=(a=e.src,s=a.match(i),s?s[1]:null);var a,s;if(!n)return;var u=function(e){var t=e.match(o);if(t&&t.length>=3)return{key:t[2],parent:c(t[1],window)};return{key:e,parent:window}}(n);if("function"!=typeof u.parent[u.key])return;var d={};function f(){t.emit("jsonp-end",[],d),e.removeEventListener("load",f,(0,P.m$)(!1)),e.removeEventListener("error",l,(0,P.m$)(!1))}function l(){t.emit("jsonp-error",[],d),t.emit("jsonp-end",[],d),e.removeEventListener("load",f,(0,P.m$)(!1)),e.removeEventListener("error",l,(0,P.m$)(!1))}r.inPlace(u.parent,[u.key],"cb-",d),e.addEventListener("load",f,(0,P.m$)(!1)),e.addEventListener("error",l,(0,P.m$)(!1)),t.emit("new-jsonp",[e.src],d)}(e[0])})),t}var k=r(880);const H={};function z(e){const t=function(e){return(e||n.ee).get("mutation")}(e);if(!l.il||H[t.debugId])return t;H[t.debugId]=!0;var r=s(t),i=k.Yu.MO;return i&&(window.MutationObserver=function(e){return this instanceof i?new i(r(e,"fn-")):i.apply(this,arguments)},MutationObserver.prototype=i.prototype),t}const L={};function M(e){const t=function(e){return(e||n.ee).get("promise")}(e);if(L[t.debugId])return t;L[t.debugId]=!0;var r=n.c,o=s(t),a=k.Yu.PR;return a&&function(){function e(r){var n=t.context(),i=o(r,"executor-",n,null,!1);const s=Reflect.construct(a,[i],e);return t.context(s).getCtx=function(){return n},s}l._A.Promise=e,Object.defineProperty(e,"name",{value:"Promise"}),e.toString=function(){return a.toString()},Object.setPrototypeOf(e,a),["all","race"].forEach((function(r){const n=a[r];e[r]=function(e){let i=!1;[...e||[]].forEach((e=>{this.resolve(e).then(a("all"===r),a(!1))}));const o=n.apply(this,arguments);return o;function a(e){return function(){t.emit("propagate",[null,!i],o,!1,!1),i=i||!e}}}})),["resolve","reject"].forEach((function(r){const n=a[r];e[r]=function(e){const r=n.apply(this,arguments);return e!==r&&t.emit("propagate",[e,!0],r,!1,!1),r}})),e.prototype=a.prototype;const n=a.prototype.then;a.prototype.then=function(){var e=this,i=r(e);i.promise=e;for(var a=arguments.length,s=new Array(a),c=0;c<a;c++)s[c]=arguments[c];s[0]=o(s[0],"cb-",i,null,!1),s[1]=o(s[1],"cb-",i,null,!1);const u=n.apply(this,s);return i.nextPromise=u,t.emit("propagate",[e,!0],u,!1,!1),u},a.prototype.then[i]=n,t.on("executor-start",(function(e){e[0]=o(e[0],"resolve-",this,null,!1),e[1]=o(e[1],"resolve-",this,null,!1)})),t.on("executor-err",(function(e,t,r){e[1](r)})),t.on("cb-end",(function(e,r,n){t.emit("propagate",[n,!0],this.nextPromise,!1,!1)})),t.on("propagate",(function(e,r,n){this.getCtx&&!r||(this.getCtx=function(){if(e instanceof Promise)var r=t.context(e);return r&&r.getCtx?r.getCtx():this})}))}(),t}const B={},F="requestAnimationFrame";function U(e){const t=function(e){return(e||n.ee).get("raf")}(e);if(!l.il||B[t.debugId]++)return t;B[t.debugId]=1;var r=s(t);return r.inPlace(window,[F],"raf-"),t.on("raf-start",(function(e){e[0]=r(e[0],"fn-")})),t}const q={},G="setTimeout",V="setInterval",X="clearTimeout",Z="-start",W="-",$=[G,"setImmediate",V,X,"clearImmediate"];function Q(e){const t=function(e){return(e||n.ee).get("timer")}(e);if(q[t.debugId]++)return t;q[t.debugId]=1;var r=s(t);return r.inPlace(l._A,$.slice(0,2),G+W),r.inPlace(l._A,$.slice(2,3),V+W),r.inPlace(l._A,$.slice(3),X+W),t.on(V+Z,(function(e,t,n){e[0]=r(e[0],"fn-",null,n)})),t.on(G+Z,(function(e,t,n){this.method=n,this.timerDuration=isNaN(e[1])?0:+e[1],e[0]=r(e[0],"fn-",this,n)})),t}var Y=r(8610);const K={},J=["open","send"];function ee(e){var t=e||n.ee;const r=function(e){return(e||n.ee).get("xhr")}(t);if(K[r.debugId]++)return r;K[r.debugId]=1,v(t);var i=s(r),o=k.Yu.XHR,a=k.Yu.MO,c=k.Yu.PR,u=k.Yu.SI,d="readystatechange",f=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],h=[],g=l._A.XMLHttpRequest.listeners,p=l._A.XMLHttpRequest=function(e){var t=new o(e);function n(){try{r.emit("new-xhr",[t],t),t.addEventListener(d,b,(0,P.m$)(!1))}catch(e){(0,Y.Z)("An error occured while intercepting XHR",e);try{r.emit("internal-error",[e])}catch(e){}}}return this.listeners=g?[...g,n]:[n],this.listeners.forEach((e=>e())),t};function m(e,t){i.inPlace(t,["onreadystatechange"],"fn-",A)}function b(){var e=this,t=r.context(e);e.readyState>3&&!t.resolved&&(t.resolved=!0,r.emit("xhr-resolved",[],e)),i.inPlace(e,f,"fn-",A)}if(function(e,t){for(var r in e)t[r]=e[r]}(o,p),p.prototype=o.prototype,i.inPlace(p.prototype,J,"-xhr-",A),r.on("send-xhr-start",(function(e,t){m(e,t),function(e){h.push(e),a&&(y?y.then(E):u?u(E):(w=-w,x.data=w))}(t)})),r.on("open-xhr-start",m),a){var y=c&&c.resolve();if(!u&&!c){var w=1,x=document.createTextNode(w);new a(E).observe(x,{characterData:!0})}}else t.on("fn-end",(function(e){e[0]&&e[0].type===d||E()}));function E(){for(var e=0;e<h.length;e++)m(0,h[e]);h.length&&(h=[])}function A(e,t){return t}return r}},8675:(e,t,r)=>{r.d(t,{t:()=>n});const n=r(2325).D.ajax},8322:(e,t,r)=>{r.d(t,{A:()=>i,t:()=>n});const n=r(2325).D.jserrors,i="nr@seenError"},6034:(e,t,r)=>{r.d(t,{gF:()=>o,mY:()=>i,t9:()=>n,vz:()=>s,xS:()=>a});const n=r(2325).D.metrics,i="sm",o="cm",a="storeSupportabilityMetrics",s="storeEventMetrics"},6486:(e,t,r)=>{r.d(t,{t:()=>n});const n=r(2325).D.pageAction},2484:(e,t,r)=>{r.d(t,{Dz:()=>i,OJ:()=>a,qw:()=>o,t9:()=>n});const n=r(2325).D.pageViewEvent,i="firstbyte",o="domcontent",a="windowload"},6382:(e,t,r)=>{r.d(t,{t:()=>n});const n=r(2325).D.pageViewTiming},2628:(e,t,r)=>{r.d(t,{BST_RESOURCE:()=>i,BST_TIMER:()=>d,END:()=>s,FEATURE_NAME:()=>n,FN_END:()=>u,FN_START:()=>c,PUSH_STATE:()=>f,RESOURCE:()=>o,START:()=>a});const n=r(2325).D.sessionTrace,i="bstResource",o="resource",a="-start",s="-end",c="fn"+a,u="fn"+s,d="bstTimer",f="pushState"},755:(e,t,r)=>{r.d(t,{BODY:()=>E,CB_END:()=>A,CB_START:()=>u,END:()=>x,FEATURE_NAME:()=>i,FETCH:()=>_,FETCH_BODY:()=>v,FETCH_DONE:()=>m,FETCH_START:()=>p,FN_END:()=>c,FN_START:()=>s,INTERACTION:()=>l,INTERACTION_API:()=>d,INTERACTION_EVENTS:()=>o,JSONP_END:()=>b,JSONP_NODE:()=>g,JS_TIME:()=>T,MAX_TIMER_BUDGET:()=>a,REMAINING:()=>f,SPA_NODE:()=>h,START:()=>w,originalSetTimeout:()=>y});var n=r(880);r(2374);const i=r(2325).D.spa,o=["click","submit","keypress","keydown","keyup","change"],a=999,s="fn-start",c="fn-end",u="cb-start",d="api-ixn-",f="remaining",l="interaction",h="spaNode",g="jsonpNode",p="fetch-start",m="fetch-done",v="fetch-body-",b="jsonp-end",y=n.Yu.ST,w="-start",x="-end",E="-body",A="cb"+x,T="jsTime",_="fetch"},1509:(e,t,r)=>{r.d(t,{W:()=>o});var n=r(880),i=r(3752);class o{constructor(e,t,r){this.agentIdentifier=e,this.aggregator=t,this.ee=i.ee.get(e,(0,n.OP)(this.agentIdentifier).isolatedBacklog),this.featureName=r,this.blocked=!1}}},3975:(e,t,r)=>{r.d(t,{j:()=>m});var n=r(2325),i=r(880),o=r(9252),a=r(3752),s=r(2053),c=r(4329),u=r(2650),d=r(2374),f=r(8610),l=r(6034),h=r(6797);function g(){const e=(0,h.gG)();["setErrorHandler","finished","addToTrace","inlineHit","addRelease","addPageAction","setCurrentRouteName","setPageViewName","setCustomAttribute","interaction","noticeError","setUserId"].forEach((t=>{e[t]=function(){for(var r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];return function(t){for(var r=arguments.length,n=new Array(r>1?r-1:0),i=1;i<r;i++)n[i-1]=arguments[i];let o=[];return Object.values(e.initializedAgents).forEach((e=>{e.exposed&&e.api[t]&&o.push(e.api[t](...n))})),o.length>1?o:o[0]}(t,...n)}}))}var p=r(7269);function m(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},m=arguments.length>2?arguments[2]:void 0,v=arguments.length>3?arguments[3]:void 0,{init:b,info:y,loader_config:w,runtime:x={loaderType:m},exposed:E=!0}=t;const A=(0,h.gG)();y||(b=A.init,y=A.info,w=A.loader_config),(0,i.Dg)(e,b||{}),(0,i.GE)(e,w||{}),(0,i.sU)(e,x),y.jsAttributes??={},d.v6&&(y.jsAttributes.isWorker=!0),(0,i.CX)(e,y),g();const T=function(e,t){t||(0,c.R)(e,"api");const h={};var g=a.ee.get(e),p=g.get("tracer"),m="api-",v=m+"ixn-";function b(t,r,n,o){const a=(0,i.C5)(e);return null===r?delete a.jsAttributes[t]:(0,i.CX)(e,{...a,jsAttributes:{...a.jsAttributes,[t]:r}}),x(m,n,!0,o||null===r?"session":void 0)(t,r)}function y(){}["setErrorHandler","finished","addToTrace","inlineHit","addRelease"].forEach((e=>h[e]=x(m,e,!0,"api"))),h.addPageAction=x(m,"addPageAction",!0,n.D.pageAction),h.setCurrentRouteName=x(m,"routeName",!0,n.D.spa),h.setPageViewName=function(t,r){if("string"==typeof t)return"/"!==t.charAt(0)&&(t="/"+t),(0,i.OP)(e).customTransaction=(r||"http://custom.transaction")+t,x(m,"setPageViewName",!0)()},h.setCustomAttribute=function(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if("string"==typeof e){if(["string","number"].includes(typeof t)||null===t)return b(e,t,"setCustomAttribute",r);(0,f.Z)("Failed to execute setCustomAttribute.\nNon-null value must be a string or number type, but a type of <".concat(typeof t,"> was provided."))}else(0,f.Z)("Failed to execute setCustomAttribute.\nName must be a string type, but a type of <".concat(typeof e,"> was provided."))},h.setUserId=function(e){if("string"==typeof e||null===e)return b("enduser.id",e,"setUserId",!0);(0,f.Z)("Failed to execute setUserId.\nNon-null value must be a string type, but a type of <".concat(typeof e,"> was provided."))},h.interaction=function(){return(new y).get()};var w=y.prototype={createTracer:function(e,t){var r={},i=this,a="function"==typeof t;return(0,o.p)(v+"tracer",[(0,s.z)(),e,r],i,n.D.spa,g),function(){if(p.emit((a?"":"no-")+"fn-start",[(0,s.z)(),i,a],r),a)try{return t.apply(this,arguments)}catch(e){throw p.emit("fn-err",[arguments,this,"string"==typeof e?new Error(e):e],r),e}finally{p.emit("fn-end",[(0,s.z)()],r)}}}};function x(e,t,r,i){return function(){return(0,o.p)(l.xS,["API/"+t+"/called"],void 0,n.D.metrics,g),i&&(0,o.p)(e+t,[(0,s.z)(),...arguments],r?null:this,i,g),r?void 0:this}}function E(){r.e(439).then(r.bind(r,5692)).then((t=>{let{setAPI:r}=t;r(e),(0,c.L)(e,"api")})).catch((()=>(0,f.Z)("Downloading runtime APIs failed...")))}return["actionText","setName","setAttribute","save","ignore","onEnd","getContext","end","get"].forEach((e=>{w[e]=x(v,e,void 0,n.D.spa)})),h.noticeError=function(e,t){"string"==typeof e&&(e=new Error(e)),(0,o.p)(l.xS,["API/noticeError/called"],void 0,n.D.metrics,g),(0,o.p)("err",[e,(0,s.z)(),!1,t],void 0,n.D.jserrors,g)},d.v6?E():(0,u.b)((()=>E()),!0),h}(e,v);return(0,h.Qy)(e,T,"api"),(0,h.Qy)(e,E,"exposed"),(0,h.EZ)("activatedFeatures",p.T),T}},2325:(e,t,r)=>{r.d(t,{D:()=>n,p:()=>i});const n={ajax:"ajax",jserrors:"jserrors",metrics:"metrics",pageAction:"page_action",pageViewEvent:"page_view_event",pageViewTiming:"page_view_timing",sessionReplay:"session_replay",sessionTrace:"session_trace",spa:"spa"},i={[n.pageViewEvent]:1,[n.pageViewTiming]:2,[n.metrics]:3,[n.jserrors]:4,[n.ajax]:5,[n.sessionTrace]:6,[n.pageAction]:7,[n.spa]:8,[n.sessionReplay]:9}}},n={};function i(e){var t=n[e];if(void 0!==t)return t.exports;var o=n[e]={exports:{}};return r[e](o,o.exports,i),o.exports}i.m=r,i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,r)=>(i.f[r](e,t),t)),[])),i.u=e=>(({78:"page_action-aggregate",147:"metrics-aggregate",193:"session_trace-aggregate",242:"session-manager",317:"jserrors-aggregate",348:"page_view_timing-aggregate",412:"lazy-feature-loader",439:"async-api",538:"recorder",590:"session_replay-aggregate",675:"compressor",786:"page_view_event-aggregate",873:"spa-aggregate",898:"ajax-aggregate"}[e]||e)+"."+{78:"e03e2220",147:"75d6a08d",193:"715c3096",242:"9219a813",286:"d701d70f",317:"8c74e315",348:"ad791b05",412:"fe5af5d1",439:"bbe52263",538:"1b18459f",590:"36b41a12",646:"c6971123",675:"ae9f91a8",786:"e157f7ce",873:"e1bcad73",898:"716f46cf"}[e]+"-1.234.0.min.js"),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="NRBA:",i.l=(r,n,o,a)=>{if(e[r])e[r].push(n);else{var s,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),d=0;d<u.length;d++){var f=u[d];if(f.getAttribute("src")==r||f.getAttribute("data-webpack")==t+o){s=f;break}}s||(c=!0,(s=document.createElement("script")).charset="utf-8",s.timeout=120,i.nc&&s.setAttribute("nonce",i.nc),s.setAttribute("data-webpack",t+o),s.src=r),e[r]=[n];var l=(t,n)=>{s.onerror=s.onload=null,clearTimeout(h);var i=e[r];if(delete e[r],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(n))),t)return t(n)},h=setTimeout(l.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=l.bind(null,s.onerror),s.onload=l.bind(null,s.onload),c&&document.head.appendChild(s)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.j=20,i.p="https://js-agent.newrelic.com/",(()=>{var e={20:0,73:0};i.f.j=(t,r)=>{var n=i.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,i)=>n=e[t]=[r,i]));r.push(n[2]=o);var a=i.p+i.u(t),s=new Error;i.l(a,(r=>{if(i.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",s.name="ChunkLoadError",s.type=o,s.request=a,n[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[a,s,c]=r,u=0;if(a.some((t=>0!==e[t]))){for(n in s)i.o(s,n)&&(i.m[n]=s[n]);if(c)c(i)}for(t&&t(r);u<a.length;u++)o=a[u],i.o(e,o)&&e[o]&&e[o][0](),e[o]=0},r=window.webpackChunkNRBA=window.webpackChunkNRBA||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var o={};(()=>{i.r(o);var e=i(2325),t=i(880);const r=Object.values(e.D);function n(e){const n={};return r.forEach((r=>{n[r]=function(e,r){return!1!==(0,t.Mt)(r,"".concat(e,".enabled"))}(r,e)})),n}var a=i(3975);var s=i(9252),c=i(8768),u=i(4329),d=i(1509),f=i(2650),l=i(2374),h=i(8610);class g extends d.W{constructor(e,t,r){let n=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];super(e,t,r),this.hasAggregator=!1,this.auto=n,this.abortHandler,n&&(0,u.R)(e,r)}importAggregator(r){if(this.hasAggregator||!this.auto)return;let n,o;this.hasAggregator=!0,!0!==(0,t.Mt)(this.agentIdentifier,"privacy.cookies_enabled")||l.v6||(o=Promise.all([i.e(286),i.e(242)]).then(i.bind(i,3289)).catch((e=>{(0,h.Z)("failed to import the session manager",e)})));const a=async()=>{try{if(o&&!n){const{setupAgentSession:e}=await o;n=e(this.agentIdentifier)}if(!function(t,r){return t!==e.D.sessionReplay||(!!r?.isNew||!!r?.state.sessionReplayActive)}(this.featureName,n))return void(0,u.L)(this.agentIdentifier,this.featureName);const{lazyFeatureLoader:t}=await i.e(412).then(i.bind(i,3160)),{Aggregate:a}=await t(this.featureName,"aggregate");new a(this.agentIdentifier,this.aggregator,r)}catch(e){(0,h.Z)("Downloading ".concat(this.featureName," failed..."),e),this.abortHandler?.()}};l.v6?a():(0,f.b)((()=>a()),!0)}}var p=i(2484),m=i(2053);class v extends g{static featureName=p.t9;constructor(r,n){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(super(r,n,p.t9,i),("undefined"==typeof PerformanceNavigationTiming||c.T)&&"undefined"!=typeof PerformanceTiming){const n=(0,t.OP)(r);n[p.Dz]=Math.max(Date.now()-n.offset,0),(0,f.K)((()=>n[p.qw]=Math.max((0,m.z)()-n[p.Dz],0))),(0,f.b)((()=>{const t=(0,m.z)();n[p.OJ]=Math.max(t-n[p.Dz],0),(0,s.p)("timing",["load",t],void 0,e.D.pageViewTiming,this.ee)}))}this.importAggregator()}}var b=i(9557),y=i(7022);class w extends b.w{constructor(e){super(e),this.aggregatedData={}}store(e,t,r,n,i){var o=this.getBucket(e,t,r,i);return o.metrics=function(e,t){t||(t={count:0});return t.count+=1,(0,y.D)(e,(function(e,r){t[e]=x(r,t[e])})),t}(n,o.metrics),o}merge(e,t,r,n,i){var o=this.getBucket(e,t,n,i);if(o.metrics){var a=o.metrics;a.count+=r.count,(0,y.D)(r,(function(e,t){if("count"!==e){var n=a[e],i=r[e];i&&!i.c?a[e]=x(i.t,n):a[e]=function(e,t){if(!t)return e;t.c||(t=E(t.t));return t.min=Math.min(e.min,t.min),t.max=Math.max(e.max,t.max),t.t+=e.t,t.sos+=e.sos,t.c+=e.c,t}(i,a[e])}}))}else o.metrics=r}storeMetric(e,t,r,n){var i=this.getBucket(e,t,r);return i.stats=x(n,i.stats),i}getBucket(e,t,r,n){this.aggregatedData[e]||(this.aggregatedData[e]={});var i=this.aggregatedData[e][t];return i||(i=this.aggregatedData[e][t]={params:r||{}},n&&(i.custom=n)),i}get(e,t){return t?this.aggregatedData[e]&&this.aggregatedData[e][t]:this.aggregatedData[e]}take(e){for(var t={},r="",n=!1,i=0;i<e.length;i++)t[r=e[i]]=A(this.aggregatedData[r]),t[r].length&&(n=!0),delete this.aggregatedData[r];return n?t:null}}function x(e,t){return null==e?function(e){e?e.c++:e={c:1};return e}(t):t?(t.c||(t=E(t.t)),t.c+=1,t.t+=e,t.sos+=e*e,e>t.max&&(t.max=e),e<t.min&&(t.min=e),t):{t:e}}function E(e){return{t:e,min:e,max:e,sos:e*e,c:1}}function A(e){return"object"!=typeof e?[]:(0,y.D)(e,T)}function T(e,t){return t}var _=i(6797),D=i(5526),N=i(2438);var O=i(6998),S=i(8544),j=i(6382);class P extends g{static featureName=j.t;constructor(e,r){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,r,j.t,n),l.il&&((0,t.OP)(e).initHidden=Boolean("hidden"===document.visibilityState),(0,O.N)((()=>(0,s.p)("docHidden",[(0,m.z)()],void 0,j.t,this.ee)),!0),(0,S.bP)("pagehide",(()=>(0,s.p)("winPagehide",[(0,m.z)()],void 0,j.t,this.ee))),this.importAggregator())}}var C=i(6034);class R extends g{static featureName=C.t9;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,C.t9,r),this.importAggregator()}}var I,k=i(3916),H=i(7264),z=i(3752),L={};try{I=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(L.console=!0,-1!==I.indexOf("dev")&&(L.dev=!0),-1!==I.indexOf("nr_dev")&&(L.nrDev=!0))}catch(e){}function M(e){try{L.console&&M(e)}catch(e){}}L.nrDev&&z.ee.on("internal-error",(function(e){M(e.stack)})),L.dev&&z.ee.on("fn-err",(function(e,t,r){M(r.stack)})),L.dev&&(M("NR AGENT IN DEVELOPMENT MODE"),M("flags: "+(0,y.D)(L,(function(e,t){return e})).join(", ")));var B=i(8322);class F extends g{static featureName=B.t;constructor(r,n){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(r,n,B.t,i),this.skipNext=0;try{this.removeOnAbort=new AbortController}catch(e){}const o=this;o.ee.on("fn-start",(function(e,t,r){o.abortHandler&&(o.skipNext+=1)})),o.ee.on("fn-err",(function(e,t,r){o.abortHandler&&!r[B.A]&&((0,k.X)(r,B.A,(function(){return!0})),this.thrown=!0,q(r,void 0,o.ee))})),o.ee.on("fn-end",(function(){o.abortHandler&&!this.thrown&&o.skipNext>0&&(o.skipNext-=1)})),o.ee.on("internal-error",(function(t){(0,s.p)("ierr",[t,(0,m.z)(),!0],void 0,e.D.jserrors,o.ee)})),this.origOnerror=l._A.onerror,l._A.onerror=this.onerrorHandler.bind(this),l._A.addEventListener("unhandledrejection",(t=>{const r=function(e){let t="Unhandled Promise Rejection: ";if(e instanceof Error)try{return e.message=t+e.message,e}catch(t){return e}if(void 0===e)return new Error(t);try{return new Error(t+(0,N.P)(e))}catch(e){return new Error(t)}}(t.reason);(0,s.p)("err",[r,(0,m.z)(),!1,{unhandledPromiseRejection:1}],void 0,e.D.jserrors,this.ee)}),(0,S.m$)(!1,this.removeOnAbort?.signal)),(0,H.gy)(this.ee),(0,H.BV)(this.ee),(0,H.em)(this.ee),(0,t.OP)(r).xhrWrappable&&(0,H.Kf)(this.ee),this.abortHandler=this.#e,this.importAggregator()}#e(){this.removeOnAbort?.abort(),this.abortHandler=void 0}onerrorHandler(t,r,n,i,o){"function"==typeof this.origOnerror&&this.origOnerror(...arguments);try{this.skipNext?this.skipNext-=1:q(o||new U(t,r,n),!0,this.ee)}catch(t){try{(0,s.p)("ierr",[t,(0,m.z)(),!0],void 0,e.D.jserrors,this.ee)}catch(e){}}return!1}}function U(e,t,r){this.message=e||"Uncaught error with no additional information",this.sourceURL=t,this.line=r}function q(t,r,n){var i=r?null:(0,m.z)();(0,s.p)("err",[t,i],void 0,e.D.jserrors,n)}let G=1;const V="nr@id";function X(e){const t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===l._A?0:(0,k.X)(e,V,(function(){return G++}))}var Z=i(9071);function W(e){if("string"==typeof e&&e.length)return e.length;if("object"==typeof e){if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer&&e.byteLength)return e.byteLength;if("undefined"!=typeof Blob&&e instanceof Blob&&e.size)return e.size;if(!("undefined"!=typeof FormData&&e instanceof FormData))try{return(0,N.P)(e).length}catch(e){return}}}var $=i(6368);class Q{constructor(e){this.agentIdentifier=e,this.generateTracePayload=this.generateTracePayload.bind(this),this.shouldGenerateTrace=this.shouldGenerateTrace.bind(this)}generateTracePayload(e){if(!this.shouldGenerateTrace(e))return null;var r=(0,t.DL)(this.agentIdentifier);if(!r)return null;var n=(r.accountID||"").toString()||null,i=(r.agentID||"").toString()||null,o=(r.trustKey||"").toString()||null;if(!n||!i)return null;var a=(0,D.M)(),s=(0,D.Ht)(),c=Date.now(),u={spanId:a,traceId:s,timestamp:c};return(e.sameOrigin||this.isAllowedOrigin(e)&&this.useTraceContextHeadersForCors())&&(u.traceContextParentHeader=this.generateTraceContextParentHeader(a,s),u.traceContextStateHeader=this.generateTraceContextStateHeader(a,c,n,i,o)),(e.sameOrigin&&!this.excludeNewrelicHeader()||!e.sameOrigin&&this.isAllowedOrigin(e)&&this.useNewrelicHeaderForCors())&&(u.newrelicHeader=this.generateTraceHeader(a,s,c,n,i,o)),u}generateTraceContextParentHeader(e,t){return"00-"+t+"-"+e+"-01"}generateTraceContextStateHeader(e,t,r,n,i){return i+"@nr=0-1-"+r+"-"+n+"-"+e+"----"+t}generateTraceHeader(e,t,r,n,i,o){if(!("function"==typeof l._A?.btoa))return null;var a={v:[0,1],d:{ty:"Browser",ac:n,ap:i,id:e,tr:t,ti:r}};return o&&n!==o&&(a.d.tk=o),btoa((0,N.P)(a))}shouldGenerateTrace(e){return this.isDtEnabled()&&this.isAllowedOrigin(e)}isAllowedOrigin(e){var r=!1,n={};if((0,t.Mt)(this.agentIdentifier,"distributed_tracing")&&(n=(0,t.P_)(this.agentIdentifier).distributed_tracing),e.sameOrigin)r=!0;else if(n.allowed_origins instanceof Array)for(var i=0;i<n.allowed_origins.length;i++){var o=(0,$.e)(n.allowed_origins[i]);if(e.hostname===o.hostname&&e.protocol===o.protocol&&e.port===o.port){r=!0;break}}return r}isDtEnabled(){var e=(0,t.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.enabled}excludeNewrelicHeader(){var e=(0,t.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.exclude_newrelic_header}useNewrelicHeaderForCors(){var e=(0,t.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!1!==e.cors_use_newrelic_header}useTraceContextHeadersForCors(){var e=(0,t.Mt)(this.agentIdentifier,"distributed_tracing");return!!e&&!!e.cors_use_tracecontext_headers}}var Y=i(8675),K=["load","error","abort","timeout"],J=K.length,ee=t.Yu.REQ,te=l._A.XMLHttpRequest;class re extends g{static featureName=Y.t;constructor(r,n){let i=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(r,n,Y.t,i),(0,t.OP)(r).xhrWrappable&&(this.dt=new Q(r),this.handler=(e,t,r,n)=>(0,s.p)(e,t,r,n,this.ee),(0,H.u5)(this.ee),(0,H.Kf)(this.ee),function(r,n,i,o){function a(e){var t=this;t.totalCbs=0,t.called=0,t.cbTime=0,t.end=A,t.ended=!1,t.xhrGuids={},t.lastSize=null,t.loadCaptureCalled=!1,t.params=this.params||{},t.metrics=this.metrics||{},e.addEventListener("load",(function(r){_(t,e)}),(0,S.m$)(!1)),Z.I||e.addEventListener("progress",(function(e){t.lastSize=e.loaded}),(0,S.m$)(!1))}function s(e){this.params={method:e[0]},T(this,e[1]),this.metrics={}}function c(e,n){var i=(0,t.DL)(r);i.xpid&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",i.xpid);var a=o.generateTracePayload(this.parsedOrigin);if(a){var s=!1;a.newrelicHeader&&(n.setRequestHeader("newrelic",a.newrelicHeader),s=!0),a.traceContextParentHeader&&(n.setRequestHeader("traceparent",a.traceContextParentHeader),a.traceContextStateHeader&&n.setRequestHeader("tracestate",a.traceContextStateHeader),s=!0),s&&(this.dt=a)}}function u(e,t){var r=this.metrics,i=e[0],o=this;if(r&&i){var a=W(i);a&&(r.txSize=a)}this.startTime=(0,m.z)(),this.listener=function(e){try{"abort"!==e.type||o.loadCaptureCalled||(o.params.aborted=!0),("load"!==e.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof t.onload)&&"function"==typeof o.end)&&o.end(t)}catch(e){try{n.emit("internal-error",[e])}catch(e){}}};for(var s=0;s<J;s++)t.addEventListener(K[s],this.listener,(0,S.m$)(!1))}function d(e,t,r){this.cbTime+=e,t?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof r.onload||"function"!=typeof this.end||this.end(r)}function f(e,t){var r=""+X(e)+!!t;this.xhrGuids&&!this.xhrGuids[r]&&(this.xhrGuids[r]=!0,this.totalCbs+=1)}function h(e,t){var r=""+X(e)+!!t;this.xhrGuids&&this.xhrGuids[r]&&(delete this.xhrGuids[r],this.totalCbs-=1)}function g(){this.endTime=(0,m.z)()}function p(e,t){t instanceof te&&"load"===e[0]&&n.emit("xhr-load-added",[e[1],e[2]],t)}function v(e,t){t instanceof te&&"load"===e[0]&&n.emit("xhr-load-removed",[e[1],e[2]],t)}function b(e,t,r){t instanceof te&&("onload"===r&&(this.onload=!0),("load"===(e[0]&&e[0].type)||this.onload)&&(this.xhrCbStart=(0,m.z)()))}function y(e,t){this.xhrCbStart&&n.emit("xhr-cb-time",[(0,m.z)()-this.xhrCbStart,this.onload,t],t)}function w(e){var t,r=e[1]||{};"string"==typeof e[0]?t=e[0]:e[0]&&e[0].url?t=e[0].url:l._A?.URL&&e[0]&&e[0]instanceof URL&&(t=e[0].href),t&&(this.parsedOrigin=(0,$.e)(t),this.sameOrigin=this.parsedOrigin.sameOrigin);var n=o.generateTracePayload(this.parsedOrigin);if(n&&(n.newrelicHeader||n.traceContextParentHeader))if("string"==typeof e[0]||l._A?.URL&&e[0]&&e[0]instanceof URL){var i={};for(var a in r)i[a]=r[a];i.headers=new Headers(r.headers||{}),s(i.headers,n)&&(this.dt=n),e.length>1?e[1]=i:e.push(i)}else e[0]&&e[0].headers&&s(e[0].headers,n)&&(this.dt=n);function s(e,t){var r=!1;return t.newrelicHeader&&(e.set("newrelic",t.newrelicHeader),r=!0),t.traceContextParentHeader&&(e.set("traceparent",t.traceContextParentHeader),t.traceContextStateHeader&&e.set("tracestate",t.traceContextStateHeader),r=!0),r}}function x(e,t){this.params={},this.metrics={},this.startTime=(0,m.z)(),this.dt=t,e.length>=1&&(this.target=e[0]),e.length>=2&&(this.opts=e[1]);var r,n=this.opts||{},i=this.target;"string"==typeof i?r=i:"object"==typeof i&&i instanceof ee?r=i.url:l._A?.URL&&"object"==typeof i&&i instanceof URL&&(r=i.href),T(this,r);var o=(""+(i&&i instanceof ee&&i.method||n.method||"GET")).toUpperCase();this.params.method=o,this.txSize=W(n.body)||0}function E(t,r){var n;this.endTime=(0,m.z)(),this.params||(this.params={}),this.params.status=r?r.status:0,"string"==typeof this.rxSize&&this.rxSize.length>0&&(n=+this.rxSize);var o={txSize:this.txSize,rxSize:n,duration:(0,m.z)()-this.startTime};i("xhr",[this.params,o,this.startTime,this.endTime,"fetch"],this,e.D.ajax)}function A(t){var r=this.params,n=this.metrics;if(!this.ended){this.ended=!0;for(var o=0;o<J;o++)t.removeEventListener(K[o],this.listener,!1);r.aborted||(n.duration=(0,m.z)()-this.startTime,this.loadCaptureCalled||4!==t.readyState?null==r.status&&(r.status=0):_(this,t),n.cbTime=this.cbTime,i("xhr",[r,n,this.startTime,this.endTime,"xhr"],this,e.D.ajax))}}function T(e,t){var r=(0,$.e)(t),n=e.params;n.hostname=r.hostname,n.port=r.port,n.protocol=r.protocol,n.host=r.hostname+":"+r.port,n.pathname=r.pathname,e.parsedOrigin=r,e.sameOrigin=r.sameOrigin}function _(e,t){e.params.status=t.status;var r=function(e,t){var r=e.responseType;return"json"===r&&null!==t?t:"arraybuffer"===r||"blob"===r||"json"===r?W(e.response):"text"===r||""===r||void 0===r?W(e.responseText):void 0}(t,e.lastSize);if(r&&(e.metrics.rxSize=r),e.sameOrigin){var n=t.getResponseHeader("X-NewRelic-App-Data");n&&(e.params.cat=n.split(", ").pop())}e.loadCaptureCalled=!0}n.on("new-xhr",a),n.on("open-xhr-start",s),n.on("open-xhr-end",c),n.on("send-xhr-start",u),n.on("xhr-cb-time",d),n.on("xhr-load-added",f),n.on("xhr-load-removed",h),n.on("xhr-resolved",g),n.on("addEventListener-end",p),n.on("removeEventListener-end",v),n.on("fn-end",y),n.on("fetch-before-start",w),n.on("fetch-start",x),n.on("fn-start",b),n.on("fetch-done",E)}(r,this.ee,this.handler,this.dt),this.importAggregator())}}var ne=i(2628);const{BST_RESOURCE:ie,RESOURCE:oe,BST_TIMER:ae,START:se,END:ce,FEATURE_NAME:ue,FN_END:de,FN_START:fe,PUSH_STATE:le}=ne;var he=i(755);const{FEATURE_NAME:ge,START:pe,END:me,BODY:ve,CB_END:be,JS_TIME:ye,FETCH:we,FN_START:xe,CB_START:Ee,FN_END:Ae}=he;var Te=i(6486);class _e extends g{static featureName=Te.t;constructor(e,t){let r=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(e,t,Te.t,r),this.importAggregator()}}new class{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:(0,D.ky)(16);this.agentIdentifier=t,this.sharedAggregator=new w({agentIdentifier:this.agentIdentifier}),this.features={},this.desiredFeatures=new Set(e.features||[]),this.desiredFeatures.add(v),Object.assign(this,(0,a.j)(this.agentIdentifier,e,e.loaderType||"agent")),this.start()}get config(){return{info:(0,t.C5)(this.agentIdentifier),init:(0,t.P_)(this.agentIdentifier),loader_config:(0,t.DL)(this.agentIdentifier),runtime:(0,t.OP)(this.agentIdentifier)}}start(){const t="features";try{const r=n(this.agentIdentifier),i=[...this.desiredFeatures];i.sort(((t,r)=>e.p[t.featureName]-e.p[r.featureName])),i.forEach((t=>{if(r[t.featureName]||t.featureName===e.D.pageViewEvent){const n=function(t){switch(t){case e.D.ajax:return[e.D.jserrors];case e.D.sessionTrace:return[e.D.ajax,e.D.pageViewEvent];case e.D.pageViewTiming:return[e.D.pageViewEvent];default:return[]}}(t.featureName);n.every((e=>r[e]))||(0,h.Z)("".concat(t.featureName," is enabled but one or more dependent features has been disabled (").concat((0,N.P)(n),"). This may cause unintended consequences or missing data...")),this.features[t.featureName]=new t(this.agentIdentifier,this.sharedAggregator)}})),(0,_.Qy)(this.agentIdentifier,this.features,t)}catch(e){(0,h.Z)("Failed to initialize all enabled instrument classes (agent aborted) -",e);for(const e in this.features)this.features[e].abortHandler?.();const r=(0,_.fP)();return delete r.initializedAgents[this.agentIdentifier]?.api,delete r.initializedAgents[this.agentIdentifier]?.[t],delete this.sharedAggregator,r.ee?.abort(),delete r.ee?.get(this.agentIdentifier),!1}}}({features:[re,v,P,class extends g{static featureName=ue;constructor(t,r){if(super(t,r,ue,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),!l.il)return;const n=this.ee;let i;this.timerEE=(0,H.BV)(n),this.rafEE=(0,H.gy)(n),(0,H.QU)(n),this.eventsEE=(0,H.em)(n),this.eventsEE.on(fe,(function(e,t){this.bstStart=(0,m.z)()})),this.eventsEE.on(de,(function(t,r){(0,s.p)("bst",[t[0],r,this.bstStart,(0,m.z)()],void 0,e.D.sessionTrace,n)})),this.timerEE.on(fe,(function(e,t,r){this.bstStart=(0,m.z)(),this.bstType=r})),this.timerEE.on(de,(function(t,r){(0,s.p)(ae,[r,this.bstStart,(0,m.z)(),this.bstType],void 0,e.D.sessionTrace,n)})),this.rafEE.on(fe,(function(){this.bstStart=(0,m.z)()})),this.rafEE.on(de,(function(t,r){(0,s.p)(ae,[r,this.bstStart,(0,m.z)(),"requestAnimationFrame"],void 0,e.D.sessionTrace,n)})),n.on(le+se,(function(e){this.time=(0,m.z)(),this.startPath=location.pathname+location.hash})),n.on(le+ce,(function(t){(0,s.p)("bstHist",[location.pathname+location.hash,this.startPath,this.time],void 0,e.D.sessionTrace,n)}));try{i=new PerformanceObserver((t=>{const r=t.getEntries();(0,s.p)(ie,[r],void 0,e.D.sessionTrace,n)})),i.observe({type:oe,buffered:!0})}catch(e){}this.importAggregator({resourceObserver:i})}},R,_e,F,class extends g{static featureName=ge;constructor(e,r){if(super(e,r,ge,!(arguments.length>2&&void 0!==arguments[2])||arguments[2]),!l.il)return;if(!(0,t.OP)(e).xhrWrappable)return;try{this.removeOnAbort=new AbortController}catch(e){}let n,i=0;const o=this.ee.get("tracer"),a=(0,H._L)(this.ee),s=(0,H.Lg)(this.ee),c=(0,H.BV)(this.ee),u=(0,H.Kf)(this.ee),d=this.ee.get("events"),f=(0,H.u5)(this.ee),h=(0,H.QU)(this.ee),g=(0,H.Gm)(this.ee);function p(e,t){h.emit("newURL",[""+window.location,t])}function v(){i++,n=window.location.hash,this[xe]=(0,m.z)()}function b(){i--,window.location.hash!==n&&p(0,!0);var e=(0,m.z)();this[ye]=~~this[ye]+e-this[xe],this[Ae]=e}function y(e,t){e.on(t,(function(){this[t]=(0,m.z)()}))}this.ee.on(xe,v),s.on(Ee,v),a.on(Ee,v),this.ee.on(Ae,b),s.on(be,b),a.on(be,b),this.ee.buffer([xe,Ae,"xhr-resolved"],this.featureName),d.buffer([xe],this.featureName),c.buffer(["setTimeout"+me,"clearTimeout"+pe,xe],this.featureName),u.buffer([xe,"new-xhr","send-xhr"+pe],this.featureName),f.buffer([we+pe,we+"-done",we+ve+pe,we+ve+me],this.featureName),h.buffer(["newURL"],this.featureName),g.buffer([xe],this.featureName),s.buffer(["propagate",Ee,be,"executor-err","resolve"+pe],this.featureName),o.buffer([xe,"no-"+xe],this.featureName),a.buffer(["new-jsonp","cb-start","jsonp-error","jsonp-end"],this.featureName),y(f,we+pe),y(f,we+"-done"),y(a,"new-jsonp"),y(a,"jsonp-end"),y(a,"cb-start"),h.on("pushState-end",p),h.on("replaceState-end",p),window.addEventListener("hashchange",p,(0,S.m$)(!0,this.removeOnAbort?.signal)),window.addEventListener("load",p,(0,S.m$)(!0,this.removeOnAbort?.signal)),window.addEventListener("popstate",(function(){p(0,i>1)}),(0,S.m$)(!0,this.removeOnAbort?.signal)),this.abortHandler=this.#e,this.importAggregator()}#e(){this.removeOnAbort?.abort(),this.abortHandler=void 0}}],loaderType:"spa"})})(),window.NRBA=o})();
        // End of new relic script
        // Custom CLS metric.  Source: https://web.dev/cls/
        try { // Use try for 'layout-shift'
          cls = 0;
          metric = 'layout-shift';
          observer = new PerformanceObserver(function (list) {
            entries = list.getEntries();
            for (var i=0; i < entries.length; i++){
              entry = entries[i];
              if (!entry.hadRecentInput) {
                cls += entry.value;
              }
            }
            newrelic.setCustomAttribute(metric, cls); //send to NR after adding up the CLS values
          });
          observer.observe({type: 'layout-shift', buffered: true});
        } catch (e) {
          // Do nothing, if it is not supported
          console.log('NR Custom Metric', 'Unable to observe CLS/Layout Shift on this browser.');
          console.log('NR Custom Metric', 'Error:', e);
        }

      }
    })();

  </script>







  



















  






    
    
    <link rel="apple-touch-icon" sizes="57x57" href="/etc/clientlibs/assets/images/food/apple-touch-icon-57x57.png"> <link rel="apple-touch-icon" sizes="114x114" href="/etc/clientlibs/assets/images/food/apple-touch-icon-114x114.png"> <link rel="apple-touch-icon" sizes="72x72" href="/etc/clientlibs/assets/images/food/apple-touch-icon-72x72.png"> <link rel="apple-touch-icon" sizes="144x144" href="/etc/clientlibs/assets/images/food/apple-touch-icon-144x144.png"> <link rel="apple-touch-icon" sizes="60x60" href="/etc/clientlibs/assets/images/food/apple-touch-icon-60x60.png"> <link rel="apple-touch-icon" sizes="120x120" href="/etc/clientlibs/assets/images/food/apple-touch-icon-120x120.png"> <link rel="apple-touch-icon" sizes="76x76" href="/etc/clientlibs/assets/images/food/apple-touch-icon-76x76.png"> <link rel="apple-touch-icon" sizes="152x152" href="/etc/clientlibs/assets/images/food/apple-touch-icon-152x152.png"> <link rel="apple-touch-icon" sizes="180x180" href="/etc/clientlibs/assets/images/food/apple-touch-icon-180x180.png"> <link rel="icon" type="image/png" href="/etc/clientlibs/assets/images/food/favicon-192x192.png" sizes="192x192"> <link rel="icon" type="image/png" href="/etc/clientlibs/assets/images/food/favicon-160x160.png" sizes="160x160"> <link rel="icon" type="image/png" href="/etc/clientlibs/assets/images/food/favicon-96x96.png" sizes="96x96"> <link rel="icon" type="image/png" href="/etc/clientlibs/assets/images/food/favicon-16x16.png" sizes="16x16"> <link rel="icon" type="image/png" href="/etc/clientlibs/assets/images/food/favicon-32x32.png" sizes="32x32"> <meta name="msapplication-TileColor" content="#0fadc4"> <meta name="msapplication-TileImage" content="/etc/clientlibs/assets/images/food/mstile-144x144.png">

    
      
      
        <meta name="viewport" content="width=1024">
      
    

    <meta name="keywords" content="">
    <meta name="author"  content="">
    





















 
   <link rel="canonical" href="https://www.foodnetwork.com/error-page/404"/>
   
 
 




    
    





  






















  

















    
        
        
        
        
        
    
    


























  














  
  
    <title>Page Not Found | Food Network</title>
  





  
    <meta name="description" content="The page you&#39;re looking for seems to have disappeared! Maybe you typed in the URL incorrectly; why don&#39;t you check the web address again? If you bookmarked the page, try our search to find what you&#39;re looking for. If you feel you&#39;ve reached this page in error, please contact us. You can also visit the FoodNetwork.com homepage to browse the site.">
  
  




  <meta property="og:title" content="Page Not Found">




  
    <meta property="og:description" content="The page you&#39;re looking for seems to have disappeared! Maybe you typed in the URL incorrectly; why don&#39;t you check the web address again? If you bookmarked the page, try our search to find what you&#39;re looking for. If you feel you&#39;ve reached this page in error, please contact us. You can also visit the FoodNetwork.com homepage to browse the site.">
  
  
  













    



  





















  

























    
    
    
        
    
    







<meta property="og:url" content="https://www.foodnetwork.com/error-page/404"/>


<meta property="og:image" content="https://food.fnr.sndimg.com/content/dam/images/food/editorial/homepage/fn-feature.jpg.rend.hgtvcom.616.347.suffix/1474463768097.jpeg" />


<meta property="twitter:card" content="article"/>
<meta property="og:site_name" content="Food Network"/>

      


    



    

    




  













  
  
  

  
  <script>
    document.getElementsByTagName('html')[0].className += ' js-support ' + navigator.platform;
    var SNI = window.SNI || {};
    SNI.JS_RESOURCE_PATH="//food.fnr.sndimg.com/etc/clientlibs/assets/v3/js/"
  </script>

  

  <script>
(function () { 
  if ( typeof window.CustomEvent === "function" ) return false;
  function CustomEvent ( event, params ) {
    params = params || { bubbles: false, cancelable: false, detail: undefined };
    var evt = document.createEvent( 'CustomEvent' );
    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail );
    return evt;
   }
  CustomEvent.prototype = window.Event.prototype;
  window.CustomEvent = CustomEvent;
})();
var SNILoadEvents = {
  listen: function(names) {
    var evtObj = SNILoadEvents.events = {};
    for (var i=0; i < names.length; i++) {
      var name = 'SNILoadEvent_' + names[i];
      if (window.CustomEvent) {
        evtObj[names[i]] = new CustomEvent(name);
      } else {
        evtObj[names[i]] = document.createEvent('CustomEvent');
        evtObj[names[i]].initCustomEvent(name, true, true);
      }
    }
  },
  trigger: function(names) {
    var names = (typeof names === 'string') ? [ names ] : names;
    for (var i=0; i < names.length; i++) {
      try {
        window.dispatchEvent(window.SNILoadEvents.events[names[i]]);
        window.removeEventListener('SNILoadEvent_' + names[i], window.SNILoadEvents.events[names[i]].function);
        window.SNILoadEvents.events[names[i]] = { firedAlready: true };
      } catch(e) {
        if (window.console) {
          console.warn('SNILoadEvents event "' + names[i] + '" already triggered.');
        }
      }
    }
  },
  mdmLoaded: function(fn) {
    SNILoadEvents.on('mdm', function(e) {
      if (window.MetaDataManager !== 'undefined') {
        fn();
      } else {
        if (window.console) {
          console.error('MetaDataManager is not defined!');
        }
      }
    });
  },
  on: function(name, fn) {
    if (window.SNILoadEvents.events[name].firedAlready) {
      fn();
    } else {
      window.SNILoadEvents.events[name].function = fn;
      window.addEventListener('SNILoadEvent_' + name, fn);
    }
  }
};

SNILoadEvents.listen([
  'sni-all',
  'core',
  'mdm',
  'ads',
  'analytics'
]);

(function() {
  var jqMethods = 'css|hide|addClass|removeClass|find|remove|html|height|offset|animate|closest|appendTo|insertAfter|load|attr|append|on'.split('|');
  function makePlugin(parent, name, operand) {
    return function() {
      var params = arguments;
      SNILoadEvents.on('core', function() {
        var $el = window.$.apply(window.$.fn, operand);
        $el[name].apply($el, params);
      });
      return parent;
    };
  }
  window.updateJqMethods = function (name) {
    jqMethods.push(name);
  };
  window.jQuery = window.$ = function() {
    var operand = arguments;
    if (typeof arguments[0] === 'function') {
      SNILoadEvents.on('core', function() {
        window.$.apply(window.$.fn, operand);
      });
    }
    var jqMethodsObj = {};
    for (var i=0; i < jqMethods.length; i++) {
      jqMethodsObj[jqMethods[i]] = makePlugin(jqMethodsObj, jqMethods[i], operand);
    }
    return jqMethodsObj;
  };
})();
</script>



  
  



  















  
  <script>
      const oArr = (window.location.host||'').split('.');
      const oArrLength = oArr.length;
      // Set up the cookie Domain with the format .domain.com
      let userConsentCD = '.' + oArr[oArrLength - 2] + '.' + oArr[oArrLength - 1];
      
      window.__devEnv = false;
      
      // Set up user config with the One Trust ID and cookie domain.  The countryCode is manually set for testing
      window.WBD = window.WBD || {};
      window.WBD.UserConsentConfig = {
          ccCookie: "__ds_loc_country",
          scCookie: "__ds_loc_state",
          cookieDomain: userConsentCD,
          domId: "507116a0-903b-4126-835e-ba13f9a322a5"
      };
      console.log(window.WBD.UserConsentConfig);
  </script>
  <script src="//food.fnr.sndimg.com/etc/clientlibs/user-consent-iab.md5-b2878870cd5af4e12c53181b2107d44d.js"></script>






   



   



  
  



  















  
    
  
  <script src="//assets.adobedtm.com/launch-ENe37f8b8d568443619b43fb72877cfc3d.min.js" async></script>



  <script>
    (function() {
      
      /*  <esi:vars> */
      sessionStorage.setItem('countryCode', "$(GEO{'country_code'})");
      /*  </esi:vars> */
    })();
  </script>

  
  



  
















  



  
















    



  













    





  
















  






























  
  
  
    
  
































  
  
  
  















<script type="text/javascript">
SNILoadEvents.mdmLoaded(function() {
    var mdManager = window.mdManager = new MetaDataManager(),
        origPubDate = '2016-11-15T14:40:56.537-05:00'.replace(/T.*$/, ''),
        lastReplicationDate = '2023-09-19T10:48:43.805-04:00'.replace(/T.*$/, '');
    mdManager.addParameter("Url", "\/error\u002Dpage\/404");

  
  
    mdManager.addParameter("Title", "page not found");
  

    mdManager.addParameter("Site", "food");
    mdManager.addParameter("CategoryDspName", "error-page");
    mdManager.addParameter("SctnDspName", "404");
    mdManager.addParameter("SubSection", "");
    mdManager.addParameter("Classification", "404,error-page,food");
    mdManager.addParameter("DetailID", "17790b088b1726865ba6a712038dc192");
    mdManager.addParameter("PageNumber", "1");
    mdManager.addParameter("behavioralInteraction", "1-1-1");
    mdManager.addParameter("Type", "universallandingpage");
    mdManager.addParameter("UniqueID", "food|universallandingpage|17790b088b1726865ba6a712038dc192|1");
    mdManager.addParameter("AdKey1", "");
    mdManager.addParameter("AdKey2", "");
    mdManager.addParameter("ContentTag1", "");
    mdManager.addParameter("ContentTag2", "");
    mdManager.addParameter("TagGroup1", "");


    
    
        
        mdManager.addParameter("Sponsorship", "error404");
    


    mdManager.addParameter("Show_Abbr", "");
    mdManager.addParameter("Source", "");
    mdManager.addParameter("Delivery_Channel", "web");
    mdManager.addParameter("EditorialTracking", "");
    mdManager.addParameter("Region", "");
    mdManager.addParameter("Country", "");
    mdManager.addParameter("State", "");
    mdManager.addParameter("City", "");

    

    mdManager.addParameter("OrigPubDate", origPubDate + '|' + lastReplicationDate);

    mdManager.addParameter("shopping", "n/a");
    
        
        
    mdManager.addParameter("componentName", "n/a");
        
    
    mdManager.addParameter("componentTitle", "n/a");
    mdManager.addParameter("partner", "n/a");
    mdManager.addParameter("products", "n/a");
    mdManager.addParameter("imageCount", "0");
    mdManager.addParameter("productCount", "0");
    mdManager.addParameter("visibleProductCount", "n/a");
    mdManager.addParameter("perImageProductCount", "n/a");
    mdManager.addParameter("productPosition", "n/a");
});
</script>





    
    
    <meta name="tp:initialize" content="false">
    <meta name="tp:PreferredRuntimes" content="Flash,HTML5" />
    




  














<script>
  var SNI = window.SNI || {};
  SNI.Config = SNI.Config || {};

  SNI.Config.brand = "food";
  if ("null" !== "null") {
    SNI.Config.socialCommentsCmbUri = "null";
  }
  if ("null" !== "null") {
    SNI.Config.userRegisterCmbUri = "null";
  }
  SNI.Config.Video = {
    fallbackSiteSectionId: '1152909',
    networkId: '191701'
  };
  SNI.Config.muxKey = '18ivl0rjdhi5lrcmvn369ue0g';

  SNI.Config.playbackProxyEndpoint = 'https://api.digitalstudios.discovery.com/playback-router/v1/';
  SNI.Config.playbackEndpoint = '/apps/api/playback';
  SNI.Config.kdpVideoPlayerUri = "https://d1ujyvr8zweuwo.cloudfront.net/9";

  SNI.Config.useDaltonLogin = true;

  SNI.Config.daltonFormsEndpoint = '//forms.dds.discovery.com/1-0-4/';
  SNI.Config.daltonApiEndpoint = '//accounts.dds.discovery.com/accounts-proxy-prod/v1';
  SNI.Config.daltonDirectEndpoint = '//buffet.identityservices.io/sso/api/1';

  SNI.Config.useIdspLogin = true;

  SNI.Config.fwDefaults = {
    networkId : "191701",
    serverUrl : "//2ecd5.v.fwmrm.net/ad/g/1",
    profileId : "191701:scripps_pdk_html5_live",
    fwUrl : "//mssl.fwmrm.net/libs/adm/6.52.0/AdManager.js",
    videoAdWrapperTypes : "external/vast-3,external/vast-2",
    useFw : true,
    useFwMobile : true
  };
</script>

    

    
    <script>
        var cqMobile = false,
            cqBasePage = '//www.foodnetwork.com/error-page/404',
            cqWCMDisabled = true,
            cqIncludeVideo = true;
    </script>

  



  












  
  

  
    <meta property="fb:app_id" content="582148248497951"/>
  

  



  















</head>





  















  
  
  
    
  
  
  


<body class="universalLandingPage two-col-fluid" data-shorten-url="//www.foodnetwork.com/error-page/404" data-module="page" data-page-path="/content/food-com/en/error-page/404">
  

  <section id="site" class="flush-top">
    <div class="header"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/header"></span>



  












<!--
The design nodes specified the header path.
Generally you can find this specified at /etc/designs/<SITE>/basePage/header/@header
-->


  
    
      <!-- SDI include (path: /content/food-com/navigationConfigs/header/_jcr_content/header.cache.html, resourceType: foodcom/components/navigation/header) -->




<div id="leaderboard-wrap">
    <div id="leaderboard">
        <div id="dfp_leaderboard"></div>
    </div>
</div>


<header class="o-Header ">
    <section class="o-Header__m-Area o-Header__m-Area--Top">
        
        <div class="o-Header__m-Area m-Area__m-Container">

</div>
    </section>

    <section class="o-Header__m-Area o-Header__m-Area--Main" data-module="header" data-header-main>
        
        <script type="text/x-config">
            {
                "highlightOnHover": true,
                "darkThemeHeader": false,
                "hoverIntentGlobal":
                        {
                        "highlight": true,
                        "timeout": 100
                        }
            }
        </script>
        <div class="o-Header__m-Area m-Area__m-Container">
  <div class="o-Header__m-NavItemWrap m-NavItemWrap--moreLinks" data-animate-menu="animate"><div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true">
  
  <button class="o-Header__m-Navigation m-Navigation--IconWrap" aria-label="Main Menu">
    
      <svg class="o-Header__a-Icon a-Icon--Menu" data-type="button-header-nav" aria-hidden="true">
        <symbol id="icon-hamburger-menu-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 21 17">
    <g fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-width="1.5">
        <path d="M0 7.8L19.2 7.8M0 .6L19.2.6M0 15L19.2 15" transform="translate(1 1)"/>
    </g>
</symbol>
<use xlink:href="#icon-hamburger-menu-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
      </svg>
    
  </button>
  
  <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu o-Header__m-DropdownMenu--MoreLinks">

    <ul class="o-Header__m-DropdownList" data-animate-item>
      <li class="o-Header__m-DropdownListItem">
        <a href="https://watch.foodnetwork.com/?utm_source=marketingsite&utm_medium=trendingline_watchfullseasons_text">Watch Full Seasons</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/shows/tv-schedule">TV Schedule</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/site/newsletter-sign-up">Newsletters</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/videos">Videos</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/features/articles/sweepstakes-and-contests">Sweepstakes</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="https://www.foodnetwork.com/kitchen/classes">Classes</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/magazine">Magazine</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/fn-dish">Blog</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/shows/a-z">Shows A-Z</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/profiles/talent">Chefs A-Z</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/restaurants">Restaurants</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="//www.foodnetwork.com/shows/tv-schedule">Recipes on TV</a>
      </li>
    
      <li class="o-Header__m-DropdownListItem">
        <a href="https://www.max.com/channel/food-network" target="_blank">Food Network on Max</a>
      </li>
    </ul>

    <ul class="m-SocialLinks" data-animate-item>
      <li class="m-SocialLinks__a-Button--facebook">
        <a class="m-SocialLinks__a-Icon--facebook" href="https://www.facebook.com/FoodNetwork" target="_blank" aria-label="follow us on facebook">
          
  
    
  <svg class="m-SocialLinks__a-Icon--Facebook m-SocialLinks__a-Icon a-Icon--Facebook a-Icon" aria-hidden="true">
    
    <symbol id="icon-facebook-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 12 27">
    <path d="M8.26953125,8.72265625 L12.4042969,8.72265625 L11.9511719,13.3671875 L8.26953125,13.3671875 L8.26953125,26.6777344 L2.77539062,26.6777344 L2.77539062,13.3671875 L0,13.3671875 L0,8.72265625 L2.77539062,8.72265625 L2.77539062,6.00390625 C2.77539062,4.04035477 3.22851109,2.54883322 4.13476562,1.52929688 C5.07878076,0.509760527 6.60806234,0 8.72265625,0 L12.4042969,0 L12.4042969,4.58789062 L10.0820312,4.58789062 C9.66666459,4.58789062 9.32682424,4.62565066 9.0625,4.70117188 C8.83593637,4.77669309 8.66601619,4.90885322 8.55273438,5.09765625 C8.43945256,5.28645928 8.36393248,5.47525947 8.32617188,5.6640625 C8.28841127,5.85286553 8.26953125,6.1171858 8.26953125,6.45703125 L8.26953125,8.72265625 Z"/>
</symbol>
<use xlink:href="#icon-facebook-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

        </a>
      </li>
    
      <li class="m-SocialLinks__a-Button--twitter">
        <a class="m-SocialLinks__a-Icon--twitter" href="https://twitter.com/FoodNetwork" target="_blank" aria-label="follow us on twitter">
          
  
    
  <svg class="m-SocialLinks__a-Icon--Twitter m-SocialLinks__a-Icon a-Icon--Twitter a-Icon" aria-hidden="true">
    
    <symbol id="icon-twitter-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 25 21">
    <path d="M25.4882812,2.43554688 C24.7708297,3.49284383 23.9023488,4.39908477 22.8828125,5.15429688 L22.8828125,5.83398438 C22.8828125,7.23112678 22.6751323,8.62824822 22.2597656,10.0253906 C21.844399,11.422533 21.2213583,12.7630144 20.390625,14.046875 C19.5598917,15.3307356 18.5592506,16.4635368 17.3886719,17.4453125 C16.2558537,18.4270882 14.8776123,19.2200491 13.2539062,19.8242188 C11.5924396,20.3906278 9.83659779,20.6738281 7.98632813,20.6738281 C5.0787615,20.6738281 2.41667875,19.8997473 0,18.3515625 C0.377606055,18.3893231 0.792966484,18.4082031 1.24609375,18.4082031 C3.6627725,18.4082031 5.81509473,17.6718824 7.703125,16.1992188 C6.57030684,16.1614581 5.5696658,15.8027378 4.70117188,15.1230469 C3.79491734,14.443356 3.1718767,13.5937551 2.83203125,12.5742188 C3.2096373,12.6119794 3.54947766,12.6308594 3.8515625,12.6308594 C4.30468977,12.6308594 4.75781023,12.5742193 5.2109375,12.4609375 C4.00259812,12.1966133 3.00195709,11.5924526 2.20898438,10.6484375 C1.41601166,9.70442236 1.01953125,8.59050121 1.01953125,7.30664062 L1.01953125,7.25 C1.73698275,7.66536666 2.52994357,7.89192689 3.3984375,7.9296875 C2.680986,7.43879963 2.11458541,6.81575898 1.69921875,6.06054688 C1.24609148,5.30533477 1.01953125,4.47461391 1.01953125,3.56835938 C1.01953125,2.62434424 1.2649715,1.75586334 1.75585938,0.962890625 C3.07748057,2.54883605 4.66340221,3.83267738 6.51367187,4.81445312 C8.40170215,5.75846826 10.4029842,6.28710881 12.5175781,6.40039062 C12.4420569,5.98502396 12.4042969,5.58854355 12.4042969,5.2109375 C12.4042969,3.77603449 12.9140574,2.54883322 13.9335938,1.52929688 C14.9531301,0.509760527 16.1803314,0 17.6152344,0 C19.1256586,0 20.4094999,0.547520566 21.4667969,1.64257813 C22.6373756,1.41601449 23.7324168,1.00065406 24.7519531,0.396484375 C24.3743471,1.60482375 23.6191463,2.54882473 22.4863281,3.22851562 C23.4681039,3.15299441 24.4687449,2.88867414 25.4882812,2.43554688 Z"/>
</symbol>
<use xlink:href="#icon-twitter-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

        </a>
      </li>
    
      <li class="m-SocialLinks__a-Button--instagram">
        <a class="m-SocialLinks__a-Icon--instagram" href="https://instagram.com/FoodNetwork" target="_blank" aria-label="follow us on instagram">
          
  
    
  <svg class="m-SocialLinks__a-Icon--Instagram m-SocialLinks__a-Icon a-Icon--Instagram a-Icon" aria-hidden="true">
    
    <symbol id="icon-instagram-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 25 25">
    <path d="M16.5957031,12.4609375 C16.5957031,11.2903587 16.1897827,10.2991577 15.3779297,9.48730469 C14.5660767,8.67545167 13.5748756,8.26953125 12.4042969,8.26953125 C11.2714787,8.26953125 10.2991577,8.67545167 9.48730469,9.48730469 C8.67545167,10.2991577 8.26953125,11.2903587 8.26953125,12.4609375 C8.26953125,13.5937557 8.67545167,14.5660767 9.48730469,15.3779297 C10.2991577,16.1897827 11.2714787,16.5957031 12.4042969,16.5957031 C13.5748756,16.5957031 14.5660767,16.1897827 15.3779297,15.3779297 C16.1897827,14.5660767 16.5957031,13.5937557 16.5957031,12.4609375 Z M18.8046875,12.4609375 C18.8046875,14.1979254 18.1816469,15.6894469 16.9355469,16.9355469 C15.6894469,18.1816469 14.1790453,18.8046875 12.4042969,18.8046875 C10.667309,18.8046875 9.17578748,18.1816469 7.9296875,16.9355469 C6.68358752,15.6894469 6.06054687,14.1979254 6.06054687,12.4609375 C6.06054687,10.686189 6.68358752,9.17578748 7.9296875,7.9296875 C9.17578748,6.68358752 10.667309,6.06054687 12.4042969,6.06054687 C14.1790453,6.06054687 15.6894469,6.68358752 16.9355469,7.9296875 C18.1816469,9.17578748 18.8046875,10.686189 18.8046875,12.4609375 Z M20.5605469,5.77734375 C20.5605469,6.19271041 20.4095067,6.55143078 20.1074219,6.85351562 C19.805337,7.15560047 19.4654967,7.30664062 19.0878906,7.30664062 C18.672524,7.30664062 18.3138036,7.15560047 18.0117188,6.85351562 C17.7096339,6.55143078 17.5585938,6.19271041 17.5585938,5.77734375 C17.5585938,5.3997377 17.7096339,5.05989734 18.0117188,4.7578125 C18.3138036,4.45572766 18.672524,4.3046875 19.0878906,4.3046875 C19.4654967,4.3046875 19.805337,4.45572766 20.1074219,4.7578125 C20.4095067,5.05989734 20.5605469,5.3997377 20.5605469,5.77734375 Z M16.1425781,2.265625 L8.69433594,2.265625 C7.12727081,2.265625 5.92838957,2.41666516 5.09765625,2.71875 C4.83333201,2.83203182 4.58789176,2.96419195 4.36132812,3.11523438 C4.13476449,3.2662768 3.90820426,3.45507699 3.68164062,3.68164062 C3.45507699,3.90820426 3.2662768,4.13476449 3.11523438,4.36132812 C2.96419195,4.58789176 2.83203182,4.83333201 2.71875,5.09765625 C2.41666516,5.92838957 2.25618499,7.13671082 2.23730469,8.72265625 C2.21842438,10.3086017 2.20898438,11.554683 2.20898438,12.4609375 C2.20898438,13.367192 2.21842438,14.6038333 2.23730469,16.1708984 C2.25618499,17.7379636 2.41666516,18.9368448 2.71875,19.7675781 C2.83203182,20.0319024 2.96419195,20.2773426 3.11523438,20.5039062 C3.2662768,20.7304699 3.45507699,20.9570301 3.68164062,21.1835938 C3.90820426,21.4101574 4.12532448,21.5989576 4.33300781,21.75 C4.54069114,21.9010424 4.79557141,22.0332026 5.09765625,22.1464844 C5.92838957,22.4485692 7.12727081,22.6090494 8.69433594,22.6279297 C10.2614011,22.64681 11.4980423,22.65625 12.4042969,22.65625 C13.3105514,22.65625 14.5566327,22.64681 16.1425781,22.6279297 C17.7285236,22.6090494 18.9368448,22.4485692 19.7675781,22.1464844 C20.0319024,22.0332026 20.2773426,21.9010424 20.5039062,21.75 C20.7304699,21.5989576 20.9570301,21.4101574 21.1835938,21.1835938 C21.4101574,20.9570301 21.5989576,20.7304699 21.75,20.5039062 C21.9010424,20.2773426 22.0332026,20.0319024 22.1464844,19.7675781 C22.4485692,18.9368448 22.5996094,17.7379636 22.5996094,16.1708984 L22.5996094,8.72265625 C22.5996094,7.13671082 22.4485692,5.92838957 22.1464844,5.09765625 C22.0332026,4.83333201 21.9010424,4.58789176 21.75,4.36132812 C21.5989576,4.13476449 21.4101574,3.90820426 21.1835938,3.68164062 C20.9570301,3.45507699 20.7304699,3.2662768 20.5039062,3.11523438 C20.2773426,2.96419195 20.0319024,2.83203182 19.7675781,2.71875 C18.9368448,2.41666516 17.7285236,2.265625 16.1425781,2.265625 Z M24.8652344,9.88378906 L24.8652344,14.9814453 C24.8652344,15.8310589 24.8274743,16.6900998 24.7519531,17.5585938 C24.7141925,18.5781301 24.5537124,19.5221311 24.2705078,20.390625 C23.9873033,21.2591189 23.4869828,22.0520797 22.7695312,22.7695312 C22.0520797,23.4869828 21.2496789,23.9873033 20.3623047,24.2705078 C19.4749305,24.5537124 18.5403695,24.7330725 17.5585938,24.8085938 C16.6900998,24.8463544 15.8310589,24.8652344 14.9814453,24.8652344 L9.88378906,24.8652344 C9.03417544,24.8652344 8.17513455,24.8463544 7.30664062,24.8085938 C6.28710428,24.7330725 5.3431033,24.5537124 4.47460938,24.2705078 C3.60611545,23.9873033 2.81315463,23.4869828 2.09570312,22.7695312 C1.37825162,22.0520797 0.877931104,21.2591189 0.594726562,20.390625 C0.311522021,19.5221311 0.132161836,18.5781301 0.056640625,17.5585938 C0.0188800195,16.6900998 0,15.8310589 0,14.9814453 L0,9.88378906 C0,9.03417544 0.0188800195,8.17513455 0.056640625,7.30664062 C0.132161836,6.32486488 0.311522021,5.39030392 0.594726562,4.50292969 C0.877931104,3.61555546 1.37825162,2.81315463 2.09570312,2.09570312 C2.81315463,1.37825162 3.60611545,0.877931104 4.47460938,0.594726562 C5.3431033,0.311522021 6.28710428,0.151041855 7.30664062,0.11328125 C8.17513455,0.0377600391 9.03417544,0 9.88378906,0 L14.9814453,0 C15.8310589,0 16.6900998,0.0377600391 17.5585938,0.11328125 C18.5403695,0.151041855 19.4749305,0.311522021 20.3623047,0.594726562 C21.2496789,0.877931104 22.0520797,1.37825162 22.7695312,2.09570312 C23.4869828,2.81315463 23.9873033,3.61555546 24.2705078,4.50292969 C24.5537124,5.39030392 24.7141925,6.32486488 24.7519531,7.30664062 C24.8274743,8.17513455 24.8652344,9.03417544 24.8652344,9.88378906 Z"/>
</symbol>
<use xlink:href="#icon-instagram-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

        </a>
      </li>
    
      <li class="m-SocialLinks__a-Button--youtube">
        <a class="m-SocialLinks__a-Icon--youtube" href="https://www.youtube.com/FoodNetwork" target="_blank" aria-label="follow us on youtube">
          
  
    
  <svg class="m-SocialLinks__a-Icon--Youtube m-SocialLinks__a-Icon a-Icon--Youtube a-Icon" aria-hidden="true">
    
    <symbol id="icon-youtube-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 27 19">
    <path d="M13.5351563,0 C6.76168488,0 2.81250563,0.398433516 1.6875,1.1953125 C0.562494375,1.99219148 0,4.78122609 0,9.5625 C0,14.3672115 0.562494375,17.1679648 1.6875,17.9648438 C2.81250563,18.7617227 6.76168488,19.1601562 13.5351563,19.1601562 C20.28519,19.1601562 24.2226506,18.7617227 25.3476562,17.9648438 C26.4726619,17.1679648 27.0351562,14.3672115 27.0351562,9.5625 C27.0351562,4.78122609 26.4726619,1.99219148 25.3476562,1.1953125 C24.2226506,0.398433516 20.28519,0 13.5351563,0 Z M13.921875,12.375 C13.2890593,12.7500019 12.5039109,13.2246065 11.5664062,13.7988281 L10.1601562,14.6601562 L10.1601562,4.5 L18.5976562,9.5625 L16.8398438,10.6171875 C15.6679629,11.320316 14.6953164,11.9062477 13.921875,12.375 Z"/>
</symbol>
<use xlink:href="#icon-youtube-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

        </a>
      </li>
    
      <li class="m-SocialLinks__a-Button--pinterest">
        <a class="m-SocialLinks__a-Icon--pinterest" href="https://www.pinterest.com/FoodNetwork" target="_blank" aria-label="follow us on pinterest">
          
  
    
  <svg class="m-SocialLinks__a-Icon--Pinterest m-SocialLinks__a-Icon a-Icon--Pinterest a-Icon" aria-hidden="true">
    
    <symbol id="icon-pinterest-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 23 29">
    <path d="M9.30200913,19.1876287 C8.88664247,21.1889408 8.38632195,23.0769427 7.80103257,24.8516912 C7.21574318,26.6264396 6.22454216,28.0235611 4.82739976,29.0430974 C4.4120331,26.022249 4.55363324,23.3035262 5.25220444,20.8868474 C5.95077565,18.4701687 6.54549626,16.0535262 7.03638413,13.6368474 C6.20565081,12.239705 6.17733078,10.5405033 6.95142319,8.53919117 C7.72551561,6.53787908 8.99991692,5.89595841 10.7746654,6.61340992 C11.8319623,7.02877658 12.2662028,7.81229739 12.0773998,8.96399586 C11.8885967,10.1156943 11.5959564,11.3240156 11.1994701,12.5889959 C10.8029837,13.8539761 10.5669835,15.0150973 10.4914623,16.0723943 C10.415941,17.1296912 11.0578617,17.8093719 12.4172435,18.1114568 C13.8521465,18.375781 15.0510278,17.9981806 16.0139232,16.9786443 C16.9768186,15.9591079 17.6659393,14.6941466 18.081306,13.1837224 C18.4966727,11.6732982 18.6193928,10.1156966 18.4494701,8.51087086 C18.2795473,6.90604512 17.7603468,5.65052382 16.8918529,4.74426929 C15.6079923,3.46040871 14.1259108,2.77128799 12.4455638,2.67688648 C10.7652169,2.58248497 9.20761526,2.92232532 7.77271226,3.69641773 C6.33780925,4.47051014 5.16724804,5.5844313 4.26099351,7.03821461 C3.35473898,8.49199792 3.05265866,10.1439996 3.35474351,11.9942693 C3.50578593,12.8627632 3.84562628,13.570764 4.37427476,14.1182927 C4.90292323,14.6658215 4.80852314,15.5626224 4.09107163,16.8087224 C2.4673656,16.4311164 1.36288445,15.6475956 0.777595069,14.4581365 C0.192305684,13.2686774 -0.0625745792,11.8243559 0.0129466317,10.1251287 C0.126228448,7.33084386 1.19294955,5.02748148 3.21314194,3.21497242 C5.23333434,1.40246336 7.43285661,0.364062282 9.81177476,0.0997380433 C12.8703838,-0.240107406 15.6363067,0.288533141 18.1096263,1.68567554 C20.582946,3.08281795 22.0272675,5.21626015 22.4426341,8.08606617 C22.6691978,9.7097722 22.6125577,11.3240139 22.2727123,12.9288396 C21.9328668,14.5336653 21.3664662,15.9591068 20.5734935,17.2052068 C19.7805208,18.4513068 18.7515597,19.4330678 17.4865794,20.1505193 C16.2215992,20.8679708 14.7772777,21.1700511 13.1535716,21.0567693 C12.2850777,20.9812481 11.595957,20.7546878 11.0861888,20.3770818 C10.5764206,19.9994757 9.98170003,19.6029953 9.30200913,19.1876287 Z"/>
</symbol>
<use xlink:href="#icon-pinterest-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

        </a>
      </li>
    
      <li class="m-SocialLinks__a-Button--snapchat">
        <a class="m-SocialLinks__a-Icon--snapchat" href="//www.foodnetwork.com/site/snapchat-discover.html" target="_blank" aria-label="follow us on snapchat">
          
  
    
  <svg class="m-SocialLinks__a-Icon--Snapchat m-SocialLinks__a-Icon a-Icon--Snapchat a-Icon" aria-hidden="true">
    
    <symbol id="icon-snapchat-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 27 25">
    <path d="M6.03947405,8.24911607 L6.10978655,8.24911607 C6.13322416,8.57724271 6.15080211,8.8936458 6.16252092,9.19833482 C6.17423973,9.50302384 6.20353631,9.8077083 6.25041155,10.1123973 C6.25041155,10.253023 6.22697428,10.3526314 6.18009905,10.4112254 C6.13322381,10.4698195 6.05119338,10.4991161 5.9340053,10.4991161 C5.69962912,10.4756785 5.47111578,10.4405226 5.24845842,10.3936473 C5.02580106,10.3467721 4.82072498,10.2881789 4.63322405,10.2178661 C4.39884787,10.1475532 4.17033453,10.1182566 3.94767717,10.1299754 C3.72501981,10.1416943 3.5082251,10.2061467 3.29728655,10.3233348 C2.94572229,10.5108358 2.75236485,10.7627864 2.71720842,11.0791942 C2.682052,11.395602 2.81681627,11.6709899 3.1215053,11.9053661 C3.33244385,12.0459918 3.54923856,12.1690374 3.77189592,12.2745067 C3.99455328,12.379976 4.22306662,12.4795844 4.4574428,12.5733348 C4.62150612,12.6436477 4.79142629,12.7081002 4.96720842,12.7666942 C5.14299055,12.8252882 5.31291073,12.9014594 5.47697405,12.9952098 C5.75822545,13.1358355 5.93986426,13.311615 6.02189592,13.5225536 C6.10392758,13.7334921 6.074631,13.991302 5.9340053,14.2959911 C5.3949401,15.4678719 4.69768145,16.4756744 3.84220842,17.3194286 C2.98673539,18.1631828 1.87932459,18.7256772 0.519942796,19.0069286 C0.285566624,19.0538038 0.127365081,19.1709901 0.0453334209,19.3584911 C-0.0366982393,19.545992 -0.00740165725,19.7452088 0.133224046,19.9561473 C0.226974515,20.0733354 0.344160843,20.1905217 0.484786546,20.3077098 C0.625412249,20.4248979 0.766035843,20.5069283 0.906661546,20.5538036 C1.2582258,20.6944293 1.60978479,20.8116156 1.96134905,20.9053661 L3.01603655,21.1866161 C3.34416319,21.2569289 3.53752063,21.3213814 3.59611467,21.3799754 C3.65470871,21.4385695 3.71916119,21.6202083 3.78947405,21.9248973 C3.90666213,22.4874001 4.04728573,22.8213812 4.21134905,22.9268504 C4.37541237,23.0323197 4.75040862,23.0264604 5.33634905,22.9092723 C6.0863528,22.7686466 6.81290803,22.7510687 7.51603655,22.8565379 C8.21916506,22.9620072 8.88712713,23.272551 9.5199428,23.7881786 C9.73088135,23.9522419 9.95353537,24.1104434 10.1879115,24.2627879 C10.4222877,24.4151325 10.6566604,24.5498967 10.8910365,24.6670848 C11.7582284,25.1123995 12.6254072,25.3350536 13.492599,25.3350536 C14.3597909,25.3350536 15.2152511,25.1123995 16.0590053,24.6670848 C16.3871319,24.5030215 16.6976757,24.3213827 16.9906459,24.1221629 C17.2836161,23.9229432 17.5824413,23.7178671 17.8871303,23.5069286 C18.2855698,23.2022395 18.7191592,22.9971635 19.1879115,22.8916942 C19.6566639,22.7862249 20.1371278,22.7569283 20.6293178,22.8038036 C20.8871316,22.8272412 21.1449415,22.8565378 21.4027553,22.8916942 C21.6605691,22.9268506 21.9066604,22.9561472 22.1410365,22.9795848 C22.422288,23.0264601 22.627364,23.0030228 22.7562709,22.9092723 C22.8851778,22.8155219 22.9847862,22.6397424 23.055099,22.3819286 C23.0785367,22.2647405 23.1078332,22.1416948 23.1429897,22.0127879 C23.1781461,21.8838811 23.2074427,21.7491168 23.2308803,21.6084911 C23.2543179,21.491303 23.2953331,21.4034132 23.3539272,21.3448192 C23.4125212,21.2862252 23.500411,21.2452099 23.617599,21.2217723 C24.0394762,21.1280219 24.4613469,21.0225542 24.883224,20.9053661 C25.3051012,20.788178 25.7269719,20.659273 26.148849,20.5186473 C26.2660371,20.4717721 26.3773641,20.4014603 26.4828334,20.3077098 C26.5883027,20.2139594 26.6879111,20.1202103 26.7816615,20.0264598 C26.9222872,19.8389589 26.9633025,19.6221642 26.9047084,19.3760692 C26.8461144,19.1299742 26.6761942,18.9952099 26.3949428,18.9717723 C26.3246299,18.9717723 26.2484588,18.9600537 26.1664272,18.9366161 C26.0843955,18.9131785 26.0082244,18.9014598 25.9379115,18.9014598 C24.7191555,18.5264579 23.711353,17.9288077 22.914474,17.1084911 C22.1175951,16.2881745 21.4730703,15.3155279 20.9808803,14.1905223 C20.8871298,13.9327085 20.8695519,13.7100545 20.9281459,13.5225536 C20.98674,13.3350526 21.1332229,13.1827104 21.367599,13.0655223 C21.5551,12.9717719 21.7425981,12.8897414 21.930099,12.8194286 C22.1176,12.7491157 22.3050981,12.6670853 22.492599,12.5733348 C22.7269752,12.4561467 22.9672072,12.3448197 23.2133022,12.2393504 C23.4593972,12.1338812 23.6879105,11.9991169 23.898849,11.8350536 C24.1566628,11.624115 24.2679898,11.3721644 24.2328334,11.0791942 C24.197677,10.786224 24.0394755,10.545992 23.758224,10.3584911 C23.5238479,10.2178654 23.2777566,10.1299756 23.0199428,10.0948192 C22.762129,10.0596628 22.5043191,10.100678 22.2465053,10.2178661 C22.0590044,10.2881789 21.8715062,10.3467721 21.6840053,10.3936473 C21.4965044,10.4405226 21.3090062,10.4756785 21.1215053,10.4991161 C20.9808796,10.5225537 20.8754119,10.4991164 20.805099,10.4288036 C20.7347862,10.3584907 20.6996303,10.2295858 20.6996303,10.0420848 C20.7465055,9.50301962 20.7816614,8.9581032 20.805099,8.4073192 C20.8285367,7.85653519 20.8402553,7.29990013 20.8402553,6.73739732 C20.8402553,5.68270455 20.6293199,4.72177666 20.2074428,3.85458482 C19.7855657,2.98739298 19.1644781,2.23740048 18.3441615,1.60458482 C17.1254055,0.69051775 15.8480745,0.16903859 14.5121303,0.0401316951 C13.1761861,-0.0887751995 11.8168247,0.0928636091 10.4340053,0.58505357 C9.35587491,0.960055445 8.47111813,1.53426845 7.77970842,2.30770982 C7.08829871,3.08115119 6.60197545,4.01864181 6.32072405,5.12020982 C6.20353596,5.61239978 6.13908348,6.12801962 6.12736467,6.66708482 C6.11564586,7.20615002 6.08634928,7.73348849 6.03947405,8.24911607 Z"/>
</symbol>
<use xlink:href="#icon-snapchat-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

        </a>
      </li>
    </ul>

  </div>
</div>
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--siteLogo" data-animate-menu="none"><div class="o-Header__m-SiteLogo">
  <a href="//www.foodnetwork.com" title="home" aria-label="go to home page">
    
    

    

    
      
      

      
  
    
  <svg class="o-Header__a-Icon--Logo o-Header__a-Icon a-Icon--Logo a-Icon" aria-hidden="true">
    
    <symbol id="icon-brand-logo-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 187 187">
    <style>.st0{fill:#fff}.st1{fill:#e6003d}</style>
    <path class="st0" d="M93.6 0C42-.1 0 41.8 0 93.4c0 49.9 40 93 93.4 93.6 51.6.1 93.6-41.8 93.6-93.4C187 39.6 142.8.9 93.6 0z"/>
    <path class="st1" d="M113.7 79.3c-.3-.4-.6-.7-.9-.9-.3-.3-.7-.5-1.1-.7-.4-.2-.9-.3-1.3-.4-.5-.1-1-.1-1.6-.1-.6 0-1.1 0-1.6.1s-1 .2-1.4.4c-.4.2-.9.4-1.3.7-.4.3-.8.6-1.2 1-.7.7-1.3 1.4-1.9 2.3-.5.9-1 1.8-1.4 2.8-.4 1-.7 2.2-1 3.3-.3 1.2-.5 2.4-.8 3.8-.3 1.3-.5 2.6-.7 3.8-.2 1.2-.3 2.3-.3 3.4s0 2 .2 2.9c.2.9.5 1.6.9 2.3.3.4.6.7.9 1 .3.3.7.5 1.1.7.4.2.9.3 1.3.4.5.1 1 .1 1.6.1.6 0 1.1-.1 1.6-.2s1-.3 1.5-.4c.5-.2.9-.4 1.3-.7a10.6 10.6 0 0 0 3-3.3c.5-.9 1-1.9 1.3-2.9l.6-1.8c.1-.5.3-1 .4-1.6.3-1.2.5-2.4.8-3.7l.3-1.8c.1-.7.2-1.3.3-1.9.2-1.2.3-2.3.3-3.3s0-2-.2-2.8c0-1.1-.3-1.8-.7-2.5zM72.2 79.3c-.3-.4-.6-.7-.9-.9-.3-.3-.7-.5-1.1-.7-.4-.2-.9-.3-1.3-.4-.5-.1-1-.1-1.6-.1-.6 0-1.1 0-1.6.1s-1 .2-1.4.4c-.5.2-.9.4-1.3.7l-1.2.9c-.7.7-1.3 1.4-1.9 2.3-.5.9-1 1.8-1.4 2.8-.4 1-.7 2.2-1 3.3-.3 1.2-.6 2.4-.8 3.8-.3 1.3-.5 2.6-.7 3.8-.2 1.2-.3 2.3-.3 3.4s0 2 .2 2.9c.2.9.5 1.6.9 2.3.3.4.6.7.9 1a4.95 4.95 0 0 0 2.4 1.1c.5.1 1 .1 1.6.1.6 0 1.1-.1 1.6-.2s1-.3 1.5-.4c.5-.2.9-.4 1.3-.7a10.6 10.6 0 0 0 3-3.3c.5-.9 1-1.8 1.3-2.9l.6-1.8c.1-.5.3-1 .4-1.6.3-1.2.5-2.4.8-3.7l.3-1.8.3-2c.2-1.2.3-2.3.3-3.3s0-2-.2-2.8c0-.9-.3-1.6-.7-2.3zM154 78.3c-.3-.3-.7-.5-1.1-.7-.4-.2-.9-.3-1.3-.4-.5-.1-1-.1-1.6-.1-.6 0-1.1 0-1.6.1s-1 .2-1.4.4c-.5.2-.9.4-1.3.7-.4.3-.8.6-1.2 1-.7.7-1.4 1.4-1.9 2.3-.5.9-1 1.8-1.4 2.9-.4 1-.7 2.2-1 3.4-.3 1.2-.6 2.5-.8 3.8-.3 1.3-.5 2.6-.7 3.8-.2 1.2-.3 2.4-.3 3.4 0 1.1 0 2 .2 2.9.2.9.5 1.7.9 2.3.3.4.6.7.9 1 .3.3.7.5 1.1.7.4.2.9.3 1.3.4.5.1 1 .1 1.6.1.6 0 1.1-.1 1.6-.2s1-.3 1.5-.4c.5-.2.9-.4 1.4-.7.4-.3.8-.6 1.2-1 .7-.7 1.3-1.5 1.9-2.3.5-.9 1-1.9 1.3-2.9l.6-1.8c.2-.7.4-1.4.6-2.2.2-1.1.5-2.2.7-3.3.1-.6.2-1.2.3-1.7l.3-2c.2-1.2.3-2.3.3-3.3s0-2-.2-2.8c-.2-.9-.5-1.6-.9-2.3-.4-.5-.7-.9-1-1.1z"/>
    <path class="st1" d="M179.4 56.3c-.5.1-1 .2-1.5.4s-.9.4-1.4.7c-.4.3-.9.6-1.3 1-.8.7-1.4 1.5-2 2.4-.6.9-1 1.9-1.4 3-.4 1.1-.7 2.3-1.1 3.5-.3 1.2-.6 2.6-.8 4-.2.8-1.5 8.8-2.6 15.2l-1.5 8.4s0 .2-.1.5c0 .2-.1.3-.1.5-.1.7-.2 1.3-.3 1.9 0 .3-.1.5-.1.7V99.3a6.79 6.79 0 0 0 .8 3.8c.2.3.5.6.7.8l.9.6c.3.2.7.3 1.1.4h.2l-3 9.5h-.9c-1.1 0-2.1-.2-3.1-.4-.9-.2-1.8-.5-2.6-.9-.1-.1-.3-.2-.4-.3-.5-.3-1.1-.6-1.6-.9-.7-.5-1.4-1.1-1.9-1.8-.8-1.1-1.4-2.3-1.8-3.6-.5.8-1.1 1.7-1.7 2.5-.3.3-.6.7-.9 1l-.2.2c-.2.1-.3.3-.5.4-.2.1-.3.3-.5.4a14.3 14.3 0 0 1-7.2 3.2c-1 .1-2.1.2-3.3.1-1.1 0-2.1-.2-3.1-.4s-1.9-.5-2.8-.9c-.9-.4-1.6-.9-2.3-1.4-.7-.5-1.3-1.1-1.8-1.8-.9-1.2-1.4-2.6-1.8-4.1-.3-1.5-.4-3.1-.4-4.8.1-1.7.3-3.4.5-5.2.3-1.7.6-3.5 1-5.2.3-1.7.7-3.4 1.2-5.1.4-1.7.9-3.4 1.6-5.1.6-1.6 1.4-3.2 2.3-4.6.9-1.4 2-2.7 3.3-3.7.7-.6 1.5-1.1 2.4-1.6.9-.4 1.8-.8 2.8-1.1 1-.3 2-.5 3-.6 1-.1 2.1-.2 3.1-.1 1.1.1 2.1.2 3 .4.9.2 1.8.5 2.6.9s1.5.9 2.2 1.5c.6.5 1.1 1.2 1.6 1.9l.3-1.9c.3-1.6.7-3.3 1.1-5.1.4-1.8.8-3.5 1.3-5.1.5-1.6 1-3.1 1.5-4.5.2-.5.4-.9.6-1.4.1-.1.1-.3.3-.6 0 0 0-.1.1-.1.1-.2.2-.3.3-.5.2-.4.5-.8.7-1.2.5-.7 1-1.4 1.6-2 1.9-2 4.6-4.2 8.5-4.9A92.9 92.9 0 0 0 93.6 0C42-.1 0 41.8 0 93.4c0 15 3.5 29.2 9.8 41.8a9.6 9.6 0 0 0 4.6-4.1l.1-.1.1-.1c.5-.9 1-1.8 1.4-2.8.4-1 .7-2.1 1-3.3 0-.2 7.1-38.8 7.6-41.1h-6.2l3-10.3h4.9l.5-2.7c.1-.4.1-.7.2-1.1l.2-.9c.3-1.6.6-3.5.9-4.8.3-1.1.5-2 .8-2.8a22 22 0 0 1 1.3-3.4c.7-1.6 1.5-3 2.5-4.3 1-1.4 2.1-2.6 3.4-3.7.9-.8 2-1.6 3.1-2.3 1.2-.7 2.4-1.4 3.7-1.9 1.4-.6 2.9-1 4.4-1.3 1.6-.3 3.3-.5 5-.5h.2c1.7 0 3.3.2 4.7.5.6.1 1.1.3 1.6.4h.1l-3.4 10.9-.1-.1c-.1 0-.1-.1-.2-.1-.5-.2-1.1-.4-1.7-.6-.6-.1-1.3-.2-2-.2h-.1c-.7 0-1.5.1-2.2.2-.6.1-1.2.3-1.9.6h-.1-.1c-.5.2-.9.4-1.4.7-.4.3-.9.6-1.3.9-.7.6-1.4 1.3-1.9 2.2-.5.8-1 1.7-1.3 2.8-.3.9-.7 2-.9 3.3 0 .1-.2 1.1-.3 1.9-.1.7-.2 1.3-.3 1.4l-.7 4.9h7.4l-3.1 10.3h-6.1l-5.6 31.1-1.4 7.6c-.3 1.8-.6 3.3-1.1 4.8-.5 2-1.1 3.7-1.8 5.2-.7 1.6-1.6 3.1-2.6 4.4-1 1.4-2.2 2.6-3.5 3.8-1 .9-2 1.7-3.1 2.3-.9.6-1.9 1.1-3 1.6A93.3 93.3 0 0 0 93.4 187c51.6.1 93.6-41.8 93.6-93.4.1-13.2-2.7-25.8-7.6-37.3zM84.1 85.9c-.1 1.6-.4 3.4-.7 5.4-.3 2-.7 3.8-1.1 5.5-.4 1.7-.9 3.2-1.6 4.6-.6 1.4-1.3 2.7-2.2 3.9-.9 1.2-1.9 2.3-3 3.4-.8.7-1.7 1.4-2.8 2.1a23.43 23.43 0 0 1-7.4 3.1c-1.5.3-3 .5-4.7.5-1.7 0-3.2-.1-4.5-.4-1.3-.3-2.6-.7-3.6-1.2-1.1-.5-2-1.1-2.8-1.7-.8-.7-1.5-1.4-2-2.1-.8-1.1-1.4-2.2-1.9-3.4-.4-1.2-.7-2.5-.8-3.9-.1-1.4-.1-3 .1-4.6.2-1.7.4-3.5.8-5.6.4-2 .8-3.9 1.3-5.5.5-1.7 1-3.2 1.7-4.6.6-1.4 1.4-2.7 2.3-3.8.9-1.2 1.9-2.3 3.1-3.3.8-.7 1.7-1.4 2.8-2 1-.6 2.1-1.2 3.4-1.7a21.9 21.9 0 0 1 8.6-1.6c1.6 0 3.1.2 4.4.5 1.3.3 2.5.7 3.5 1.2s1.9 1.1 2.7 1.7c.8.6 1.4 1.3 2 2 .8 1 1.4 2.1 1.9 3.3.4 1.2.7 2.4.8 3.8-.2 1.3-.2 2.8-.3 4.4zm41.5 0c-.1 1.6-.4 3.4-.7 5.4-.3 2-.7 3.8-1.1 5.5-.4 1.7-1 3.2-1.6 4.6-.6 1.4-1.3 2.7-2.2 3.9-.9 1.2-1.9 2.3-3 3.4-.8.7-1.7 1.4-2.8 2.1a23.43 23.43 0 0 1-7.4 3.1c-1.5.3-3 .5-4.7.5-1.7 0-3.2-.1-4.5-.4-1.4-.3-2.6-.7-3.6-1.2-1.1-.5-2-1.1-2.8-1.7-.8-.7-1.5-1.4-2-2.1-.8-1.1-1.4-2.2-1.9-3.4-.4-1.2-.7-2.5-.8-3.9-.1-1.4-.1-3 .1-4.7.2-1.7.4-3.5.8-5.6.4-2 .8-3.9 1.3-5.5.5-1.7 1-3.2 1.7-4.6.7-1.4 1.4-2.7 2.3-3.8.9-1.2 1.9-2.3 3.1-3.3.8-.7 1.7-1.4 2.8-2 1-.6 2.1-1.2 3.4-1.7 1.2-.5 2.5-.9 4-1.1 1.4-.3 2.9-.4 4.6-.4 1.6 0 3.1.2 4.4.5 1.3.3 2.5.7 3.5 1.2s1.9 1.1 2.7 1.7c.8.6 1.4 1.3 2 2 .8 1 1.4 2.1 1.9 3.3.4 1.2.7 2.4.8 3.8-.2 1.3-.2 2.8-.3 4.4z"/>
    <g>
        <path class="st0" d="M59.5 137.9v-6.7c0-1.5-.9-2-1.8-2s-1.8.5-1.8 2v6.7h-2.8v-11h2.7v1c.7-.8 1.7-1.1 2.8-1.1 1.1 0 2 .4 2.6 1 .9.9 1.1 1.9 1.1 3.1v7h-2.8zM69.9 133.2c0 1.4.9 2.5 2.4 2.5 1.2 0 1.8-.3 2.5-1l1.7 1.6a5.27 5.27 0 0 1-4.2 1.7c-2.6 0-5.1-1.2-5.1-5.6 0-3.6 1.9-5.6 4.8-5.6 3.1 0 4.8 2.2 4.8 5.3v1.2h-6.9zm3.9-3c-.3-.7-.9-1.1-1.8-1.1s-1.5.5-1.8 1.1c-.2.4-.2.7-.3 1.2h4.2c0-.5-.1-.8-.3-1.2zM85.3 137.9c-2.2 0-3.2-1.6-3.2-3.2v-5.5h-1.2v-2.1h1.2v-3.3h2.8v3.3h1.9v2.1h-1.9v5.3c0 .6.3 1 1 1h1v2.3h-1.6zM103.6 137.9h-2.3L99 131l-2.3 6.9h-2.3l-3.4-11h3l1.8 6.8 2.2-6.8h2l2.3 6.8 1.8-6.8h2.9l-3.4 11zM119 136.7c-.7.7-1.8 1.4-3.4 1.4-1.6 0-2.7-.6-3.4-1.4-1-1-1.2-2.3-1.2-4.3s.3-3.2 1.2-4.3c.7-.7 1.8-1.4 3.4-1.4 1.6 0 2.7.6 3.4 1.4 1 1 1.2 2.3 1.2 4.3s-.2 3.2-1.2 4.3zm-2.1-7c-.3-.3-.7-.5-1.3-.5-.6 0-1 .2-1.3.5-.6.6-.6 1.5-.6 2.7 0 1.1.1 2.1.6 2.7.3.3.7.5 1.3.5.5 0 1-.2 1.3-.5.6-.6.6-1.5.6-2.7 0-1.2-.1-2.1-.6-2.7zM130.9 129.9c-.4-.4-.8-.7-1.5-.7-.8 0-1.8.6-1.8 2v6.6h-2.7v-11h2.7v1.1c.5-.6 1.6-1.2 2.8-1.2 1.1 0 1.8.3 2.6 1l-2.1 2.2zM143.9 137.9l-2.7-4.6-1.2 1.3v3.3h-2.8v-15.1h2.8v8.5l3.7-4.5h3.3l-3.9 4.4 4.2 6.6h-3.4z"/>
    </g>
</symbol>
<use xlink:href="#icon-brand-logo-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
  </svg>

  

    
  </a>

</div>
</div>

  

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true" data-href="/content/food-com/en/recipes" data-nosnippet>
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem_280677863" data-target="//www.foodnetwork.com/recipes">
            Recipes
          </button>
          
          
        
        
      
      
      <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu  o-Header__m-DropdownMenu--FlyOut " data-module="flyout-menu" id="flyoutnavitem_280677863">
        <script type="text/x-config">{"horizontalScroll":{"deferInit":true}}</script>
        <div class="m-DropdownMenu__m-Body" data-horizontal-scroll>
          <a tabindex="0" class="screenReaderOnly" href="//www.foodnetwork.com/recipes">Recipes</a>
          
          
          
          <div class="m-DropdownMenu__m-TextPromo " data-animate-item>
            
            
            <ul>
              <li>
                <a href="//www.foodnetwork.com/holidays-and-parties/packages/valentine-s-day" tabindex="0" target="_self">Valentine&#39;s Day</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/big-game/big-game-parties" tabindex="0" target="_blank">Game Day</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/recipes/packages/comfort-foods" tabindex="0" target="_self">Comfort Food</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/recipes/photos/lunar-new-year-recipes" tabindex="0" target="_self">Lunar New Year</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/shows/tv-schedule" tabindex="0" target="_self">On TV</a>
              </li>
            </ul>
            <div>
              
  <a class="m-DropdownMenu__a-Cta" href="//www.foodnetwork.com/recipes">See All Recipes</a>

            </div>
          </div>
          
          <div class="m-DropdownMenu__m-MediaGroup">
            <div class="m-DropdownMenu__m-Container">
              
              
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 1, "cardType": "Recipe of the Day"}'>
                  <span class="m-MediaPromo__a-Label">Recipe of the Day</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Recipe " data-animate-item>
                              <a href="//www.foodnetwork.com/recipes/food-network-kitchen/marry-me-chicken-13500446" title="Marry Me Chicken" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/1/23/new_fnk_marry_me_chicken_s4x3.jpg.rend.hgtvcom.196.196.suffix/1674491187659.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/1/23/new_fnk_marry_me_chicken_s4x3.jpg.rend.hgtvcom.196.196.suffix/1674491187659.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Marry Me Chicken</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 2, "cardType": "Trending Recipes"}'>
                  <span class="m-MediaPromo__a-Label">Trending Recipes</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Recipe " data-animate-item>
                              <a href="//www.foodnetwork.com/recipes/food-network-kitchen/lobster-wellington-5304384" title="Lobster Wellington" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="Lobster Wellington" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2018/6/19/0/FNK_Lobster-Wellington-H2_s4x3.jpg.rend.hgtvcom.196.196.suffix/1529422232966.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="Lobster Wellington" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2018/6/19/0/FNK_Lobster-Wellington-H2_s4x3.jpg.rend.hgtvcom.196.196.suffix/1529422232966.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Lobster Wellington</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Recipe " data-animate-item>
                              <a href="//www.foodnetwork.com/fnk/recipes/king-cake-9848229" title="King Cake" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="Vallery Lomas makes Raspberry Cream Cheese King Cake, as seen on Food Network Kitchen." data-src="//food.fnr.sndimg.com/content/dam/images/food/plus/fullset/2021/02/03/FNP_Lomas_Raspberry-Cream-Cheese-King-Cake_4x3.jpg.rend.hgtvcom.196.196.suffix/1612797569366.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="Vallery Lomas makes Raspberry Cream Cheese King Cake, as seen on Food Network Kitchen." src="//food.fnr.sndimg.com/content/dam/images/food/plus/fullset/2021/02/03/FNP_Lomas_Raspberry-Cream-Cheese-King-Cake_4x3.jpg.rend.hgtvcom.196.196.suffix/1612797569366.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">King Cake</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Recipe " data-animate-item>
                              <a href="//www.foodnetwork.com/recipes/food-network-kitchen/the-best-chili-7448133" title="The Best Chili" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="Food Network Kitchen&#39;s Best Chili Recipe." data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2019/9/3/0/FNK_the-best-chili_H_s4x3.jpg.rend.hgtvcom.196.196.suffix/1567536797962.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="Food Network Kitchen&#39;s Best Chili Recipe." src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2019/9/3/0/FNK_the-best-chili_H_s4x3.jpg.rend.hgtvcom.196.196.suffix/1567536797962.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">The Best Chili</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Recipe " data-animate-item>
                              <a href="//www.foodnetwork.com/recipes/food-network-kitchen/spinach-and-artichoke-stuffed-football-bread-bowl-13500482" title="Spinach + Artichoke Bread Bowl" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/1/23/new_fnk_apinach_andartichokestuffed_football_bread_bowl_s4x3.jpg.rend.hgtvcom.196.196.suffix/1674491733379.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/1/23/new_fnk_apinach_andartichokestuffed_football_bread_bowl_s4x3.jpg.rend.hgtvcom.196.196.suffix/1674491733379.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Spinach + Artichoke Bread Bowl</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
            </div>
            
          </div>
        </div>
      </div>
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true" data-href="/content/food-com/en/shows">
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem" data-target="//www.foodnetwork.com/shows">
            Shows
          </button>
          
          
        
        
      
      
      <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu  o-Header__m-DropdownMenu--FlyOut " data-module="flyout-menu" id="flyoutnavitem">
        <script type="text/x-config">{"horizontalScroll":{"deferInit":true}}</script>
        <div class="m-DropdownMenu__m-Body" data-horizontal-scroll>
          <a tabindex="0" class="screenReaderOnly" href="//www.foodnetwork.com/shows">Shows</a>
          
          
          
          
          
    

    <div class="m-DropdownMenu__m-SchedulePromo m-SchedulePromo" data-module="on-tv-full-width"> 
      <script type="text/x-config">
      {
        "onTonightTimeGMT":"3:0",
        "isWhatsHotOn":false,
        "removeHiddenElements": false,
        "parentClass":"m-SchedulePromo",
        "display": {
          "upNext": false,
          "watchLive": false
        }
      }
      </script>
      <span class="m-SchedulePromo__a-Label">TV Schedule</span>
      
  <a class="m-SchedulePromo__a-Cta" href="//www.foodnetwork.com/shows/tv-schedule">See TV Schedule</a>

        <div class="m-SchedulePromo__m-TextWrap m-TextWrap">
          
          <ul>
            
              
              <li data-time="2024-02-08T13:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/outchefd">
      <span class="m-SchedulePromo__a-HeadlineText">Outchef'd</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">8am | 7c</div>

              </li>
            
              
              <li data-time="2024-02-08T13:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/outchefd">
      <span class="m-SchedulePromo__a-HeadlineText">Outchef'd</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">8:30am | 7:30c</div>

              </li>
            
              
              <li data-time="2024-02-08T14:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/supermarket-stakeout">
      <span class="m-SchedulePromo__a-HeadlineText">Supermarket Stakeout</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">9am | 8c</div>

              </li>
            
              
              <li data-time="2024-02-08T15:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/supermarket-stakeout">
      <span class="m-SchedulePromo__a-HeadlineText">Supermarket Stakeout</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">10am | 9c</div>

              </li>
            
              
              <li data-time="2024-02-08T16:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/worst-cooks-in-america">
      <span class="m-SchedulePromo__a-HeadlineText">Worst Cooks in America</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">11am | 10c</div>

              </li>
            
              
              <li data-time="2024-02-08T17:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/worst-cooks-in-america">
      <span class="m-SchedulePromo__a-HeadlineText">Worst Cooks in America</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">12pm | 11c</div>

              </li>
            
              
              <li data-time="2024-02-08T18:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">1pm | 12c</div>

              </li>
            
              
              <li data-time="2024-02-08T18:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">1:30pm | 12:30c</div>

              </li>
            
              
              <li data-time="2024-02-08T19:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">2pm | 1c</div>

              </li>
            
              
              <li data-time="2024-02-08T19:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">2:30pm | 1:30c</div>

              </li>
            
              
              <li data-time="2024-02-08T20:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">3pm | 2c</div>

              </li>
            
              
              <li data-time="2024-02-08T20:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">3:30pm | 2:30c</div>

              </li>
            
              
              <li data-time="2024-02-08T21:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">4pm | 3c</div>

              </li>
            
              
              <li data-time="2024-02-08T21:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">4:30pm | 3:30c</div>

              </li>
            
              
              <li data-time="2024-02-08T22:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">5pm | 4c</div>

              </li>
            
              
              <li data-time="2024-02-08T22:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">5:30pm | 4:30c</div>

              </li>
            
              
              <li data-time="2024-02-08T23:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">6pm | 5c</div>

              </li>
            
              
              <li data-time="2024-02-08T23:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">6:30pm | 5:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T00:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">7pm | 6c</div>

              </li>
            
              
              <li data-time="2024-02-09T00:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">7:30pm | 6:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T01:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">8pm | 7c</div>

              </li>
            
              
              <li data-time="2024-02-09T01:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">8:30pm | 7:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T02:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">9pm | 8c</div>

              </li>
            
              
              <li data-time="2024-02-09T02:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">9:30pm | 8:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T03:00:00.000Z" style="display: none;">
                <div class="m-SchedulePromo__a-SubHeadline">
                    On Tonight
                </div>
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">10pm | 9c</div>

              </li>
            
              
              <li data-time="2024-02-09T03:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">10:30pm | 9:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T04:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">11pm | 10c</div>

              </li>
            
              
              <li data-time="2024-02-09T04:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">11:30pm | 10:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T05:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">12am | 11c</div>

              </li>
            
              
              <li data-time="2024-02-09T05:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">12:30am | 11:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T06:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">1am | 12c</div>

              </li>
            
              
              <li data-time="2024-02-09T06:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">1:30am | 12:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T07:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">2am | 1c</div>

              </li>
            
              
              <li data-time="2024-02-09T07:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">2:30am | 1:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T08:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">3am | 2c</div>

              </li>
            
              
              <li data-time="2024-02-09T08:30:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/beat-bobby-flay">
      <span class="m-SchedulePromo__a-HeadlineText">Beat Bobby Flay</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">3:30am | 2:30c</div>

              </li>
            
              
              <li data-time="2024-02-09T09:00:00.000Z" style="display: none;">
                
                
  <span class="m-SchedulePromo__a-Headline">
    <a href="//www.foodnetwork.com/shows/nfl-tailgate-takedown">
      <span class="m-SchedulePromo__a-HeadlineText">NFL Tailgate Takedown</span>
      
    </a>
  </span>

                
  <div class="m-SchedulePromo__a-Description">4am | 3c</div>

              </li>
            
          </ul>
          <div>
            
  <a class="m-DropdownMenu__a-Cta" href="//www.foodnetwork.com/shows">See All Shows</a>

          </div>
        </div>
      
    </div>


          <div class="m-DropdownMenu__m-MediaGroup">
            <div class="m-DropdownMenu__m-Container">
              
              
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 1, "cardType": "Popular Shows"}'>
                  <span class="m-MediaPromo__a-Label">Popular Shows</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Show " data-animate-item>
                              <a href="//www.foodnetwork.com/shows/tournament-of-champions" title="Tournament of Champions" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/t/tournament-of-champions/fnk-app-show-chip-composite-tournament-of-champions.jpg.rend.hgtvcom.126.196.suffix/1582744731823.jpeg" width="126" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/t/tournament-of-champions/fnk-app-show-chip-composite-tournament-of-champions.jpg.rend.hgtvcom.126.196.suffix/1582744731823.jpeg" width="126" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Tournament of Champions</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Show " data-animate-item>
                              <a href="//www.foodnetwork.com/shows/kids-baking-championship" title="Kids Baking Championship" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/k/kids-baking-championship/fnk-app-show-chip-composite-kids-baking-championship.jpg.rend.hgtvcom.126.196.suffix/1566937103170.jpeg" width="126" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/k/kids-baking-championship/fnk-app-show-chip-composite-kids-baking-championship.jpg.rend.hgtvcom.126.196.suffix/1566937103170.jpeg" width="126" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Kids Baking Championship</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Show " data-animate-item>
                              <a href="//www.foodnetwork.com/shows/diners-drive-ins-and-dives" title="Diners, Drive-Ins and Dives" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/d/diners-drive-ins-and-dives/fnk-app-show-chip-composite-diners-drive-ins-dives.jpg.rend.hgtvcom.126.196.suffix/1566856919197.jpeg" width="126" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/d/diners-drive-ins-and-dives/fnk-app-show-chip-composite-diners-drive-ins-dives.jpg.rend.hgtvcom.126.196.suffix/1566856919197.jpeg" width="126" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Diners, Drive-Ins and Dives</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 2, "cardType": "In the Kitchen"}'>
                  <span class="m-MediaPromo__a-Label">In the Kitchen</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Show " data-animate-item>
                              <a href="//www.foodnetwork.com/shows/the-pioneer-woman" title="The Pioneer Woman" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/t/the-pioneer-woman/fnk-app-show-chip-composite-pioneer-woman.jpg.rend.hgtvcom.126.196.suffix/1566937458517.jpeg" width="126" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/t/the-pioneer-woman/fnk-app-show-chip-composite-pioneer-woman.jpg.rend.hgtvcom.126.196.suffix/1566937458517.jpeg" width="126" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">The Pioneer Woman</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Show " data-animate-item>
                              <a href="//www.foodnetwork.com/shows/the-kitchen" title="The Kitchen" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/t/the-kitchen/fnk-app-show-chip-composite-the-kitchen.jpg.rend.hgtvcom.126.196.suffix/1566937754934.jpeg" width="126" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/t/the-kitchen/fnk-app-show-chip-composite-the-kitchen.jpg.rend.hgtvcom.126.196.suffix/1566937754934.jpeg" width="126" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">The Kitchen</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Show " data-animate-item>
                              <a href="//www.foodnetwork.com/shows/girl-meets-farm" title="Girl Meets Farm" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/g/girl-meets-farm/fnk-app-show-chip-composite-girl-meets-farm.jpg.rend.hgtvcom.126.196.suffix/1566857958556.jpeg" width="126" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/shows/g/girl-meets-farm/fnk-app-show-chip-composite-girl-meets-farm.jpg.rend.hgtvcom.126.196.suffix/1566857958556.jpeg" width="126" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Girl Meets Farm</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
            </div>
            
          </div>
        </div>
      </div>
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true" data-href="/content/food-com/en/profiles">
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem_1504923160" data-target="//www.foodnetwork.com/profiles">
            Chefs
          </button>
          
          
        
        
      
      
      <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu  o-Header__m-DropdownMenu--FlyOut " data-module="flyout-menu" id="flyoutnavitem_1504923160">
        <script type="text/x-config">{"horizontalScroll":{"deferInit":true}}</script>
        <div class="m-DropdownMenu__m-Body" data-horizontal-scroll>
          <a tabindex="0" class="screenReaderOnly" href="//www.foodnetwork.com/profiles">Chefs</a>
          
          
          
          
          
          <div class="m-DropdownMenu__m-MediaGroup">
            <div class="m-DropdownMenu__m-Container">
              
              
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 1, "cardType": "Chefs &amp; Hosts"}'>
                  <span class="m-MediaPromo__a-Label">Chefs &amp; Hosts</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/kardea-brown" title="Kardea Brown" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/plus/profiles/kardea-brown/FN-TalentAvatar_Kardea-Brown_s1x1.jpg.rend.hgtvcom.196.196.suffix/1583778811266.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/plus/profiles/kardea-brown/FN-TalentAvatar_Kardea-Brown_s1x1.jpg.rend.hgtvcom.196.196.suffix/1583778811266.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Kardea Brown</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/ree-drummond" title="Ree Drummond" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/ree-drummond/FN-TalentAvatar-Ree-Drummond-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174321860.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/ree-drummond/FN-TalentAvatar-Ree-Drummond-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174321860.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Ree Drummond</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/ina-garten" title="Ina Garten" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/ina-garten/FN-TalentAvatar-Ina-Garten-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174352136.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/ina-garten/FN-TalentAvatar-Ina-Garten-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174352136.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Ina Garten</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/sunny-anderson" title="Sunny Anderson" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/sunny-anderson/FN-TalentAvatar-Sunny-Anderson-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174628523.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/sunny-anderson/FN-TalentAvatar-Sunny-Anderson-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174628523.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Sunny Anderson</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/bobby-flay" title="Bobby Flay" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/bobby-flay/FN-TalentAvatar-Bobby-Flay-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174427795.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/bobby-flay/FN-TalentAvatar-Bobby-Flay-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174427795.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Bobby Flay</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/valerie-bertinelli" title="Valerie Bertinelli" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/valerie-bertinelli/FN-TalentAvatar-Valerie-Bertinelli-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174273944.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/valerie-bertinelli/FN-TalentAvatar-Valerie-Bertinelli-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174273944.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Valerie Bertinelli</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/guy-fieri" title="Guy Fieri" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/guy-fieri/FN-TalentAvatar-Guy-Fieri-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174403377.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/talent/guy-fieri/FN-TalentAvatar-Guy-Fieri-colorblock.jpg.rend.hgtvcom.196.196.suffix/1531174403377.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Guy Fieri</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Profile " data-animate-item>
                              <a href="//www.foodnetwork.com/profiles/talent/molly-yeh" title="Molly Yeh" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/plus/unsized/avatars/FN-TalentAvatar-Molly-Yeh.jpg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/plus/unsized/avatars/FN-TalentAvatar-Molly-Yeh.jpg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Molly Yeh</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 2, "cardType": ""}'>
                  <span class="m-MediaPromo__a-Label"></span>

                      <div class="m-MediaPromo__m-Container">
                          
                        </div>
                </div>
              
            </div>
            <div class="m-DropdownMenu__a-Cta a-Cta" data-animate-item>
              
  <a class="m-DropdownMenu__a-Cta" href="//www.foodnetwork.com/profiles">See All Chefs</a>

            </div>
          </div>
        </div>
      </div>
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true">
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem_2142418278">
            Trending
          </button>
          
          
        
        
      
      
      <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu  o-Header__m-DropdownMenu--FlyOut " data-module="flyout-menu" id="flyoutnavitem_2142418278">
        <script type="text/x-config">{"horizontalScroll":{"deferInit":true}}</script>
        <div class="m-DropdownMenu__m-Body" data-horizontal-scroll>
          <a tabindex="0" class="screenReaderOnly">Trending</a>
          
          
          
          <div class="m-DropdownMenu__m-TextPromo " data-animate-item>
            
            
            <ul>
              <li>
                <a href="//www.foodnetwork.com/recipes/packages/trending-eats" tabindex="0" target="_self">Trending Eats</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/site/newsletter-sign-up" tabindex="0" target="_self">Newsletters</a>
              </li>
            </ul>
            
          </div>
          
          <div class="m-DropdownMenu__m-MediaGroup">
            <div class="m-DropdownMenu__m-Container">
              
              
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 1, "cardType": "The Latest"}'>
                  <span class="m-MediaPromo__a-Label">The Latest</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/fn-dish/news/taylor-swift-travis-kelce-super-bowl-party-ideas-food-recipes" title="How to Throw a Party If You’re Only Watching the Super Bowl for Taylor Swift" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/06/FN_GettyImages-1968530700_s4x3.jpg.rend.hgtvcom.196.196.suffix/1707251499508.jpeg" width="196" title="1968530700" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/06/FN_GettyImages-1968530700_s4x3.jpg.rend.hgtvcom.196.196.suffix/1707251499508.jpeg" width="196" title="1968530700" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">How to Throw a Party If You’re Only Watching the Super Bowl for Taylor Swift</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/fn-dish/news/is-eating-toothpicks-safe" title="Please Don’t Fry Your Toothpicks and Eat Them" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_GettyImages-1059683908_s4x3.jpg.rend.hgtvcom.196.196.suffix/1707151179108.jpeg" width="196" title="1059683908" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_GettyImages-1059683908_s4x3.jpg.rend.hgtvcom.196.196.suffix/1707151179108.jpeg" width="196" title="1059683908" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Please Don’t Fry Your Toothpicks and Eat Them</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/fn-dish/news/food-network-hot-list-2024" title="Food Network’s Newest “Hot List” — Stars to Watch in 2024" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/FN_Hot-List-2024.png.rend.hgtvcom.196.196.suffix/1706717405496.png" width="196" title="Blog Post Images – Looking Back 2023 Hot List + 2024 - Hot List 2024" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/FN_Hot-List-2024.png.rend.hgtvcom.196.196.suffix/1706717405496.png" width="196" title="Blog Post Images – Looking Back 2023 Hot List + 2024 - Hot List 2024" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Food Network’s Newest “Hot List” — Stars to Watch in 2024</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 2, "cardType": "Currently Obsessed With..."}'>
                  <span class="m-MediaPromo__a-Label">Currently Obsessed With...</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/fn-dish/news/oreo-space-dunk-cookies" title="Oreo’s New Cookie Will Take You to Outer Space" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/19/FN_OREO-Space-Dunk-x-Space-Perspective_s4x3.jpg.rend.hgtvcom.196.196.suffix/1705691180173.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/19/FN_OREO-Space-Dunk-x-Space-Perspective_s4x3.jpg.rend.hgtvcom.196.196.suffix/1705691180173.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Oreo’s New Cookie Will Take You to Outer Space</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/fn-dish/news/mcdonalds-double-big-mac-returns-2024" title="McDonald’s Brings Back Its Fan-Favorite Double Big Mac" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/17/FN_mcdonalds_bigmac-double_s4x3.jpg.rend.hgtvcom.196.196.suffix/1705520127415.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/17/FN_mcdonalds_bigmac-double_s4x3.jpg.rend.hgtvcom.196.196.suffix/1705520127415.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">McDonald’s Brings Back Its Fan-Favorite Double Big Mac</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
            </div>
            
          </div>
        </div>
      </div>
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true" data-href="/content/food-com/en/how-to/packages/s/shopping">
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem_2128140266" data-target="//www.foodnetwork.com/how-to/packages/shopping">
            Shop
          </button>
          
          
        
        
      
      
      <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu  o-Header__m-DropdownMenu--FlyOut " data-module="flyout-menu" id="flyoutnavitem_2128140266">
        <script type="text/x-config">{"horizontalScroll":{"deferInit":true}}</script>
        <div class="m-DropdownMenu__m-Body" data-horizontal-scroll>
          <a tabindex="0" class="screenReaderOnly" href="//www.foodnetwork.com/how-to/packages/shopping">Shop</a>
          
          
          
          <div class="m-DropdownMenu__m-TextPromo " data-animate-item>
            
            
            <ul>
              <li>
                <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews" tabindex="0" target="_self">Product Reviews</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/how-to/packages/shopping/gift-ideas" tabindex="0" target="_self">Gift Ideas</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/how-to/packages/shopping/articles" tabindex="0" target="_self">Shop Everything</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/site/newsletter-sign-up" tabindex="0" target="_self">Newsletter</a>
              </li>
            </ul>
            <div>
              
  <a class="m-DropdownMenu__a-Cta" href="https://www.foodnetwork.com/how-to/packages/shopping">Shop Now</a>

            </div>
          </div>
          
          <div class="m-DropdownMenu__m-MediaGroup">
            <div class="m-DropdownMenu__m-Container">
              
              
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 1, "cardType": "What&#39;s New"}'>
                  <span class="m-MediaPromo__a-Label">What&#39;s New</span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/fn-dish/shopping/lunar-new-year-foods-gifts" title="32 Lunar New Year Food Gifts We Can’t Wait to Bring to the Table" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_Te-Company-3_s4x3.jpg.rend.hgtvcom.196.196.suffix/1707159929943.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_Te-Company-3_s4x3.jpg.rend.hgtvcom.196.196.suffix/1707159929943.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">32 Lunar New Year Food Gifts We Can’t Wait to Bring to the Table</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/how-to/packages/shopping/sales-and-deals/our-place-valentines-day-sale" title="Don&#39;t Miss the Our Place Food Lover&#39;s Sale Happening Now" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2024/2/2/rx_our-place_food-lovers-sale.jpg.rend.hgtvcom.196.196.suffix/1706911003939.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/products/2024/2/2/rx_our-place_food-lovers-sale.jpg.rend.hgtvcom.196.196.suffix/1706911003939.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Don&#39;t Miss the Our Place Food Lover&#39;s Sale Happening Now</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-panini-presses" title="4 Best Panini Presses of 2024, Tested and Reviewed" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/2/rx_greenpan-elite-7-in-1-contact-grill-griddle--waffler.jpeg.rend.hgtvcom.196.196.suffix/1688309508400.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/2/rx_greenpan-elite-7-in-1-contact-grill-griddle--waffler.jpeg.rend.hgtvcom.196.196.suffix/1688309508400.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">4 Best Panini Presses of 2024, Tested and Reviewed</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-air-fryer" title="9 Best Air Fryers of 2024, Tested and Reviewed" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/4/06/FN-ProductTestingImages-05-March%202023-Air%20Fryers-v2.png.rend.hgtvcom.196.196.suffix/1680812601420.png" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/4/06/FN-ProductTestingImages-05-March%202023-Air%20Fryers-v2.png.rend.hgtvcom.196.196.suffix/1680812601420.png" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">9 Best Air Fryers of 2024, Tested and Reviewed</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Article " data-animate-item>
                              <a href="//www.foodnetwork.com/how-to/packages/shopping/best-black-owned-liquor-spirits-brands" title="6 Black-Owned Spirits Brands You Need To Know" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/20/rx_ten-to-one-lifestyle.jpg.rend.hgtvcom.196.196.suffix/1689893861983.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/20/rx_ten-to-one-lifestyle.jpg.rend.hgtvcom.196.196.suffix/1689893861983.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">6 Black-Owned Spirits Brands You Need To Know</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 2, "cardType": ""}'>
                  <span class="m-MediaPromo__a-Label"></span>

                      <div class="m-MediaPromo__m-Container">
                          
                        </div>
                </div>
              
            </div>
            
          </div>
        </div>
      </div>
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true" data-href="/content/food-com/en/features/articles/s/sweepstakes-and-contests">
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem_1195015741" data-target="//www.foodnetwork.com/features/articles/sweepstakes-and-contests">
            Sweepstakes
          </button>
          
          
        
        
      
      
      <div data-type="dropdown-menu" class="o-Header__m-DropdownMenu  o-Header__m-DropdownMenu--FlyOut " data-module="flyout-menu" id="flyoutnavitem_1195015741">
        <script type="text/x-config">{"horizontalScroll":{"deferInit":true}}</script>
        <div class="m-DropdownMenu__m-Body" data-horizontal-scroll>
          <a tabindex="0" class="screenReaderOnly" href="//www.foodnetwork.com/features/articles/sweepstakes-and-contests">Sweepstakes</a>
          
          
          
          <div class="m-DropdownMenu__m-TextPromo " data-animate-item>
            
            
            <ul>
              <li>
                <a href="//www.foodnetwork.com/sponsored/sweepstakes/ready-set-cook" tabindex="0" target="_self">Ready, Set, Cook $10k Giveaway</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/sponsored/sweepstakes/hgtv-dream-home-sweepstakes" tabindex="0" target="_self">HGTV Dream Home 2024</a>
              </li>
            
              <li>
                <a href="//www.foodnetwork.com/features/articles/sweepstakes-and-contests" tabindex="0" target="_self">All Sweepstakes + Contests</a>
              </li>
            </ul>
            
          </div>
          
          <div class="m-DropdownMenu__m-MediaGroup">
            <div class="m-DropdownMenu__m-Container">
              
              
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 1, "cardType": ""}'>
                  <span class="m-MediaPromo__a-Label"></span>

                      <div class="m-MediaPromo__m-Container">
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Ulp " data-animate-item>
                              <a href="//www.foodnetwork.com/sponsored/sweepstakes/ready-set-cook" title="Enter Daily for Your Chance to Win $10,000" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="" data-src="//food.fnr.sndimg.com/content/dam/images/food/editorial/sweepstakes/0124/FN-Site-Use-Navigation-Ready-Set-Cook-2023-500x500.jpg.rend.hgtvcom.196.196.suffix/1702669327505.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="" src="//food.fnr.sndimg.com/content/dam/images/food/editorial/sweepstakes/0124/FN-Site-Use-Navigation-Ready-Set-Cook-2023-500x500.jpg.rend.hgtvcom.196.196.suffix/1702669327505.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">Enter Daily for Your Chance to Win $10,000</div>
                              </a>
                            </div>

                            
                          
                            
                            <div class="m-PromoItem m-DropdownMenu__m-PromoItem m-PromoItem--Ulp " data-animate-item>
                              <a href="//www.foodnetwork.com/sponsored/sweepstakes/hgtv-dream-home-sweepstakes" title="HGTV Dream Home 2024" target="_self">
                                <div class="m-PromoItem__m-MediaWrap">
                                  
                                  
  
    
    
    
    <img class="m-PromoItem__a-Image a-Image" alt="HGTV Dream Home 2024 in St. Augustine, FL" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/15/dh24_kitchen-cookupyourdreamkitchensweeps_h.jpg.rend.hgtvcom.196.196.suffix/1702909026390.jpeg" width="196" height="196"/>
    <noscript>
      
      <img class="m-PromoItem__a-Image a-Image" alt="HGTV Dream Home 2024 in St. Augustine, FL" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/15/dh24_kitchen-cookupyourdreamkitchensweeps_h.jpg.rend.hgtvcom.196.196.suffix/1702909026390.jpeg" width="196" height="196"/>
    </noscript>
    
  
  

                                  
                                </div>
                                <div class="m-PromoItem__a-Headline">HGTV Dream Home 2024</div>
                              </a>
                            </div>

                            
                          
                        </div>
                </div>
              
                
                <div class="m-DropdownMenu__m-MediaPromo" data-analytics='{"cardPosition": 2, "cardType": ""}'>
                  <span class="m-MediaPromo__a-Label"></span>

                      <div class="m-MediaPromo__m-Container">
                          
                        </div>
                </div>
              
            </div>
            
          </div>
        </div>
      </div>
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--flyOutNavItem" data-animate-menu="animate">
  
  <div class="o-Header__m-NavItem" data-type="menu-link" data-href="/content/food-com/en/shows/tv-schedule">
      
        
          <button class="o-Header__a-NavLink" aria-haspopup="dialog" aria-expanded="false" aria-controls="flyoutnavitem_1562414107" data-target="//www.foodnetwork.com/shows/tv-schedule">
            What&#39;s on TV
          </button>
          
          
        
        
      
      
      
    </div>
  
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--searchBox" data-animate-menu="animate"><section class="o-SiteSearch">
  
  <form action="/search" method="get" data-module="search-form" class="m-SearchForm" data-mobile-search-box>
    <script type="text/x-config">
        {
          "searchSite": "food",
          "searchType": "desktop header search",
          "selectorPrefix": "m-SearchForm",
          "listenForFocusOut": false,
          "typeAhead": "on",
          "src": "foodcom searchBox.html"
        }
    </script>
    <div class="m-SearchForm__m-Area m-Area__m-Container" data-search-form-wrapper="" data-search-form-field="">
        <span class="m-SearchForm__m-InputWrap">
          <input id="typeaheadinput" class="m-SearchForm__a-Input a-Input" type="text" autocomplete="off" placeholder="What are you looking for?" data-type="search-input" aria-label="site search input"/>
          
            <button class="m-SearchBox__a-Button--Clear" data-type="reset-btn" aria-label="clear search input" type="button">
              <!--Clear Icon-->
              
                <svg class="o-Header__a-Icon a-Icon--clear" aria-hidden="true">
                  <symbol id="icon-clear-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 12.51 12.51">
    <defs>
        <style>.cls-1{fill:none;stroke:#979797;stroke-linecap:square;}</style>
    </defs>
    <title>X out of Search</title>
    <g id="Designs">
        <g id="Desktop---Search-Suggestions">
            <g id="Group-3">
                <line class="cls-1" id="Line-2" x1="0.71" x2="11.8" y1="0.71" y2="11.8"/>
                <line class="cls-1" data-name="Line-2" id="Line-2-2" x1="11.8" x2="0.71" y1="0.71" y2="11.8"/>
            </g>
        </g>
    </g>
</symbol>
<use xlink:href="#icon-clear-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
                </svg>
              
            </button>
            <button class="m-SearchBox__a-Button--Search" data-type="search-button" aria-label="submit site search" role="button">
              <!--Search Icon-->
              
                <svg class="o-SiteSearch__a-Icon a-Icon--search" aria-hidden="true">
                  <symbol id="icon-discovery-search-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 26 25">
    <path d="M18 10a8 8 0 1 0-2.3 5.7A8 8 0 0 0 18 10zm.2 5.8l7.8 7.7-1.5 1.5-7.6-7.7a10 10 0 1 1 1.3-1.5z"/>
</symbol>
<use xlink:href="#icon-discovery-search-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
                </svg>
              
            </button>
             <div class="m-SearchForm__m-HintsContainer">
            	
            	<div data-typeahead-hints=""></div>
            </div>
          
        </span>
        
    </div>
  </form>
</section>
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--iconLink" data-animate-menu="animate">
    
    <div class="o-Header__m-Navigation m-Navigation--IconWrap m-Navigation--saves">
        <a href="//www.foodnetwork.com/saves" title="Saves" aria-label="Saves">
            
                <svg class="o-Header__a-Icon a-Icon--saves" aria-hidden="true">
                    <symbol id="icon-saves-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 18 23">
    <path d="M2 1.536h13.75c.345 0 .624.28.624.625v18.527c0 .345-.28.625-.625.625-.116 0-.23-.032-.329-.093l-6.263-3.876c-.202-.125-.459-.125-.66.002L2.33 21.21c-.292.183-.678.095-.861-.197-.063-.1-.096-.215-.096-.332V2.16c0-.346.28-.625.625-.625z" fill-rule="evenodd" stroke="#1C1C1C" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"/>
</symbol>
<use xlink:href="#icon-saves-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
                    <use xlink:href="#icon-saves"></use>
                </svg>
            
        </a>
    </div>
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--iconLink" data-animate-menu="animate">
    
    <div class="o-Header__m-Navigation m-Navigation--IconWrap m-Navigation--shopping-list">
        <a href="https://www.foodnetwork.com/kitchen/shopping-list" title="Shopping List" aria-label="Shopping List">
            
                <svg class="o-Header__a-Icon a-Icon--shopping-list" aria-hidden="true">
                    <symbol id="icon-shopping-list-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 24 25">
    <g fill-rule="evenodd" id="Page-1" stroke="none" stroke-width="1">
        <g stroke="#000000" transform="translate(1.000000, 1.000000)">
            <polyline fill="currentColor" id="cart" points="4.41636624 3.61931328 22.1280206 3.61931328 20.4664838 12.8073053 6.09786144 12.8073053" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"/>
            <polyline id="Stroke-1" points="-1.40687462e-14 4.92406116e-14 3.8904624 1.3835448 6.30813744 16.5728138 19.9938974 16.5728138" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"/>
            <path d="M17.713409,19.9618538 C18.0895302,19.9618538 18.4301073,20.1144913 18.6766837,20.3610676 C18.92326,20.6076439 19.0758974,20.9482211 19.0758974,21.3243423 C19.0758974,21.7008564 18.9233018,22.041722 18.6766533,22.2884726 C18.4300957,22.5351321 18.0895238,22.6877738 17.713409,22.6877738 C17.3369012,22.6877738 16.9960409,22.535174 16.7493091,22.2884422 C16.5025773,22.0417104 16.3499774,21.70085 16.3499774,21.3243423 C16.3499774,20.9482275 16.5026192,20.6076556 16.7492787,20.361098 C16.9960293,20.1144495 17.3368948,19.9618538 17.713409,19.9618538 Z" id="Stroke-7" stroke-width="1.836"/>
            <path d="M7.82924901,19.9618538 C8.20537019,19.9618538 8.54594733,20.1144913 8.79252367,20.3610676 C9.03910001,20.6076439 9.19173744,20.9482211 9.19173744,21.3243423 C9.19173744,21.7008564 9.03914182,22.041722 8.79249328,22.2884726 C8.54593568,22.5351321 8.20536381,22.6877738 7.82924901,22.6877738 C7.45274124,22.6877738 7.11188089,22.535174 6.8651491,22.2884422 C6.6184173,22.0417104 6.46581744,21.70085 6.46581744,21.3243423 C6.46581744,20.9482275 6.61845915,20.6076556 6.86511871,20.361098 C7.11186926,20.1144495 7.45273485,19.9618538 7.82924901,19.9618538 Z" id="Stroke-7-Copy" stroke-width="1.836"/>
        </g>
    </g>
</symbol>
<use xlink:href="#icon-shopping-list-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
                    <use xlink:href="#icon-shopping-list"></use>
                </svg>
            
        </a>
    </div>
</div>

  <div class="o-Header__m-NavItemWrap m-NavItemWrap--profile" data-animate-menu="animate">

  
  
    <div class="o-Header__m-NavItem" data-type="menu-action" data-dropdown="true">
    <div class="o-Header__m-Navigation m-Navigation--IconWrap">
        <button data-type="button-header-profile" aria-label="User Profile Menu" aria-haspopup="dialog" aria-expanded="false" aria-controls="mod-nav-profile-1">
    
        <svg class="o-Header__a-Icon a-Icon--Profile" aria-hidden="true">
            <symbol id="icon-profile-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 27 27">
    <defs>
        <path d="M17.5 13.75c0 2.761-2.239 5-5 5s-5-2.239-5-5h10z" id="prefix__a"/>
    </defs>
    <g fill="none" fill-rule="evenodd" transform="translate(1 1)">
        <path d="M25 12.5C25 19.404 19.404 25 12.5 25S0 19.404 0 12.5 5.596 0 12.5 0 25 5.596 25 12.5z" fill="#FFF" stroke="#1C1C1C" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"/>
        <path d="M9.643 7.679c0 .592-.48 1.071-1.072 1.071-.59 0-1.071-.48-1.071-1.071 0-.592.48-1.072 1.071-1.072.592 0 1.072.48 1.072 1.072zM17.5 7.679c0 .592-.48 1.071-1.071 1.071-.592 0-1.072-.48-1.072-1.071 0-.592.48-1.072 1.072-1.072.592 0 1.071.48 1.071 1.072z" fill="#000"/>
        <path d="M18.202 13H6.798c-.238 1.882.434 3.614 1.636 4.816 1.04 1.04 2.478 1.684 4.066 1.684 1.588 0 3.025-.644 4.066-1.684 1.202-1.202 1.874-2.934 1.636-4.816z" stroke="#1C1C1C" stroke-width="1.5"/>
    </g>
</symbol>
<use xlink:href="#icon-profile-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
        </svg>
     
    
    <svg class="o-Header__a-Icon a-Icon--Profile-hover" aria-hidden="true">
            <symbol id="icon-profile-hover-3fc94154-fcb0-4792-848c-6f89bd8fb484" viewBox="0 0 27 27">
    <g fill="none" fill-rule="evenodd">
        <path d="M25 12.5C25 19.404 19.404 25 12.5 25S0 19.404 0 12.5 5.596 0 12.5 0 25 5.596 25 12.5z" fill="#FFDF56" stroke="#1C1C1C" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" transform="translate(1 1)"/>
        <path d="M9.643 7.679c0 .592-.48 1.071-1.072 1.071-.59 0-1.071-.48-1.071-1.071 0-.592.48-1.072 1.071-1.072.592 0 1.072.48 1.072 1.072zM17.5 7.679c0 .592-.48 1.071-1.071 1.071-.592 0-1.072-.48-1.072-1.071 0-.592.48-1.072 1.072-1.072.592 0 1.071.48 1.071 1.072z" fill="#000" transform="translate(1 1)"/>
        <g>
            <path d="M11.202-.75H-.202C-.44 1.132.232 2.864 1.434 4.066 2.474 5.106 3.912 5.75 5.5 5.75c1.588 0 3.025-.644 4.066-1.684 1.202-1.202 1.874-2.934 1.636-4.816z" fill="#E6003D" stroke="#1C1C1C" stroke-linejoin="round" stroke-width="1.5" transform="translate(1 1) translate(7 13.75)"/>
            <path d="M9.058 3.487C8.15 2.569 6.892 2 5.5 2c-1.418 0-2.698.59-3.608 1.538C1.03 4.436 4.167 5.25 6 5.25c1.5 0 3.95-.86 3.058-1.763z" fill="#FF626A" transform="translate(1 1) translate(7 13.75)"/>
            <path d="M11.202-.75H-.202C-.44 1.132.232 2.864 1.434 4.066 2.474 5.106 3.912 5.75 5.5 5.75c1.588 0 3.025-.644 4.066-1.684 1.202-1.202 1.874-2.934 1.636-4.816z" stroke="#1C1C1C" stroke-linejoin="round" stroke-width="1.5" transform="translate(1 1) translate(7 13.75)"/>
        </g>
    </g>
</symbol>
<use xlink:href="#icon-profile-hover-3fc94154-fcb0-4792-848c-6f89bd8fb484"></use>
    </svg>
     
</button>
    </div>
    <div data-module="nav-profile" data-type="dropdown-menu" class="o-Header__m-DropdownMenu o-Header__m-DropdownMenu--Profile">
    </div>
    </div>
  

  
  


</div>


</div>
    </section>

    <section class="o-Header__m-Area o-Header__m-Area--Bottom">

</section>
 



  














</header>

    
  
  

</div>


    
    
        
            <div id="pushdown_adtag" class="iax_outer">
              <div id="brandscape"></div>
              <div class="iax_inner">
                <div id='dfp_pushdown_brandscape'></div>
              </div>
             </div>
        
        
    

    
    



  













<div class="area" data-sni-area="content">
  
<div class="container is-Fluid">
	<div class="breadcrumb"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/general/breadcrumb"></span>






  



























    
    
        
    











    




    
    
    




  
















    <ul class="o-Breadcrumb o-Breadcrumb--Dark has-Banner">
        
            
        
            
                
                <li>
                    <a href="//www.foodnetwork.com">
                        <span>Home</span>
                    </a>
                </li>
            
        
    </ul>

</div>

    <div class="contentTop parsys">



</div>

</div>

  



  




























    
    


















<div class="o-Hub">

    

    
    
    

    

    <div class="container ">
        
    </div>
</div>


  <div class="container-site is-Fluid">
    <div class="container-fluid">
      
<div class="row">
    <div class="col-md-28">
        <div class="top parsys">



</div>

    </div>
</div>

    <div class="row">
      <div class="col-md-18">
        <div class="content-well">
          



  













<div class="sponsor-logos-wrap">
  <div class="sponsor-logos"><div id="dfp_logo"></div></div>

  <div class="assetTitle"><span style="display: none" class="clicktracking" data-resource-type="/apps/foodcom/components/article/assetTitle"></span>


  
    
  


<section class="o-AssetTitle">
  <h1 class="o-AssetTitle__a-Headline">
    <span class="o-AssetTitle__a-HeadlineText">Page Not Found</span>
  </h1>
</section>
</div>

  <div class="assetDescription"><span style="display: none" class="clicktracking" data-resource-type="/apps/foodcom/components/article/assetDescription"></span>


  
    
  



  
  <section data-module="asset-description" class="o-AssetDescription">
    <div class="o-AssetDescription__a-Description">
      <p><i>The page you're looking for seems to have disappeared! Maybe you typed in the URL incorrectly; why don't you check the web address again? If you bookmarked the page, try our search to find what you're looking for.</i></p>
<p></p>
<p><i>If you feel you've reached this page in error, please <a href="https://help.foodnetwork.com" class="editorial-link-no-style">contact us</a>. You can also visit the <a href="//www.foodnetwork.com">FoodNetwork.com homepage</a> to browse the site.</i></p>
    </div>
  </section>

</div>

</div>





  












<div class="articleBody parsys">


<div class="editorialPromo capsule section"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/promotion/editorialPromo"></span>

  




   <section class="o-Capsule o-EditorialPromo  ">

    
    


  <header class="o-Capsule__m-Header">
    <div class="o-Capsule__m-TextWrap">
      
  

      
    </div>
    
  

  </header>



    
    <div class="o-Capsule__m-Body">
        

  
  
    
  


  


  
  

  
  
  
  
  
    
    
    
    <div class=" l-Columns l-Columns--3up  list-image" data-module="editorial-promo">
      
      
   
 	<div class="m-MediaBlock m-MediaBlock--EditorialPromo m-MediaBlock--gallery ">
      <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
        
           	
  <a class="m-MediaBlock__m-ResponsiveImage--Link" href="//www.foodnetwork.com/recipes/photos/food-network-kitchen-s-best-recipes" tabindex="-1" title="More Than 100 Tried + True Recipes from Our Test Kitchen">
    
    <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
      <img class="m-ResponsiveImage__a-Image a-Image" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2020/03/10/0/FNK_BEST-CHICKEN-AND-RICE-H_s4x3.jpg.rend.hgtvcom.266.200.suffix/1583851621211.jpeg" alt="More Than 100 Tried + True Recipes from Our Test Kitchen"/>
    </div>
    <noscript>
      <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
        <img class="m-ResponsiveImage__a-Image a-Image" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2020/03/10/0/FNK_BEST-CHICKEN-AND-RICE-H_s4x3.jpg.rend.hgtvcom.266.200.suffix/1583851621211.jpeg" alt="More Than 100 Tried + True Recipes from Our Test Kitchen"/>
      </div>
    </noscript>
  </a>

  

            
            
  

            

      

      </div>

        <div class="m-MediaBlock__m-TextWrap">

            
            
  


       	   

           
  <h3 class="m-MediaBlock__a-Headline">
    <a href="//www.foodnetwork.com/recipes/photos/food-network-kitchen-s-best-recipes">
      <span class="m-MediaBlock__a-HeadlineText">More Than 100 Tried + True Recipes from Our Test Kitchen</span>
      
    </a>
  </h3>


            
  


            
  


            

			
  


			 

            
  

            
              

              
            
        </div>

    </div>


    
      
      
   
 	<div class="m-MediaBlock m-MediaBlock--EditorialPromo m-MediaBlock--gallery ">
      <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
        
           	
  <a class="m-MediaBlock__m-ResponsiveImage--Link" href="//www.foodnetwork.com/recipes/photos/cookie-recipes" tabindex="-1" title="Classic Cookie Recipes Everyone Should Know">
    
    <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
      <img class="m-ResponsiveImage__a-Image a-Image" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2014/7/17/1/FN_Simple-Chocolate-Chip-Cookies_s4x3.jpg.rend.hgtvcom.266.200.suffix/1438794106265.jpeg" alt="Classic Cookie Recipes Everyone Should Know" title="FNK_SimpleChocolateChipCookies_H"/>
    </div>
    <noscript>
      <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
        <img class="m-ResponsiveImage__a-Image a-Image" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2014/7/17/1/FN_Simple-Chocolate-Chip-Cookies_s4x3.jpg.rend.hgtvcom.266.200.suffix/1438794106265.jpeg" alt="Classic Cookie Recipes Everyone Should Know" title="FNK_SimpleChocolateChipCookies_H"/>
      </div>
    </noscript>
  </a>

  

            
            
  

            

      

      </div>

        <div class="m-MediaBlock__m-TextWrap">

            
            
  


       	   

           
  <h3 class="m-MediaBlock__a-Headline">
    <a href="//www.foodnetwork.com/recipes/photos/cookie-recipes">
      <span class="m-MediaBlock__a-HeadlineText">Classic Cookie Recipes Everyone Should Know</span>
      
    </a>
  </h3>


            
  


            
  


            

			
  


			 

            
  

            
              

              
            
        </div>

    </div>


    
      
      
   
 	<div class="m-MediaBlock m-MediaBlock--EditorialPromo m-MediaBlock--gallery ">
      <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
        
           	
  <a class="m-MediaBlock__m-ResponsiveImage--Link" href="//www.foodnetwork.com/recipes/photos/30-minute-dinner-recipes" tabindex="-1" title="30-Minute Dinner Recipes That’ll Save Your Weeknights">
    
    <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
      <img class="m-ResponsiveImage__a-Image a-Image" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2018/5/1/0/fnk_buffalo-chicken-enchiladas-h1_s4x3.jpg.rend.hgtvcom.266.200.suffix/1525187347682.jpeg" alt="30-Minute Dinner Recipes That’ll Save Your Weeknights"/>
    </div>
    <noscript>
      <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
        <img class="m-ResponsiveImage__a-Image a-Image" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2018/5/1/0/fnk_buffalo-chicken-enchiladas-h1_s4x3.jpg.rend.hgtvcom.266.200.suffix/1525187347682.jpeg" alt="30-Minute Dinner Recipes That’ll Save Your Weeknights"/>
      </div>
    </noscript>
  </a>

  

            
            
  

            

      

      </div>

        <div class="m-MediaBlock__m-TextWrap">

            
            
  


       	   

           
  <h3 class="m-MediaBlock__a-Headline">
    <a href="//www.foodnetwork.com/recipes/photos/30-minute-dinner-recipes">
      <span class="m-MediaBlock__a-HeadlineText">30-Minute Dinner Recipes That’ll Save Your Weeknights</span>
      
    </a>
  </h3>


            
  


            
  


            

			
  


			 

            
  

            
              

              
            
        </div>

    </div>


    </div>
  


    </div>

    
    


  <footer class="o-Capsule__m-Footer">

      

  </footer>



  </section>

</div>
<div class="editorialPromo capsule section"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/promotion/editorialPromo"></span>

  




   <section class="o-Capsule o-EditorialPromo  ">

    
    


  <header class="o-Capsule__m-Header">
    <div class="o-Capsule__m-TextWrap">
      
  

      
    </div>
    
  

  </header>



    
    <div class="o-Capsule__m-Body">
        

  
  
    
  


  


  
  

  
  
  
  
  
    
    
    
    <div class=" l-Columns l-Columns--3up  list-image" data-module="editorial-promo">
      
      
   
 	<div class="m-MediaBlock m-MediaBlock--EditorialPromo m-MediaBlock--gallery ">
      <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
        
           	
  <a class="m-MediaBlock__m-ResponsiveImage--Link" href="//www.foodnetwork.com/recipes/photos/easy-dessert-recipes" tabindex="-1" title="Easy Desserts That Absolutely Anyone Can Make">
    
    <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
      <img class="m-ResponsiveImage__a-Image a-Image" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2016/3/28/0/FNK_Flourless-Chocolate-Cake_s4x3.jpg.rend.hgtvcom.266.200.suffix/1459253913073.jpeg" alt="Easy Desserts That Absolutely Anyone Can Make" title="FNK_FlourlessChocolateCake_H"/>
    </div>
    <noscript>
      <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
        <img class="m-ResponsiveImage__a-Image a-Image" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2016/3/28/0/FNK_Flourless-Chocolate-Cake_s4x3.jpg.rend.hgtvcom.266.200.suffix/1459253913073.jpeg" alt="Easy Desserts That Absolutely Anyone Can Make" title="FNK_FlourlessChocolateCake_H"/>
      </div>
    </noscript>
  </a>

  

            
            
  

            

      

      </div>

        <div class="m-MediaBlock__m-TextWrap">

            
            
  


       	   

           
  <h3 class="m-MediaBlock__a-Headline">
    <a href="//www.foodnetwork.com/recipes/photos/easy-dessert-recipes">
      <span class="m-MediaBlock__a-HeadlineText">Easy Desserts That Absolutely Anyone Can Make</span>
      
    </a>
  </h3>


            
  


            
  


            

			
  


			 

            
  

            
              

              
            
        </div>

    </div>


    
      
      
   
 	<div class="m-MediaBlock m-MediaBlock--EditorialPromo m-MediaBlock--gallery ">
      <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
        
           	
  <a class="m-MediaBlock__m-ResponsiveImage--Link" href="//www.foodnetwork.com/healthy/packages/healthy-every-week/quick-and-simple/healthy-dinners-in-40-minutes-or-less" tabindex="-1" title="Quick + Healthy Meals to Keep in Your Back Pocket">
    
    <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
      <img class="m-ResponsiveImage__a-Image a-Image" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2016/4/26/0/HE_kwon-Ground-Turkey-Enchilada-Stir-Fry-with-Couscous_s4x3.jpg.rend.hgtvcom.266.200.suffix/1461695054811.jpeg" alt="Quick + Healthy Meals to Keep in Your Back Pocket"/>
    </div>
    <noscript>
      <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
        <img class="m-ResponsiveImage__a-Image a-Image" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2016/4/26/0/HE_kwon-Ground-Turkey-Enchilada-Stir-Fry-with-Couscous_s4x3.jpg.rend.hgtvcom.266.200.suffix/1461695054811.jpeg" alt="Quick + Healthy Meals to Keep in Your Back Pocket"/>
      </div>
    </noscript>
  </a>

  

            
            
  

            

      

      </div>

        <div class="m-MediaBlock__m-TextWrap">

            
            
  


       	   

           
  <h3 class="m-MediaBlock__a-Headline">
    <a href="//www.foodnetwork.com/healthy/packages/healthy-every-week/quick-and-simple/healthy-dinners-in-40-minutes-or-less">
      <span class="m-MediaBlock__a-HeadlineText">Quick + Healthy Meals to Keep in Your Back Pocket</span>
      
    </a>
  </h3>


            
  


            
  


            

			
  


			 

            
  

            
              

              
            
        </div>

    </div>


    
      
      
   
 	<div class="m-MediaBlock m-MediaBlock--EditorialPromo m-MediaBlock--gallery ">
      <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
        
           	
  <a class="m-MediaBlock__m-ResponsiveImage--Link" href="//www.foodnetwork.com/recipes/photos/our-best-chicken-thigh-recipes" tabindex="-1" title="Chicken Thigh Recipes You’ll Make All the Time">
    
    <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
      <img class="m-ResponsiveImage__a-Image a-Image" data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2018/5/1/0/FNK_Fall-off-the-Bone-Chicken-H2_s4x3.jpg.rend.hgtvcom.266.200.suffix/1525187349003.jpeg" alt="Chicken Thigh Recipes You’ll Make All the Time"/>
    </div>
    <noscript>
      <div class="m-MediaBlock__m-ResponsiveImage m-MediaBlock__m-ResponsiveImage--4x3 m-ResponsiveImage m-ResponsiveImage--4x3">
        <img class="m-ResponsiveImage__a-Image a-Image" src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2018/5/1/0/FNK_Fall-off-the-Bone-Chicken-H2_s4x3.jpg.rend.hgtvcom.266.200.suffix/1525187349003.jpeg" alt="Chicken Thigh Recipes You’ll Make All the Time"/>
      </div>
    </noscript>
  </a>

  

            
            
  

            

      

      </div>

        <div class="m-MediaBlock__m-TextWrap">

            
            
  


       	   

           
  <h3 class="m-MediaBlock__a-Headline">
    <a href="//www.foodnetwork.com/recipes/photos/our-best-chicken-thigh-recipes">
      <span class="m-MediaBlock__a-HeadlineText">Chicken Thigh Recipes You’ll Make All the Time</span>
      
    </a>
  </h3>


            
  


            
  


            

			
  


			 

            
  

            
              

              
            
        </div>

    </div>


    </div>
  


    </div>

    
    


  <footer class="o-Capsule__m-Footer">

      

  </footer>



  </section>

</div>
<div class="contentFeed section"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/promotion/contentFeed"></span>



  














 





  
  
    

    
    
    
    
    
    
    
    
    
    

    
      
    
    
  







  
  
    
  







  

















  <section class="o-Capsule o-ContentFeed" data-module="content-feed">
    <script type="text/x-config">{
    "loadMore": {
      "loadContainer": ".u-LoadMoreDest",
      "loadDataSource" : ".u-LoadMoreSrc",
      "loadButtonClass": "[data-type='load-more-btn']",
      "limit": "10"
    }
  }

    </script>

    <header class="o-Capsule__m-Header">
      <div class="o-Capsule__m-TextWrap">
        
          <h2 class="o-Capsule__a-Headline">
          <span class="o-Capsule__a-HeadlineText">
            What&#039;s New on Food Network
          </span>
          </h2>
        
      </div>
      
    </header>

    <div class="o-Capsule__m-Body">
      <div class="l-List u-LoadMoreDest">
      
        
          
        	



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/healthyeats/diets/what-is-anti-inflammation-diet" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/08/FN_GettyImages-505430196_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707419820448.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Just Now
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/healthyeats/diets/what-is-anti-inflammation-diet">
        <span class="m-MediaBlock__a-HeadlineText">
          What Is the Anti-Inflammation Diet?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/serena-ball">Serena Ball, M.S., R.D.</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Though it’s not a strictly defined diet per se, eating certain foods can help prevent or even fan the flames of inflammation.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

        
          
        	



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/wildcard-kitchen-eric-adjepong" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/1/QCMU102_Eric-Adjepong.jpg.rend.hgtvcom.231.174.suffix/1707401218210.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Just Now
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/wildcard-kitchen-eric-adjepong">
        <span class="m-MediaBlock__a-HeadlineText">
          We&#039;re Serving Up Our First-Ever After-Hours Culinary Poker Game in All-New Series Wildcard Kitchen
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Don&#039;t miss the series premiere on Tuesday, March 12 at 9|8c.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

        
          
        	



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/what-is-king-cake" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/07/FN_king-cake-lead-getty_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707339046772.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Yesterday
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/what-is-king-cake">
        <span class="m-MediaBlock__a-HeadlineText">
          What Is King Cake?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/talent/food-network-kitchen">Food Network Kitchen</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    And why is there a plastic baby inside?
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

        
          
        	



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/where-to-get-heart-shaped-pizza-valentines-day-2024" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/07/FN_Papa-Johns_Heart-Shaped_NoText_2024_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707338390897.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Yesterday
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/where-to-get-heart-shaped-pizza-valentines-day-2024">
        <span class="m-MediaBlock__a-HeadlineText">
          Where To Get Heart-Shaped Pizzas for Valentine’s Day 2024
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/amy-reiter">Amy Reiter</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Pizza is a great way to say &#039;I Love You&#039; — or ‘Goodbye?’
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

        
          
        	



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/how-to-thaw-chicken-quickly" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/boneless-skinless-chicken-breast-on-board.jpg.rend.hgtvcom.231.174.suffix/1707156194483.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Yesterday
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/how-to-thaw-chicken-quickly">
        <span class="m-MediaBlock__a-HeadlineText">
          3 Ways to Thaw Your Chicken Quickly
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/talent/food-network-kitchen">Food Network Kitchen</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Here, the only ways to safely thaw chicken quickly according to the USDA.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

        
          
        	



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/what-are-sweetbreads" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/07/sweetbreads-and-mushrooms.jpg.rend.hgtvcom.231.174.suffix/1707325861101.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Yesterday
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/what-are-sweetbreads">
        <span class="m-MediaBlock__a-HeadlineText">
          What Are Sweetbreads?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/talent/food-network-kitchen">Food Network Kitchen</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    They&#039;re the darling of French chefs.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

        
      </div>
      
        <div class="u-LoadMoreSrc">
        
          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/what-does-coca-cola-spiced-taste-like" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/06/FN_Spiced-Lifestyle-Photo_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707276443738.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
   	    <span class="m-MediaBlock__a-Time">
         Yesterday
		</span>
      
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/what-does-coca-cola-spiced-taste-like">
        <span class="m-MediaBlock__a-HeadlineText">
          Coca-Cola Releases Its First Permanent Flavor in Three Years – Here’s What ‘Spiced’ Tastes Like
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/adam-campbell-schmitt">Adam Campbell-Schmitt</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    As if one new flavor wasn’t enough, the brand is also launching a TikTok-exclusive drink called &#039;Coca-Cola Happy Tears.&#039;
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/taylor-swift-travis-kelce-super-bowl-party-ideas-food-recipes" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/06/FN_GettyImages-1968530700_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707251499508.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/taylor-swift-travis-kelce-super-bowl-party-ideas-food-recipes">
        <span class="m-MediaBlock__a-HeadlineText">
          How to Throw a Party If You’re Only Watching the Super Bowl for Taylor Swift
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="/profiles/samantha-lande">Samantha Lande</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Bring Taylor’s famous chai cookies and Travis’ BBQ favorites to your spread.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/how-to-make-breadcrumbs" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/bread-crumbs-in-bowl-on%20board.jpg.rend.hgtvcom.231.174.suffix/1706974999876.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/how-to-make-breadcrumbs">
        <span class="m-MediaBlock__a-HeadlineText">
          How to Make Breadcrumbs
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/talent/food-network-kitchen">Food Network Kitchen</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Never again will you throw out stale, crusty bread.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/shopping/lunar-new-year-foods-gifts" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_Te-Company-3_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707159929943.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/shopping/lunar-new-year-foods-gifts">
        <span class="m-MediaBlock__a-HeadlineText">
          32 Lunar New Year Food Gifts We Can’t Wait to Bring to the Table
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/patty-lee">Patty Lee</a>,
                                    </span>
                                
                                
                            
                        
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                    <a href="//www.foodnetwork.com/profiles/editorial/margaret-wong">Margaret Wong</a>
                                    </span>
                                
                                
                            
                        
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    and
                                    <a href="//www.foodnetwork.com/profiles/editorial/meagan-adler">Meagan Adler</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    One of them? A giant White Rabbit candy.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/how-to-make-pour-over-coffee" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/1-4/making-pour-over-coffee.jpg.rend.hgtvcom.231.174.suffix/1706483769040.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/how-to-make-pour-over-coffee">
        <span class="m-MediaBlock__a-HeadlineText">
          How to Make Pour Over Coffee
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/talent/food-network-kitchen">Food Network Kitchen</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Here, a concise step-by-step guide.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/is-eating-toothpicks-safe" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_GettyImages-1059683908_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707151179108.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/is-eating-toothpicks-safe">
        <span class="m-MediaBlock__a-HeadlineText">
          Please Don’t Fry Your Toothpicks and Eat Them
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/adam-campbell-schmitt">Adam Campbell-Schmitt</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Viral TikTok videos have prompted a warning from the South Korean government.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/where-to-get-truly-hot-wing-sauce-hard-seltzer" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/02/5/FN_truly-wing-seltzer_s4x3.jpg.rend.hgtvcom.231.174.suffix/1707149205754.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/where-to-get-truly-hot-wing-sauce-hard-seltzer">
        <span class="m-MediaBlock__a-HeadlineText">
          We Tried Truly’s New Hot Wing Sauce-Flavored Hard Seltzer
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/amy-reiter">Amy Reiter</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Here’s where to snag this, er, interesting drink.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/can-you-eat-banana-peels" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/bunch-of-banana-peels-in-pile-close-up.jpg.rend.hgtvcom.231.174.suffix/1706643291230.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/can-you-eat-banana-peels">
        <span class="m-MediaBlock__a-HeadlineText">
          Can You Eat Banana Peels?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/layla-khoury-hanold">Layla Khoury-Hanold</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Here, the risks and the benefits.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/food-network-hot-list-2024" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/FN_Hot-List-2024.png.rend.hgtvcom.231.174.suffix/1706717405496.png" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/food-network-hot-list-2024">
        <span class="m-MediaBlock__a-HeadlineText">
          Food Network’s Newest “Hot List” — Stars to Watch in 2024
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    We’re so excited to announce our third annual Food Network Hot List, our picks for some of the most-exciting food personalities an
        
          &hellip;
          
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/shopping/sales-and-deals/our-place-valentines-day-sale" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2024/2/2/rx_our-place_food-lovers-sale.jpg.rend.hgtvcom.231.174.suffix/1706911003939.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/shopping/sales-and-deals/our-place-valentines-day-sale">
        <span class="m-MediaBlock__a-HeadlineText">
          Don&#039;t Miss the Our Place Food Lover&#039;s Sale Happening Now
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/allison-russo">Allison Russo</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Save up to 25 percent sitewide — just in time for Valentine&#039;s Day.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-panini-presses" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/2/rx_greenpan-elite-7-in-1-contact-grill-griddle--waffler.jpeg.rend.hgtvcom.231.174.suffix/1688309508400.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-panini-presses">
        <span class="m-MediaBlock__a-HeadlineText">
          4 Best Panini Presses of 2024, Tested and Reviewed
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/taylor-murray">Taylor Murray</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    These are the best panini presses and sandwich makers for grilled cheese, grilled sandwiches and more.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/does-honey-go-bad" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/wooden-honey-dipper-dripping-into-jar-of-honey.jpg.rend.hgtvcom.231.174.suffix/1706637867946.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/does-honey-go-bad">
        <span class="m-MediaBlock__a-HeadlineText">
          Why Doesn’t Honey Expire?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/layla-khoury-hanold">Layla Khoury-Hanold</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Plus, how to store honey and what to do if it crystalizes.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/is-it-okay-to-microwave-styrofoam" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/styrofoam-take-out-container-close-up.jpg.rend.hgtvcom.231.174.suffix/1706640238663.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/is-it-okay-to-microwave-styrofoam">
        <span class="m-MediaBlock__a-HeadlineText">
          Is It Okay to Microwave Styrofoam?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/layla-khoury-hanold">Layla Khoury-Hanold</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    And can it go in the oven?
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/help-around-the-kitchen/how-to-open-a-jar" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/stuck-jar-open-hero.jpg.rend.hgtvcom.231.174.suffix/1706644470320.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/help-around-the-kitchen/how-to-open-a-jar">
        <span class="m-MediaBlock__a-HeadlineText">
          6 Ways to Open a Stuck Jar
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/emily-saladino">Emily Saladino</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    If a stubborn lid is sealed tight, don’t fret. Get six tried-and-true tips for opening a jar in no time.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-air-fryer" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2023/4/06/FN-ProductTestingImages-05-March%202023-Air%20Fryers-v2.png.rend.hgtvcom.231.174.suffix/1680812601420.png" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-air-fryer">
        <span class="m-MediaBlock__a-HeadlineText">
          9 Best Air Fryers of 2024, Tested and Reviewed
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/food-network-shopping-experts">Food Network Shopping Experts</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    The best air fryers can churn out crispy fries, crunchy chicken wings and quick weeknight dinners without fail.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/shopping/best-black-owned-liquor-spirits-brands" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/20/rx_ten-to-one-lifestyle.jpg.rend.hgtvcom.231.174.suffix/1689893861983.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/shopping/best-black-owned-liquor-spirits-brands">
        <span class="m-MediaBlock__a-HeadlineText">
          6 Black-Owned Spirits Brands You Need To Know
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                     
                                      By:
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                      Rashaun Hall
                                    </span>
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    These top-shelf brands are worth adding to your at-home bar.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/shopping/pioneer-woman-instant-pot-sale" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2023/7/19/rx_the-pioneer-woman-6-qt-instant-pot-duo-in-sweet-romance-.jpeg.rend.hgtvcom.231.174.suffix/1689778218391.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/shopping/pioneer-woman-instant-pot-sale">
        <span class="m-MediaBlock__a-HeadlineText">
          Where to Buy the Pioneer Woman&#039;s Instant Pot Online
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/allison-russo">Allison Russo</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Though many designs are sold out at Walmart, you can find refurbished models and other products online.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-pizza-ovens" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2021/6/29/rx_Lifestyle--Ooni-Karu-16-Pizza_1_1000x800.jpeg.rend.hgtvcom.231.174.suffix/1624995599400.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/shopping/product-reviews/best-pizza-ovens">
        <span class="m-MediaBlock__a-HeadlineText">
          5 Best Pizza Ovens of 2024, Tested and Reviewed
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/taylor-murray">Taylor Murray</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    We tested 10 top-rated pizza ovens to find the very best for slinging pies in your own backyard.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/why-is-it-called-josh-wine" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/31/FN_JCELL_FY23_Portfolio_Base_Shot_s4x3.jpg.rend.hgtvcom.231.174.suffix/1706738857588.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/why-is-it-called-josh-wine">
        <span class="m-MediaBlock__a-HeadlineText">
          How Josh – The Wine the Internet Can’t Stop Meme-ing About – Got Its Name
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/alexandra-foster">Alexandra Foster</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Funnily enough, the wine’s namesake’s real name wasn’t even Josh.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/is-olive-oil-starbucks-drink-good" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/31/FN_Starbucks-Oleato-Duo---Lifestyle-2_s4x3.jpg.rend.hgtvcom.231.174.suffix/1706720470957.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/is-olive-oil-starbucks-drink-good">
        <span class="m-MediaBlock__a-HeadlineText">
          Now, Everyone Can Get Olive Oil in Their Starbucks Drink
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/amy-reiter">Amy Reiter</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    Previously offered in only 15 states, Starbucks is now offering Oleato beverages nationwide.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/shopping/beautiful-by-drew-barrymore-walmart-kitchen-line-rose-color-launch" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/products/2024/1/30/rx_walmart_beautiful-by-drew-barrymore-rose-colorway.jpg.rend.hgtvcom.231.174.suffix/1706645919751.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/shopping/beautiful-by-drew-barrymore-walmart-kitchen-line-rose-color-launch">
        <span class="m-MediaBlock__a-HeadlineText">
          Drew Barrymore&#039;s &#039;Beautiful&#039; Collection Just Dropped a New Limited-Edition Colorway
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/allison-russo">Allison Russo</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    And it&#039;s perfect for Valentine&#039;s Day!
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/are-mcdonalds-new-burgers-better-2024" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/FN_sidebyside-mcdonalds-burger_s4x3.jpg.rend.hgtvcom.231.174.suffix/1706646359701.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/are-mcdonalds-new-burgers-better-2024">
        <span class="m-MediaBlock__a-HeadlineText">
          Are McDonald’s New Burgers Actually Better?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/amy-reiter">Amy Reiter</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    We did a side-by-side comparison. Here’s what we found.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/what-is-imitation-crab-kani" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/imitation-crab-sticks-on-ice-in-bowl-with-soy-and-chopsticks.jpg.rend.hgtvcom.231.174.suffix/1706634103297.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/how-to/packages/food-network-essentials/what-is-imitation-crab-kani">
        <span class="m-MediaBlock__a-HeadlineText">
          What Is Imitation Crab (“Kani”)?
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/layla-khoury-hanold">Layla Khoury-Hanold</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    We dive into what&#039;s in imitation crab, how it&#039;s made and how to use it.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
            
            



  












  		
   	    
   	    
		
		
<div class="o-Capsule__m-MediaBlock m-MediaBlock">

  <div class="m-MediaBlock__m-MediaWrap" aria-hidden="true">
    <a href="//www.foodnetwork.com/fn-dish/news/dolly-parton-2024-duncan-hines-mixes" tabindex="-1">
	 
      
        
        
          
          
          
        
      
      
        
        
          
          
            
          
        
        
          
          
            <img data-src="//food.fnr.sndimg.com/content/dam/images/food/fullset/2024/01/30/FN_dolly-parton-duncan-hines-mixes_s4x3.jpg.rend.hgtvcom.231.174.suffix/1706630111092.jpeg" class="m-MediaBlock__a-Image" height="174" width="231">
          
        
      
      
      

     </a>
    
    

  </div>

  <div class="m-MediaBlock__m-TextWrap">
  
  
    <h3 class="m-MediaBlock__a-Headline">
      <a href="//www.foodnetwork.com/fn-dish/news/dolly-parton-2024-duncan-hines-mixes">
        <span class="m-MediaBlock__a-HeadlineText">
          Dolly Parton Says She’s More a Cook Than a Baker – That’s Why She Leans on Box Mixes
        </span>
            
       
       

        
      </a>

    </h3>
    
    
     
      
      
      
         <div class="m-MediaBlock__a-Credit">
         



  













    
        
            
            
                
                
                    
                    
                    
                        
                        
                        
                        
                            
                                
                                    <span class="m-MediaBlock__a-Credit--Prefix">
                                    </span>
                                    <span class="m-MediaBlock__a-Credit--Text">
                                    
                                     By: <a href="//www.foodnetwork.com/profiles/editorial/sabrina-choudhary">Sabrina Choudhary</a>
                                    </span>
                                
                                
                            
                        
                    
                
            
        
     
    
    


         </div>
      
      
      
     



  















  
  
  

     <div class="m-MediaBlock__a-Description">
      <p>
	    The country music icon is releasing six new baking mixes in partnership with Conagra and Duncan Hines.
        
      </p>
      </div>
     
  
  



    

    
  </div>

</div>

          
        </div>
      
    </div>

    <div class="o-Capsule__m-Footer">
      
        <div class="o-Capsule__m-ButtonNav">
          <button class="o-Capsule__a-Button" data-type="load-more-btn">
            
              
              Load More
            
          </button>
        </div>
      
    </div>

  </section>




</div>

</div>



<div class="packagePromo"><span style="display: none" class="clicktracking" data-resource-type="/apps/foodcom/components/hidden/packagePromo"></span>





  

















  
  
    
  



</div>


        </div>
      </div>
        <div class="col-md-10">
          



  













<div class="container-aside">

    <div class="rightRail">
      <div class="rightRailTop iparsys"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/hidden/iparsys"></span><div class="section"><div class="new"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/hidden/iparsys/new"></span></div>
</div><div class="iparys_inherited"><div class="rightRailTop iparsys"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/hidden/iparsys/par"></span>





  












</div>
</div>
</div>

    </div>

    <div class="module text-center">
        <div id="bigbox-rr-ad" class="rr-ad bigbox-ad">
            <div id='dfp_bigbox'></div>
        </div>
    </div>

    
        <div id="sponsorship_module" class="module">
            <div id="dfp_sponsorship_module" class="bigbox-ad rr-ad"></div>
        </div>
    

    <div class="rightRail iparsys"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/hidden/iparsys"></span><div class="section"><div class="new"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/hidden/iparsys/new"></span></div>
</div><div class="iparys_inherited"><div class="rightRail iparsys"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/hidden/iparsys/par"></span>





  












</div>
</div>
</div>


    
      <div class="module">
          <div id="dfp_prog_bigbox" class="bigbox-ad rr-ad"></div>
      </div>
    

 </div>

        </div>
      </div>
      

    </div>
  </div>
</div>


    
    <div id='dfp_utility1'></div>
    <div id='dfp_utility2'></div>

    
    
    
    <div class="footer"><span style="display: none" class="clicktracking" data-resource-type="foodcom/components/footer"></span>



  














  
    




  


























  

















<footer class="o-FooterFresh" data-module="footer">
  <div class="o-FooterFresh__m-BodyWrap">
    <div class="o-FooterFresh__m-Body">
      <div class="m-Body__m-PromoList">
        <ul>
          
              
              
                
                
                
                  <li class="">
                    <a href="//www.foodnetwork.com/site/site-map">Site Map</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/visitor-agreement/">Visitor Agreement</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="is-AdChoices">
                    <a href="https://corporate.discovery.com/tracking-technologies-notice/#targeted">AdChoices</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/privacy-policy/">Privacy Notice</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="//www.foodnetwork.com/site/about-foodnetwork-com">About</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/discovery-newsroom/">Newsroom</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/contact/advertising/">Advertise</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://help.foodnetwork.com/">Help</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="http://www.tvguidelines.org/ratings.html">TV Ratings</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/online-closed-captioning/">Online Closed Captioning</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/privacy-policy/#cappi">California Privacy Notice</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/website-accessibility-statement/">Accessibility</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="//www.foodnetwork.com/site/newsletter-sign-up">Newsletters</a>
                  </li>
                
              
          
              
              
                
                
                
                  <li class="">
                    <a href="https://corporate.discovery.com/">Discovery, Inc.</a>
                  </li>
                
              
          
              
              
                
                  <li>
                    <button data-type='one-trust' aria-label="Do Not Sell or Share My Personal Information">Do Not Sell or Share My Personal Information</button>
                  </li>
                
                
                
              
          
        </ul>
      </div>
      <ul class="o-FooterFresh__m-Info">
        
          
            <li class="o-FooterFresh__m-International has-DropdownMenu" data-type="menu-action">
              <a href="javascript:void(0);">International Editions</a>
              <ul class="m-DropdownMenu">
                <li><a href="https://www.foodnetwork.com">United States</a></li>
                <li><a href="http://www.asianfoodnetwork.com">Asia</a></li>
                <li><a href="http://www.foodnetwork.com.br">Brazil</a></li>
                <li><a href="http://www.foodnetwork.ca">Canada</a></li>
                <li><a href="http://www.foodnetworktv.com">Europe, Middle East &amp; Africa</a></li>
                <li><a href="http://www.foodnetwork.co.uk">United Kingdom</a></li>
                <li><a href="http://www.foodnetworklatam.com">Latin America</a></li>
              </ul>
            </li>
          
          <li class="o-FooterFresh__m-Brands has-DropdownMenu" data-type="menu-action">
            <a href="javascript:void(0);">The Discovery Family of Networks</a>
            <ul class="m-DropdownMenu">
              
                
                <li><a href="https://www.hgtv.com">HGTV</a></li>
              
                
                <li><a href="https://www.food.com/">Food.com</a></li>
              
                
                <li><a href="https://www.travelchannel.com">Travel Channel</a></li>
              
                
                <li><a href="https://www.tlc.com">TLC.com</a></li>
              
                
                <li><a href="https://www.discovery.com">Discovery.com</a></li>
              
                
                <li><a href="https://www.cookingchanneltv.com">Cooking Channel</a></li>
              
            </ul>
          </li>
        
        <li class="o-FooterFresh__a-Copyright">
          © 2024  Warner Bros. Discovery, Inc. or its subsidiaries and affiliates. All rights reserved.
        </li>
      </ul>
    </div>
  </div>
  
</footer>

  
  

</div>


  </section>

  

  
  



  















<template style="display: none;" data-ui-loader-clone><div class="a-LoaderWrap" tabindex="-1" data-ui-loader>
  <div class="a-Loader">
    <div></div>
    <div></div>
    <div></div>
    <div></div>
  </div>
</div>
</template>
<template style="display: none;" data-sharebar-clone>



  













<sly data-sly-use.brand="sni.models.view.helpers.Brand" />






















<ul class="m-SocialIcons l-Columns l-Columns--4up" data-social-share-wrap >



</ul>
</template>


<script src="//food.fnr.sndimg.com/etc/clientlibs/assets/v3/js/core.md5-86154045bda21c5751aee3f7bad75d2c.js"></script>







  














  <script src="//code.adsales.snidigital.com/datmcp/mcp-loader.js"></script>



<script>SNILoadEvents.trigger(['mdm', 'core', 'analytics', 'ads', 'sni-all']);</script>





  














  
  
  <script async src="https://www.googletagmanager.com/gtag/js?id=AW-935057167"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', 'AW-935057167');
  </script>










<script>
window.UTM_CAMPAIGN = "error404";
// Each brand has a specific Amazon tracking parameter called "tag" which is used in Amazon to track affiliate links.  The values below will not change.
window.__BRAND_TAGS = {
  'hgtv':   'hgtv03-20',
  'food':   'foodnetwor075-20',
  'golf':   'goldig-20',
  'tlc':    'tlcme-20',
  'travel': 'travelchann06-20'
};
</script>




  













<script>
function Amzn_ci_v4(target_selector,target_node){var BRAND=SNI&&SNI.Config&&SNI.Config.brand,SOURCE=window.__AMZN_SOURCE||BRAND||"",BRAND_TAG=window.__BRAND_TAGS&&window.__BRAND_TAGS[BRAND],CAMPAIGN=window.UTM_CAMPAIGN||"",targetSet;if(SOURCE&&(target_selector||target_node)){var anchorParent,list;if(target_selector)anchorParent=document.querySelector(target_selector);else{if(!target_node)return;anchorParent=target_node}var trackingParams={};trackingParams.asc_campaign=truncateString(CAMPAIGN,64),trackingParams.asc_source=truncateString(SOURCE,64),trackingParams.asc_refurl=truncateString(window.location!==window.parent.location?document.referrer:document.location.href,5120),list=anchorParent.getElementsByTagName("a"),anchors=Array.from(list);var amznLinks,filtered=anchors.filter((function(link){if(link.href){try{var url=new URL(link.href),regex=/.*amazon./;return url.hostname.match(regex)}catch(err){}return!1}})).filter((function(el){return el&&el.dataset&&!el.dataset.linkParams}));filtered.length&&(filtered.forEach((function(link){if(link.href)try{var url=new URL(link.href);for(var key in url.searchParams.has("tag")||url.searchParams.set("tag",BRAND_TAG),trackingParams)trackingParams[key]&&!url.searchParams.has(key)&&url.searchParams.set(key,trackingParams[key]);link.href=url.href,link.dataset.linkParams=!0}catch(err){console.error("Unable to add params to",link)}})),console.log("Completed running on links"))}else console.log("Amazon Insights script did not run");function truncateString(str,maxLength){return str.substring(0,maxLength)}}
Amzn_ci_v4(null,document.body);
</script>





  
























  
    <script type="text/javascript">
      function otLoaded() {
        console.log('OneTrust loaded');
        SNI.Application.broadcast('optanon-loaded',
          {
            skimId: "127242X1588896",
            disableAffiliation: "false",
            permittedPage: "true"
          });
      }
      if (WM && WM.UserConsent && WM.UserConsent.isOneTrustLoaded()) {
        otLoaded();
      } else {
        document.addEventListener('optanonLoaded', otLoaded, false);
      }
    </script>
  
  





<script type="text/javascript">
  (function(mdManager){
    var pageHasVideo = "false";
    var videoCount = window.VP_COUNT || 0;
    if (typeof enableForAutomation !== "undefined"){
      if (typeof newrelic === "object"){
        console.log("Automation: New Relic object is valid");
      }
      else {
        console.log("Automation: New Relic object is NOT valid");
      }
    }

    if (typeof newrelic === "object"){//If new relic agent is enabled
      if (typeof newrelic.setCustomAttribute === "function"){
        newrelic.setCustomAttribute("platform", "CORE");//send page type to new relic
        if (typeof mdManager  === "object"){
          if (typeof mdManager.getPageType === "function"){
            newrelic.setCustomAttribute("pageType", mdManager.getPageType());//send page type to new relic
          }
          if (typeof mdManager.getParameter  === "function"){
            newrelic.setCustomAttribute("deliveryChannel", mdManager.getParameter("Delivery_Channel"));//send device type to new relic
          }
          if (typeof mdManager.getSite  === "function"){
            newrelic.setCustomAttribute("site", mdManager.getSite().split('-')[0] );//send site/brand to new relic
          }
          if (typeof pageHasVideo !== "undefined") {
            newrelic.setCustomAttribute("video", pageHasVideo);
          }
          if (typeof videoCount !== "undefined") {
            newrelic.setCustomAttribute("videoCount", videoCount);
          }
        }
      }
    }
  })(mdManager);

</script>




  
  
  

  
  <script>
    (function () {
      const legalCopyDiv = $('<div class="o-AssetLegalCopy__a-LegalText a-LegalText"> ' + "Price and stock could change after publish date, and we may make money off these affiliate links. " + '</div>');
      const legalCopyInfoLink = "https://www.foodnetwork.com/profiles/editorial/food-network-shopping-experts";
      if (legalCopyInfoLink) {
        const infoLink = $('<a>').attr('href', legalCopyInfoLink).attr('target', '_blank').text("Learn more.");
        legalCopyDiv.append(infoLink);
      }
      if(!$('.legalCopy').length && $('.shopping-link-no-style').length) {
        if($('.assetDescription').length) {
          const finalLegalCopy = $('<div class=legalCopy>' + legalCopyDiv.prop('outerHTML') + '</div>')
          $('.assetDescription').after(finalLegalCopy);
        }
      }
    })();
  </script>

  
  <script type="text/javascript">

    $(function(){
      if( typeof SniAds === "object" ) {
        var adConfig = {
          breakpoints: {
            small: [0,0],
            medium: [600,0],
            large: [800,0],
            xlarge:[1920,0]
          },
          enableRepeatBigbox: {
            adClass: 'rr-ad bigbox-ad',
            mobile: {
              disable: ($('body.articlePage').length === 0)
            }
          }
          
        };
        
        SniAds.init(adConfig);
      }
    });
  </script>
  

  
  

  

  



  















  



  
  
  

  
  




  <script type="application/ld+json">[{"@context":"http://schema.org","@type":"BreadcrumbList","itemListElement":[{"@type":"ListItem","position":1,"item":{"@id":"https://www.foodnetwork.com","name":"Home"}}]}, {"@context":"http://schema.org","@type":"ItemList","itemListElement":[{"position":1,"url":"https://www.foodnetwork.com/recipes/photos/food-network-kitchen-s-best-recipes","@type":"ListItem"},{"position":2,"url":"https://www.foodnetwork.com/recipes/photos/cookie-recipes","@type":"ListItem"},{"position":3,"url":"https://www.foodnetwork.com/recipes/photos/30-minute-dinner-recipes","@type":"ListItem"},{"position":4,"url":"https://www.foodnetwork.com/recipes/photos/easy-dessert-recipes","@type":"ListItem"},{"position":5,"url":"https://www.foodnetwork.com/healthy/packages/healthy-every-week/quick-and-simple/healthy-dinners-in-40-minutes-or-less","@type":"ListItem"},{"position":6,"url":"https://www.foodnetwork.com/recipes/photos/our-best-chicken-thigh-recipes","@type":"ListItem"}]}]</script>




  
  



</body>

</html>

  recorded_at: Thu, 08 Feb 2024 22:22:01 GMT
recorded_with: VCR 6.2.0
